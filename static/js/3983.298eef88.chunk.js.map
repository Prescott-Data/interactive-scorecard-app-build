{"version":3,"file":"static/js/3983.298eef88.chunk.js","mappings":"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","sources":["D2App/modules/Main/Components/ScorecardMigration/services/migrate.js","D2App/modules/Main/Components/ScorecardMigration/hooks/useMigrateScorecard.js","D2App/modules/Main/Components/ScorecardMigration/hooks/useQueue.js","D2App/modules/Main/Components/ScorecardMigration/index.js","../../../../../node_modules/@dhis2-ui/loader/build/es/linear-loader/linear-loader.js"],"sourcesContent":["import { DATASTORE_ENDPOINT, DATASTORE_OLD_SCORECARD_ENDPOINT, DATASTORE_SCORECARD_SUMMARY_KEY } from \"@scorecard/shared\";\nimport { generateCreateMutation } from \"@scorecard/shared\";\nimport { filter, forIn, fromPairs, isEmpty } from \"lodash\";\nconst generateOldScorecardQueries = function () {\n  let ids = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return fromPairs(ids === null || ids === void 0 ? void 0 : ids.map(id => [id, {\n    resource: DATASTORE_OLD_SCORECARD_ENDPOINT,\n    id\n  }]));\n};\nexport async function getOldScorecards(engine, keys) {\n  if (isEmpty(keys)) {\n    return [];\n  }\n  const oldScorecardsObject = await engine.query(generateOldScorecardQueries(keys));\n  const oldScorecardsList = [];\n  forIn(oldScorecardsObject, (value, key) => {\n    oldScorecardsList.push({\n      ...value,\n      id: key\n    });\n  });\n  return oldScorecardsList;\n}\nexport const uploadNewScorecard = async _ref => {\n  let {\n    newScorecard,\n    engine\n  } = _ref;\n  if (newScorecard) {\n    return await engine.mutate(generateCreateMutation(newScorecard === null || newScorecard === void 0 ? void 0 : newScorecard.id), {\n      variables: {\n        data: newScorecard\n      }\n    });\n  }\n};\nexport async function getOldScorecardKeys(engine) {\n  try {\n    var _await$engine$query;\n    const {\n      keys\n    } = (_await$engine$query = await engine.query({\n      keys: {\n        resource: DATASTORE_OLD_SCORECARD_ENDPOINT\n      }\n    })) !== null && _await$engine$query !== void 0 ? _await$engine$query : {};\n    return keys;\n  } catch (e) {\n    return [];\n  }\n}\nexport async function getScorecardKeys(engine) {\n  try {\n    var _await$engine$query2;\n    const {\n      keys\n    } = (_await$engine$query2 = await engine.query({\n      keys: {\n        resource: DATASTORE_ENDPOINT\n      }\n    })) !== null && _await$engine$query2 !== void 0 ? _await$engine$query2 : {};\n    return filter(keys, key => !(key.includes(DATASTORE_SCORECARD_SUMMARY_KEY) || key.includes(\"settings\") || key.includes(\"savedObjects\")));\n  } catch (e) {\n    return [];\n  }\n}\nconst summaryMutation = {\n  type: \"update\",\n  resource: DATASTORE_ENDPOINT,\n  id: DATASTORE_SCORECARD_SUMMARY_KEY,\n  data: _ref2 => {\n    let {\n      data\n    } = _ref2;\n    return data;\n  }\n};\nexport const uploadSummary = async (engine, summary) => {\n  return await engine.mutate(summaryMutation, {\n    variables: {\n      data: summary\n    }\n  });\n};","import { useDataEngine } from \"@dhis2/app-runtime\";\nimport { useSetting } from \"@dhis2/app-service-datastore\";\nimport { DATA_MIGRATION_CHECK } from \"@scorecard/shared\";\nimport { AllScorecardsSummaryState } from \"@scorecard/shared\";\nimport { generateScorecardSummary, migrateScorecard } from \"@scorecard/shared\";\nimport { map as mapAsync } from \"async\";\nimport { compact, filter, isEmpty, map, uniqBy } from \"lodash\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useRecoilRefresher_UNSTABLE, useRecoilValue } from \"recoil\";\nimport { getOldScorecardKeys, getOldScorecards, getScorecardKeys, uploadNewScorecard, uploadSummary } from \"../services/migrate\";\nimport useQueue from \"./useQueue\";\nexport default function useMigrateScorecard(onComplete) {\n  const [error, setError] = useState();\n  const allSummary = useRecoilValue(AllScorecardsSummaryState);\n  const resetSummary = useRecoilRefresher_UNSTABLE(AllScorecardsSummaryState);\n  const [summaries, setSummaries] = useState();\n  const engine = useDataEngine();\n  const [, {\n    set: setSkipMigration\n  }] = useSetting(DATA_MIGRATION_CHECK, {\n    global: true\n  });\n  const migrate = useCallback(async scorecard => {\n    await uploadNewScorecard({\n      newScorecard: scorecard,\n      engine\n    });\n  }, [engine]);\n  const onMigrationComplete = useCallback(async () => {\n    await uploadSummary(engine, uniqBy([...allSummary, ...summaries], 'id'));\n    resetSummary();\n    setSkipMigration(true);\n    onComplete();\n  }, [allSummary, engine, onComplete, resetSummary, setSkipMigration, summaries]);\n  const {\n    add,\n    progress,\n    length,\n    started\n  } = useQueue({\n    drain: onMigrationComplete,\n    task: migrate\n  });\n  const onMigrationInitiated = useCallback(async () => {\n    try {\n      const scorecardKeys = await getScorecardKeys(engine);\n      const oldScorecardKeys = await getOldScorecardKeys(engine);\n      const filteredKeys = filter(oldScorecardKeys, key => {\n        return !scorecardKeys.includes(key);\n      });\n      if (filteredKeys && !isEmpty(filteredKeys)) {\n        const oldScorecards = compact(await getOldScorecards(engine, filteredKeys));\n        const newScorecards = compact(await mapAsync(oldScorecards, async oldScorecard => await migrateScorecard(oldScorecard, engine)));\n        const newScorecardsSummaries = compact(map(newScorecards, generateScorecardSummary));\n        setSummaries(newScorecardsSummaries);\n        for (const scorecard of newScorecards) {\n          add(scorecard);\n        }\n      } else {\n        onComplete();\n        setSkipMigration(true);\n      }\n    } catch (e) {\n      setError(e);\n      setSkipMigration(true);\n      onComplete();\n    }\n  }, [add, engine, onComplete, setSkipMigration]);\n  useEffect(() => {\n    onMigrationInitiated();\n  }, []);\n  return {\n    progress,\n    count: progress + length,\n    error,\n    migrationStarted: started\n  };\n}","import async from \"async\";\nimport { useCallback, useRef, useState } from \"react\";\nexport default function useQueue(_ref) {\n  var _queue$current, _queue$current2, _queue$current3, _queue$current4;\n  let {\n    drain,\n    task\n  } = _ref;\n  const [progress, setProgress] = useState(0);\n  const queue = useRef(async.queue((variable, callback) => {\n    task(variable).then(results => {\n      callback(results);\n    });\n  }, 1));\n  (_queue$current = queue.current) === null || _queue$current === void 0 ? void 0 : _queue$current.drain(drain);\n  const add = useCallback(task => {\n    queue.current.push(task, err => {\n      if (err) {\n        console.error(err);\n      }\n      setProgress(prevState => prevState + 1);\n    });\n  }, []);\n  return {\n    add,\n    started: (_queue$current2 = queue.current) === null || _queue$current2 === void 0 ? void 0 : _queue$current2.started,\n    kill: (_queue$current3 = queue.current) === null || _queue$current3 === void 0 ? void 0 : _queue$current3.kill,\n    progress,\n    length: (_queue$current4 = queue.current) === null || _queue$current4 === void 0 ? void 0 : _queue$current4.length()\n  };\n}","import { useAlert } from \"@dhis2/app-runtime\";\nimport i18n from \"@dhis2/d2-i18n\";\nimport { CircularLoader, LinearLoader } from \"@dhis2/ui\";\nimport React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport useMigrateScorecard from \"./hooks/useMigrateScorecard\";\nexport default function ScorecardMigration() {\n  const history = useHistory();\n  const onComplete = () => {\n    history.replace(\"/\");\n  };\n  const {\n    show\n  } = useAlert(_ref => {\n    let {\n      message\n    } = _ref;\n    return message;\n  }, _ref2 => {\n    let {\n      type\n    } = _ref2;\n    return {\n      ...type,\n      duration: 3000\n    };\n  });\n  const {\n    error,\n    progress,\n    count,\n    migrationStarted\n  } = useMigrateScorecard(onComplete);\n  useEffect(() => {\n    if (error) {\n      var _error$message;\n      show({\n        message: i18n.t(\"Error Migrating Scorecards: \" + ((_error$message = error === null || error === void 0 ? void 0 : error.message) !== null && _error$message !== void 0 ? _error$message : \"\")),\n        type: {\n          info: true\n        }\n      });\n    }\n  }, [error, show]);\n  if (!migrationStarted) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column center align-items-center h-100 w-100\"\n    }, /*#__PURE__*/React.createElement(CircularLoader, {\n      small: true\n    }), /*#__PURE__*/React.createElement(\"h4\", null, i18n.t(\"Preparing migration...\")));\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column center align-items-center h-100 w-100\"\n  }, /*#__PURE__*/React.createElement(LinearLoader, {\n    amount: progress / count * 100\n  }), /*#__PURE__*/React.createElement(\"h4\", null, i18n.t(\"Migrating scorecards\"), \"...\", +progress, \" \", i18n.t(\"of\"), \" \", +count));\n}","import _JSXStyle from \"styled-jsx/style\";\nimport { colors, theme, spacers } from '@dhis2/ui-constants';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Progress = _ref => {\n  let {\n    amount,\n    invert,\n    className\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: _JSXStyle.dynamic([[\"686723300\", [amount]], [\"3392977398\", [theme.primary600, colors.white]]]) + \" \" + (cx(className, {\n      invert\n    }) || \"\")\n  }, /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"686723300\",\n    dynamic: [amount]\n  }, [\"div.__jsx-style-dynamic-selector{width:\".concat(amount, \"%;}\")]), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"3392977398\",\n    dynamic: [theme.primary600, colors.white]\n  }, [\"div.__jsx-style-dynamic-selector{background-color:\".concat(theme.primary600, \";-webkit-transition:width 0.3s linear;transition:width 0.3s linear;height:4px;}\"), \".invert.__jsx-style-dynamic-selector{background-color:\".concat(colors.white, \";}\")]));\n};\n\nProgress.propTypes = {\n  amount: PropTypes.number.isRequired,\n  className: PropTypes.string,\n  invert: PropTypes.bool\n};\n\nconst LinearLoader = _ref2 => {\n  let {\n    amount,\n    width,\n    margin,\n    invert,\n    className,\n    dataTest\n  } = _ref2;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    role: \"progressbar\",\n    \"data-test\": dataTest,\n    className: \"jsx-3127531794 \" + _JSXStyle.dynamic([[\"3224415970\", [width, margin]]]) + \" \" + (cx(className, {\n      invert\n    }) || \"\")\n  }, /*#__PURE__*/React.createElement(Progress, {\n    amount: amount,\n    invert: invert\n  }), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"3127531794\"\n  }, [\"div.jsx-3127531794{display:block;overflow:hidden;overflow-x:hidden;overflow-y:hidden;background-color:rgba(110,122,138,0.15);}\", \".invert.jsx-3127531794{background-color:rgba(33,41,52,0.5);}\"]), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"3224415970\",\n    dynamic: [width, margin]\n  }, [\"div.__jsx-style-dynamic-selector{width:\".concat(width, \";margin:\").concat(margin, \";}\")]));\n};\n\nLinearLoader.defaultProps = {\n  margin: spacers.dp12,\n  width: '300px',\n  dataTest: 'dhis2-uicore-linearloader'\n};\nLinearLoader.propTypes = {\n  /** The progression in percent without the '%' sign */\n  amount: PropTypes.number.isRequired,\n  className: PropTypes.string,\n  dataTest: PropTypes.string,\n\n  /** Use inverted color scheme */\n  invert: PropTypes.bool,\n\n  /** The margin around the loader, can be a full shorthand */\n  margin: PropTypes.string,\n\n  /** The width of the entire indicator */\n  width: PropTypes.string\n};\nexport { LinearLoader };"],"names":["generateOldScorecardQueries","ids","arguments","length","undefined","fromPairs","map","id","resource","DATASTORE_OLD_SCORECARD_ENDPOINT","uploadNewScorecard","async","newScorecard","engine","_ref","mutate","generateCreateMutation","variables","data","summaryMutation","type","DATASTORE_ENDPOINT","DATASTORE_SCORECARD_SUMMARY_KEY","_ref2","uploadSummary","summary","useMigrateScorecard","onComplete","error","setError","useState","allSummary","useRecoilValue","AllScorecardsSummaryState","resetSummary","useRecoilRefresher_UNSTABLE","summaries","setSummaries","useDataEngine","set","setSkipMigration","useSetting","DATA_MIGRATION_CHECK","global","migrate","useCallback","scorecard","onMigrationComplete","uniqBy","add","progress","started","_queue$current","_queue$current2","_queue$current3","_queue$current4","drain","task","setProgress","queue","useRef","variable","callback","then","results","current","push","err","console","prevState","kill","useQueue","onMigrationInitiated","scorecardKeys","_await$engine$query2","keys","query","filter","key","includes","e","getScorecardKeys","oldScorecardKeys","_await$engine$query","getOldScorecardKeys","filteredKeys","isEmpty","oldScorecards","compact","oldScorecardsObject","oldScorecardsList","forIn","value","getOldScorecards","newScorecards","mapAsync","migrateScorecard","oldScorecard","newScorecardsSummaries","generateScorecardSummary","useEffect","count","migrationStarted","ScorecardMigration","history","useHistory","show","useAlert","message","duration","replace","_error$message","i18n","t","info","React","className","LinearLoader","amount","CircularLoader","small","Progress","invert","_JSXStyle","dynamic","theme","primary600","colors","white","cx","concat","propTypes","PropTypes","isRequired","width","margin","dataTest","role","defaultProps","spacers","dp12"],"sourceRoot":""}