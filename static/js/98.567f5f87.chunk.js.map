{"version":3,"file":"static/js/98.567f5f87.chunk.js","mappings":"8PAEe,SAASA,EAAWC,GACjC,IAAI,OACFC,GACED,EACJ,MAAM,KACJE,EAAI,MACJC,GACa,OAAXF,QAA8B,IAAXA,EAAoBA,EAAS,CAClDE,MAAO,WAET,OAAoBC,EAAAA,cAAoB,MAAO,CAC7CC,UAAW,0BACGD,EAAAA,cAAoB,MAAO,CACzCE,MAAO,CACLC,MAAO,GACPC,OAAQ,GACRC,WAAYN,EACZO,OAAQ,+BACRC,QAAS,MAEIP,EAAAA,cAAoB,IAAK,CACxCE,MAAO,CACLM,YAAa,EACbC,YAAa,IAEdX,GACL,CACAH,EAAWe,UAAY,CACrBb,OAAQc,IAAAA,OAAiBC,YC7B3B,OAAgB,mBAAmB,+CAA+C,QAAU,sCAAsC,MAAQ,qC,sBCS3H,SAASC,IACtB,MACEhB,OAAQiB,EACRC,OAAQC,IACNC,EAAAA,EAAAA,iBAAeC,EAAAA,EAAAA,IAAmB,YAChCC,GAAUF,EAAAA,EAAAA,iBAAeG,EAAAA,EAAAA,IAA0B,sBACnDC,GAAuBJ,EAAAA,EAAAA,gBAAeK,EAAAA,KACrCC,EAA4BC,IAAiCC,EAAAA,EAAAA,WAAS,GAC7E,OAAOX,KAAgBY,EAAAA,EAAAA,SAAQP,GAAwBnB,EAAAA,cAAoB,MAAO,CAChF,YAAa,UACbC,UAAW,UACGD,EAAAA,cAAoB,MAAO,KAAmBA,EAAAA,cAAoB,KAAM,KAAM2B,EAAAA,EAAKC,EAAE,aAA2B5B,EAAAA,cAAoB,MAAO,CACzJC,UAAW4B,EAAQ,qBACL7B,EAAAA,cAAoB,MAAO,CACzCC,UAAW4B,EAAiB,SACd7B,EAAAA,cAAoB,MAAO,CACzCC,UAAW,0BACE,OAAZkB,QAAgC,IAAZA,OAAqB,EAASA,EAAQW,KAAIjC,GAAuBG,EAAAA,cAAoBL,EAAY,CACtHoC,IAAKlC,EAAOE,MACZF,OAAQA,QACUG,EAAAA,cAAoB,MAAO,CAC7CC,UAAW4B,EAAe,OACZ7B,EAAAA,cAAoB,MAAO,CACzCC,UAAW,gDACVe,GAA2BhB,EAAAA,cAAoB,MAAO,CACvDE,MAAO,CACL8B,SAAU,KAEZ/B,UAAW,8BACGD,EAAAA,cAAoB,MAAO,CACzCC,UAAW,SACGD,EAAAA,cAAoB,MAAO,CACzCI,OAAQ,GACRD,MAAO,IACOH,EAAAA,cAAoBiC,EAAAA,EAAkB,CACpDC,SAAU,GACVC,EAAG,EACHC,EAAG,KACA,QAAST,EAAAA,EAAKC,EAAE,+BAA6C5B,EAAAA,cAAoB,MAAO,KAAmBA,EAAAA,cAAoB,MAAO,CACzII,OAAQ,GACRD,MAAO,IACOH,EAAAA,cAAoBqC,EAAAA,EAAkB,CACpDH,SAAU,GACVC,EAAG,GACHC,EAAG,KACA,QAAST,EAAAA,EAAKC,EAAE,gCAA8C5B,EAAAA,cAAoB,MAAO,CAC5FC,UAAW,aACXC,MAAO,CACL8B,SAAU,MAEXX,GAAqCrB,EAAAA,cAAoBsC,EAAAA,EAAQ,CAClEC,QAASA,IAAMf,GAA8B,IAC5CG,EAAAA,EAAKC,EAAE,gCAAiCL,GAA2CvB,EAAAA,cAAoBwC,EAAAA,EAA6B,CACrIC,QAASA,IAAMjB,GAA8B,GAC7CkB,KAAMnB,MACD,IACT,C","sources":["../../../../shared/build/es/components/ScorecardView/components/ScorecardLegendsView/Components/LegendView/index.js","webpack://@dhis2/app-shell/../../../shared/build/es/components/ScorecardView/components/ScorecardLegendsView/ScorecardLegendsView.module.css?df10","../../../../shared/build/es/components/ScorecardView/components/ScorecardLegendsView/index.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\nexport default function LegendView(_ref) {\n  let {\n    legend\n  } = _ref;\n  const {\n    name,\n    color\n  } = legend !== null && legend !== void 0 ? legend : {\n    color: \"#FFFFFF\"\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row align-items-center\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 60,\n      height: 25,\n      background: color,\n      border: \"1px solid rgb(232, 237, 242)\",\n      padding: 16\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      paddingLeft: 8,\n      marginRight: 8\n    }\n  }, name));\n}\nLegendView.propTypes = {\n  legend: PropTypes.object.isRequired\n};","// extracted by mini-css-extract-plugin\nexport default {\"legend-container\":\"ScorecardLegendsView_legend-container__0U0Pf\",\"legends\":\"ScorecardLegendsView_legends__8OId8\",\"other\":\"ScorecardLegendsView_other__E0gxk\"};","import i18n from \"@dhis2/d2-i18n\";\nimport { Button } from \"@dhis2/ui\";\nimport { isEmpty } from \"lodash\";\nimport React, { useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport SpecificTargetsLibraryModal from \"../SpecificTargetsLibrary\";\nimport LegendView from \"./Components/LegendView\";\nimport classes from \"./ScorecardLegendsView.module.css\";\nimport { DecreasingArrows, IncreasingArrows } from \"../../../ScorecardCell/Components/Arrows\";\nimport { IsSpecificTargetsSet, ScorecardConfigDirtyState, ScorecardViewState } from \"../../../../state\";\nexport default function ScorecardLegendsView() {\n  const {\n    legend: showLegends,\n    arrows: showArrows\n  } = useRecoilValue(ScorecardViewState(\"options\"));\n  const legends = useRecoilValue(ScorecardConfigDirtyState(\"legendDefinitions\"));\n  const isSpecificTargetsSet = useRecoilValue(IsSpecificTargetsSet);\n  const [specificTargetsLibraryOpen, setSpecificTargetsLibraryOpen] = useState(false);\n  return showLegends && !isEmpty(legends) ? /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": \"legends\",\n    className: \"column\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h3\", null, i18n.t(\"Legends\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes[\"legend-container\"]\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes[\"legends\"]\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row align-items-center\"\n  }, legends === null || legends === void 0 ? void 0 : legends.map(legend => /*#__PURE__*/React.createElement(LegendView, {\n    key: legend.color,\n    legend: legend\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes[\"other\"]\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gap-16 space-between justify-content-end\"\n  }, showArrows && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      minWidth: 400\n    },\n    className: \"row align-items-center end\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pr-16\"\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    height: 14,\n    width: 14\n  }, /*#__PURE__*/React.createElement(IncreasingArrows, {\n    fontSize: 14,\n    y: 0,\n    x: 7\n  })), \"\\xA0 \", i18n.t(\"Increased from last period\")), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"svg\", {\n    height: 14,\n    width: 14\n  }, /*#__PURE__*/React.createElement(DecreasingArrows, {\n    fontSize: 14,\n    y: 14,\n    x: 7\n  })), \"\\xA0 \", i18n.t(\"Decreased from last period\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"print-hide\",\n    style: {\n      minWidth: 200\n    }\n  }, isSpecificTargetsSet && /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setSpecificTargetsLibraryOpen(true)\n  }, i18n.t(\"Specific Targets Library\"))))), specificTargetsLibraryOpen && /*#__PURE__*/React.createElement(SpecificTargetsLibraryModal, {\n    onClose: () => setSpecificTargetsLibraryOpen(false),\n    open: specificTargetsLibraryOpen\n  }))) : null;\n}"],"names":["LegendView","_ref","legend","name","color","React","className","style","width","height","background","border","padding","paddingLeft","marginRight","propTypes","PropTypes","isRequired","ScorecardLegendsView","showLegends","arrows","showArrows","useRecoilValue","ScorecardViewState","legends","ScorecardConfigDirtyState","isSpecificTargetsSet","IsSpecificTargetsSet","specificTargetsLibraryOpen","setSpecificTargetsLibraryOpen","useState","isEmpty","i18n","t","classes","map","key","minWidth","IncreasingArrows","fontSize","y","x","DecreasingArrows","Button","onClick","SpecificTargetsLibraryModal","onClose","open"],"sourceRoot":""}