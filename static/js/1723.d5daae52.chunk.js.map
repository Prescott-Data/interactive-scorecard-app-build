{"version":3,"file":"static/js/1723.d5daae52.chunk.js","mappings":"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","sources":["../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/state/data.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/state/layout.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/state/orgUnit.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/state/period.js","webpack://@dhis2/app-shell/../../../shared/build/es/components/ScorecardView/components/ScorecardTable/scorecardTable.module.css?d2d2","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableBody/Components/AverageCell.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableBody/Components/AverageDataContainer.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableBody/Components/AverageDataSourceRow.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableBody/Components/AverageOrgUnitRow.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-allowed-chart-types.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-chart-plot-options.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-chart-subtitle.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-chart-title-object.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-chart-tooltip-options.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/getChartAttributeOptions.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-sanitized-analytics-based-on-chart-configuration.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-cumulative-format-for-analytics.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-sanitized-chart-object.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-chart-exporting-options.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-chart-axis-items.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-chart-pane-options.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-chart-series-data-label-options.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-chart-series-data.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-chart-series-value.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-chart-series.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-chart-y-axis-options.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-combined-chart-series-data.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-sorted-chart-series.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-solid-gauge-chart-object.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-spider-web-chart-object.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-x-axis-items-from-chart-configuration.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-charts-x-axis-options.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-sanitized-chart-x-axis-categories.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-chart-object.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-initial-chart-object-helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-chart-credit-options.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-chart-colors.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-chart-configuration.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/state-helper/chartAnalyticsChart.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/Components/chart-item/chart-item-component.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/Components/chart-list/chart-list-component.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/index.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/index.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableDataContainer/Components/DataCells.js","webpack://@dhis2/app-shell/../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableDataContainer/Components/FurtherAnalysisMenu/FurtherAnalysisMenu.module.css?02fd","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableDataContainer/Components/FurtherAnalysisMenu/index.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableDataContainer/index.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableLoader.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableBody/Components/DroppableCell.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableBody/Components/DraggableCell.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableBody/Components/OrgUnitContainer.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableBody/Components/ChildOrgUnitRow.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableBody/Components/DataSourceRow.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableBody/Components/ParentOrgUnitRow.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/hooks/useTableConfig.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/hooks/useTableOrgUnits.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/hooks/useTableDataSources.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/hooks/useTableLoadingState.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableBody/index.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableHeader/Components/OrgUnitHeaderCells.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableHeader/Components/GroupsHeaderRow.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableHeader/Components/HoldersHeaderRow.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableHeader/Components/OrgUnitHeaderRow.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableHeader/Components/PeriodHeaderRow.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableHeader/index.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableWidth/index.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/index.js"],"sourcesContent":["import { AnalyticsResult, Fn } from \"@iapps/function-analytics\";\nimport { isEmpty } from \"lodash\";\nimport { atom, selector } from \"recoil\";\nimport { InitialOrgUnits } from \"./orgUnit\";\nimport { ResolvedPeriodState } from \"./period\";\nimport { EngineState } from \"../../../../../../../state\";\nimport { getCustomFunctionAnalytics } from \"../../../../../../../utils\";\nconst DataState = selector({\n  key: \"cell-analysis-data\",\n  get: async _ref => {\n    let {\n      get\n    } = _ref;\n    const {\n      orgUnits\n    } = get(InitialOrgUnits);\n    const periods = get(ResolvedPeriodState);\n    const dataSources = get(DataSourceState);\n    const engine = get(EngineState);\n    if (!isEmpty(orgUnits) && !isEmpty(periods) && !isEmpty(dataSources)) {\n      const dataSource = dataSources[0];\n      if (dataSource.type === \"customFunction\") {\n        return new AnalyticsResult(await getCustomFunctionAnalytics(engine, {\n          functions: [dataSource.id],\n          orgUnits: orgUnits.map(_ref2 => {\n            let {\n              id\n            } = _ref2;\n            return id;\n          }),\n          periods: periods === null || periods === void 0 ? void 0 : periods.map(_ref3 => {\n            let {\n              id\n            } = _ref3;\n            return id;\n          })\n        }));\n      } else {\n        var _periods$map, _dataSources$map;\n        return await new Fn.Analytics().setDimension(\"ou\", `${orgUnits.map(_ref4 => {\n          let {\n            id\n          } = _ref4;\n          return id;\n        }).join(\";\")}`).setPeriod(periods === null || periods === void 0 ? void 0 : (_periods$map = periods.map(_ref5 => {\n          let {\n            id\n          } = _ref5;\n          return id;\n        })) === null || _periods$map === void 0 ? void 0 : _periods$map.join(\";\")).setData(dataSources === null || dataSources === void 0 ? void 0 : (_dataSources$map = dataSources.map(_ref6 => {\n          let {\n            id\n          } = _ref6;\n          return id;\n        })) === null || _dataSources$map === void 0 ? void 0 : _dataSources$map.join(\";\")).get();\n      }\n    }\n  }\n});\nconst DataSourceState = atom({\n  key: \"cell-analysis-data-source\",\n  default: []\n});\nexport { DataState, DataSourceState };","import { atom } from \"recoil\";\nimport { DEFAULT_LAYOUT } from \"../../../../../../../constants\";\nconst LayoutState = atom({\n  key: \"cell-analysis-layout\",\n  default: DEFAULT_LAYOUT\n});\nexport { LayoutState };","import { find, isEmpty, uniqBy } from \"lodash\";\nimport { atom, selector } from \"recoil\";\nimport { OrgUnitLevels, PeriodResolverState, ScorecardDataSourceState, ScorecardViewState, UserState } from \"../../../../../../../state\";\nconst OrgUnitState = atom({\n  key: \"cell-analysis-orgUnit-state\",\n  default: selector({\n    key: \"cell-analysis-orgUnit-selector\",\n    get: _ref => {\n      let {\n        get\n      } = _ref;\n      return get(ScorecardViewState(\"orgUnitSelection\"));\n    }\n  })\n});\nconst userSubUnitsQuery = {\n  ou: {\n    resource: \"analytics\",\n    params: _ref2 => {\n      let {\n        pe,\n        dx,\n        ou\n      } = _ref2;\n      return {\n        dimension: [`ou:${ou}`, `pe:${pe}`, `dx:${dx}`],\n        skipData: true\n      };\n    }\n  }\n};\nconst orgUnitOptionOnCell = atom({\n  key: \"orgUnitOptionCell\",\n  default: false\n});\nconst orgUnitSelectorOptionOnCell = selector({\n  key: \"orgUnitOptionCellSelector\",\n  get: _ref3 => {\n    let {\n      get\n    } = _ref3;\n    return get(orgUnitOptionOnCell);\n  },\n  set: (_ref4, value) => {\n    let {\n      set\n    } = _ref4;\n    set(orgUnitOptionOnCell, value);\n  }\n});\nexport const InitialOrgUnits = selector({\n  key: \"cell-analysis-initial-org-units-resolver\",\n  get: async _ref5 => {\n    var _get, _get2;\n    let {\n      get\n    } = _ref5;\n    const {\n      orgUnits,\n      levels,\n      groups,\n      userOrgUnit,\n      userSubUnit,\n      userSubX2Unit\n    } = get(OrgUnitState);\n    const periods = (_get = get(PeriodResolverState)) !== null && _get !== void 0 ? _get : [];\n    const dataHolders = (_get2 = get(ScorecardDataSourceState)) !== null && _get2 !== void 0 ? _get2 : [];\n    const {\n      organisationUnits\n    } = get(UserState);\n    const orgUnitLevels = get(OrgUnitLevels);\n    let resolvedOrgUnits = orgUnits;\n    if (!isEmpty(dataHolders) && !isEmpty(periods)) {\n      if (userSubX2Unit) {\n        resolvedOrgUnits = [...resolvedOrgUnits, {\n          id: \"USER_ORGUNIT_GRANDCHILDREN\"\n        }];\n      }\n      if (userSubUnit) {\n        resolvedOrgUnits = [...resolvedOrgUnits, {\n          id: \"USER_ORGUNIT_CHILDREN\"\n        }];\n      }\n      if (userOrgUnit) {\n        resolvedOrgUnits = [...resolvedOrgUnits, ...organisationUnits];\n      }\n      if (!isEmpty(levels)) {\n        var _levels$map;\n        resolvedOrgUnits = [...resolvedOrgUnits, ...((_levels$map = levels === null || levels === void 0 ? void 0 : levels.map(level => {\n          var _find;\n          return {\n            id: `LEVEL-${(_find = find(orgUnitLevels, {\n              id: level\n            })) === null || _find === void 0 ? void 0 : _find.level}`\n          };\n        })) !== null && _levels$map !== void 0 ? _levels$map : [])];\n      }\n      if (!isEmpty(groups)) {\n        var _groups$map;\n        resolvedOrgUnits = [...resolvedOrgUnits, ...((_groups$map = groups === null || groups === void 0 ? void 0 : groups.map(group => ({\n          id: `OU_GROUP-${group}`\n        }))) !== null && _groups$map !== void 0 ? _groups$map : [])];\n      }\n    }\n    return {\n      orgUnits: uniqBy(resolvedOrgUnits, \"id\")\n    };\n  }\n});\nexport { OrgUnitState, orgUnitOptionOnCell, orgUnitSelectorOptionOnCell };","import { Period } from \"@iapps/period-utilities\";\nimport { compact, differenceBy, filter, isArray, isEmpty, uniqBy } from \"lodash\";\nimport { atom, selector } from \"recoil\";\nimport { ScorecardViewState } from \"../../../../../../../state\";\nconst PeriodState = atom({\n  key: \"cell-analysis-period-state\",\n  default: selector({\n    key: \"cell-analysis-period-selector\",\n    get: _ref => {\n      let {\n        get\n      } = _ref;\n      return get(ScorecardViewState(\"periodSelection\"));\n    }\n  })\n});\nconst cellPeriodOptionAtom = atom({\n  key: \"cell-period-option-state\",\n  default: []\n});\nconst cellPeriodOptionSelector = selector({\n  key: \"cell-period-option-selector\",\n  get: _ref2 => {\n    let {\n      get\n    } = _ref2;\n    return get(cellPeriodOptionAtom);\n  },\n  set: (_ref3, value) => {\n    let {\n      set\n    } = _ref3;\n    set(cellPeriodOptionAtom, value);\n  },\n  reset: _ref4 => {\n    let {\n      reset\n    } = _ref4;\n    reset(cellPeriodOptionAtom);\n  }\n});\nconst ResolvedPeriodState = selector({\n  key: \"cell-analysis-period-resolver\",\n  get: _ref5 => {\n    var _get;\n    let {\n      get\n    } = _ref5;\n    const {\n      periods\n    } = (_get = get(PeriodState)) !== null && _get !== void 0 ? _get : {};\n    if (!isEmpty(periods)) {\n      const relativePeriods = filter(get(cellPeriodOptionAtom).length > 0 ? get(cellPeriodOptionAtom) : periods, _ref6 => {\n        var _period$type;\n        let {\n          id\n        } = _ref6;\n        const period = new Period().setPreferences({\n          allowFuturePeriods: true\n        }).getById(id);\n        return period === null || period === void 0 ? void 0 : (_period$type = period.type) === null || _period$type === void 0 ? void 0 : _period$type.match(RegExp(\"Relative\"));\n      });\n      let allPeriods = [...differenceBy(periods, relativePeriods, \"id\")];\n      get(cellPeriodOptionAtom).length > 0 ? allPeriods = [...differenceBy(relativePeriods, \"id\")] : allPeriods = [...differenceBy(periods, relativePeriods, \"id\")];\n      for (const period of relativePeriods) {\n        const periodInstance = new Period().setPreferences({\n          allowFuturePeriods: true\n        }).getById(period === null || period === void 0 ? void 0 : period.id);\n        const actualPeriods = isArray(periodInstance === null || periodInstance === void 0 ? void 0 : periodInstance.iso) ? periodInstance === null || periodInstance === void 0 ? void 0 : periodInstance.iso : [periodInstance === null || periodInstance === void 0 ? void 0 : periodInstance.iso];\n        allPeriods = allPeriods.concat(actualPeriods);\n      }\n      return uniqBy(compact(allPeriods), \"id\");\n    }\n    return [];\n  }\n});\nexport { PeriodState, ResolvedPeriodState, cellPeriodOptionSelector, cellPeriodOptionAtom };","// extracted by mini-css-extract-plugin\nexport default {\"org-unit-header-cell\":\"scorecardTable_org-unit-header-cell__zyAxQ\",\"holder-header-cell\":\"scorecardTable_holder-header-cell__Tysy3\",\"data-header-cell\":\"scorecardTable_data-header-cell__v5Zuf\",\"period-header-cell\":\"scorecardTable_period-header-cell__9IjVV\",\"child-table-row\":\"scorecardTable_child-table-row__GI9Cw\",\"parent-table-row\":\"scorecardTable_parent-table-row__Mz+w5\",\"table-print\":\"scorecardTable_table-print__BlF6y\",\"average-row\":\"scorecardTable_average-row__Lc5lf\",\"table-header-row\":\"scorecardTable_table-header-row__57TP5\"};","import { head, last, round } from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { LinkedCellSvg, SingleCellSvg } from \"../../../../../../index\";\nimport { OrgUnitLevels, ScorecardLegendDefinitionSelector, ScorecardViewState } from \"../../../../../../../state\";\nimport { getLegend } from \"../../../../../../../utils\";\nfunction SingleAverageCell(_ref) {\n  var _getLegend;\n  let {\n    cellRef,\n    dataSources,\n    values,\n    bold,\n    period,\n    orgUnit\n  } = _ref;\n  const [dataSource] = dataSources !== null && dataSources !== void 0 ? dataSources : [];\n  const defaultLegendDefinitions = useRecoilValue(ScorecardLegendDefinitionSelector(true));\n  const orgUnitLevels = useRecoilValue(OrgUnitLevels);\n  const legendDefinitions = useRecoilValue(ScorecardViewState(\"legendDefinitions\"));\n  const {\n    color: cellColor\n  } = (_getLegend = getLegend(head(values), dataSource === null || dataSource === void 0 ? void 0 : dataSource.legends, {\n    max: dataSource === null || dataSource === void 0 ? void 0 : dataSource.weight,\n    defaultLegends: defaultLegendDefinitions,\n    dataOrgUnitLevel: {},\n    orgUnitLevels,\n    legendDefinitions,\n    specificTargets: dataSource === null || dataSource === void 0 ? void 0 : dataSource.specificTargets,\n    period,\n    orgUnit\n  })) !== null && _getLegend !== void 0 ? _getLegend : {};\n  if (head(values) === undefined) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(SingleCellSvg, {\n    cellRef: cellRef,\n    color: cellColor,\n    bold: bold,\n    value: head(values) !== undefined ? round(head(values), 2) : \"\"\n  });\n}\nfunction LinkedAverageCell(_ref2) {\n  var _getLegend2, _getLegend3;\n  let {\n    cellRef,\n    dataSources,\n    values,\n    bold,\n    period,\n    orgUnit\n  } = _ref2;\n  const defaultLegendDefinitions = useRecoilValue(ScorecardLegendDefinitionSelector(true));\n  const orgUnitLevels = useRecoilValue(OrgUnitLevels);\n  const legendDefinitions = useRecoilValue(ScorecardViewState(\"legendDefinitions\"));\n  const [topDataSource, bottomDataSource] = dataSources !== null && dataSources !== void 0 ? dataSources : [];\n  const {\n    color: topCellColor\n  } = (_getLegend2 = getLegend(head(values), topDataSource === null || topDataSource === void 0 ? void 0 : topDataSource.legends, {\n    max: topDataSource === null || topDataSource === void 0 ? void 0 : topDataSource.weight,\n    defaultLegends: defaultLegendDefinitions,\n    dataOrgUnitLevel: {},\n    orgUnitLevels,\n    legendDefinitions,\n    orgUnit,\n    period,\n    specificTargets: topDataSource === null || topDataSource === void 0 ? void 0 : topDataSource.specificTargets\n  })) !== null && _getLegend2 !== void 0 ? _getLegend2 : {};\n  const {\n    color: bottomCellColor\n  } = (_getLegend3 = getLegend(last(values), bottomDataSource === null || bottomDataSource === void 0 ? void 0 : bottomDataSource.legends, {\n    max: bottomDataSource === null || bottomDataSource === void 0 ? void 0 : bottomDataSource.weight,\n    defaultLegends: defaultLegendDefinitions,\n    dataOrgUnitLevel: {},\n    orgUnitLevels,\n    legendDefinitions,\n    orgUnit,\n    period,\n    specificTargets: bottomDataSource === null || bottomDataSource === void 0 ? void 0 : bottomDataSource.specificTargets\n  })) !== null && _getLegend3 !== void 0 ? _getLegend3 : {};\n  return /*#__PURE__*/React.createElement(LinkedCellSvg, {\n    cellRef: cellRef,\n    topColor: topCellColor,\n    bottomColor: bottomCellColor,\n    bold: bold,\n    topValue: head(values) ? round(+head(values), 2) : \"\",\n    bottomValue: last(values) ? round(last(values), 2) : \"\"\n  });\n}\nSingleAverageCell.propTypes = {\n  values: PropTypes.arrayOf(PropTypes.any).isRequired,\n  bold: PropTypes.bool,\n  dataSources: PropTypes.arrayOf(PropTypes.any),\n  orgUnit: PropTypes.string,\n  period: PropTypes.string\n};\nLinkedAverageCell.propTypes = {\n  values: PropTypes.arrayOf(PropTypes.any).isRequired,\n  bold: PropTypes.bool,\n  dataSources: PropTypes.arrayOf(PropTypes.any),\n  orgUnit: PropTypes.string,\n  period: PropTypes.string\n};\nfunction ComplexAverageCell(_ref3) {\n  let {\n    value,\n    bold,\n    dataSources,\n    period,\n    orgUnit\n  } = _ref3;\n  const values = Object.values(value);\n  const [tableCellRef, setTableCellRef] = useState();\n  return /*#__PURE__*/React.createElement(\"td\", {\n    ref: setTableCellRef,\n    className: \"data-cell\",\n    align: \"center\"\n  }, values.length > 1 ? /*#__PURE__*/React.createElement(LinkedAverageCell, {\n    cellRef: tableCellRef,\n    period: period,\n    orgUnit: true,\n    bold: bold,\n    dataSources: dataSources,\n    values: values\n  }) : /*#__PURE__*/React.createElement(SingleAverageCell, {\n    cellRef: tableCellRef,\n    period: period,\n    orgUnit: orgUnit,\n    bold: bold,\n    dataSources: dataSources,\n    values: values\n  }));\n}\nComplexAverageCell.propTypes = {\n  value: PropTypes.any.isRequired,\n  bold: PropTypes.bool,\n  dataSources: PropTypes.arrayOf(PropTypes.any),\n  orgUnit: PropTypes.string,\n  period: PropTypes.string\n};\nexport default function AverageCell(_ref4) {\n  let {\n    value,\n    bold,\n    dataSources,\n    orgUnit,\n    period\n  } = _ref4;\n  const [singleCellRef, setSingleCellRef] = useState();\n  if (value === undefined) {\n    return null;\n  }\n  if (typeof value === \"number\") {\n    return /*#__PURE__*/React.createElement(\"td\", {\n      ref: setSingleCellRef,\n      className: \"data-cell\",\n      align: \"center\"\n    }, /*#__PURE__*/React.createElement(SingleCellSvg, {\n      cellRef: singleCellRef,\n      bold: bold,\n      value: value ? round(value, 2) : \"\"\n    }));\n  }\n  return /*#__PURE__*/React.createElement(ComplexAverageCell, {\n    orgUnit: orgUnit,\n    period: period,\n    value: value,\n    bold: bold,\n    dataSources: dataSources\n  });\n}\nAverageCell.propTypes = {\n  value: PropTypes.any.isRequired,\n  bold: PropTypes.bool,\n  dataSources: PropTypes.arrayOf(PropTypes.any),\n  orgUnit: PropTypes.string,\n  period: PropTypes.string\n};","import { isEmpty } from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport AverageCell from \"./AverageCell\";\nimport { ScorecardDataLoadingState, ScorecardOrgUnitState } from \"../../../../../../../state\";\nimport { ScorecardDataEngine } from \"../../../../../../../models\";\nexport default function AverageDataContainer(_ref) {\n  let {\n    period,\n    dataSources,\n    orgUnit,\n    orgUnits,\n    dataEngine\n  } = _ref;\n  const [average, setAverage] = useState();\n  const loading = useRecoilValue(ScorecardDataLoadingState(orgUnits));\n  const {\n    childrenOrgUnits,\n    filteredOrgUnits\n  } = useRecoilValue(ScorecardOrgUnitState(orgUnits));\n  function subscribe() {\n    if (!loading) {\n      let subscription;\n      if (isEmpty(dataSources)) {\n        subscription = dataEngine.getOrgUnitColumnAverage({\n          period,\n          orgUnit\n        }).subscribe(setAverage);\n      } else {\n        var _ref3;\n        subscription = dataEngine.getDataSourceColumnAverage({\n          period,\n          dataSources: dataSources === null || dataSources === void 0 ? void 0 : dataSources.map(_ref2 => {\n            let {\n              id\n            } = _ref2;\n            return id;\n          }),\n          orgUnits: (_ref3 = [...childrenOrgUnits, ...filteredOrgUnits]) === null || _ref3 === void 0 ? void 0 : _ref3.map(_ref4 => {\n            let {\n              id\n            } = _ref4;\n            return id;\n          })\n        }).subscribe(setAverage);\n      }\n      return () => {\n        subscription.unsubscribe();\n      };\n    }\n  }\n  useEffect(subscribe, [loading, dataSources, orgUnit, period, childrenOrgUnits, filteredOrgUnits]);\n  return /*#__PURE__*/React.createElement(AverageCell, {\n    dataSources: dataSources,\n    bold: true,\n    value: average,\n    period: period\n  });\n}\nAverageDataContainer.propTypes = {\n  dataEngine: PropTypes.instanceOf(ScorecardDataEngine).isRequired,\n  orgUnits: PropTypes.array.isRequired,\n  period: PropTypes.string.isRequired,\n  dataSources: PropTypes.array,\n  orgUnit: PropTypes.string\n};","import i18n from \"@dhis2/d2-i18n\";\nimport { DataTableCell, DataTableRow } from \"@dhis2/ui\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport classes from \"../../../scorecardTable.module.css\";\nimport AverageCell from \"./AverageCell\";\nimport AverageDataContainer from \"./AverageDataContainer\";\nimport { PeriodResolverState, ScorecardDataSourceState, ScorecardViewState } from \"../../../../../../../state\";\nimport { ScorecardDataEngine } from \"../../../../../../../models\";\nexport default function AverageDataSourceRow(_ref) {\n  let {\n    orgUnits,\n    overallAverage,\n    dataEngine\n  } = _ref;\n  const periods = useRecoilValue(PeriodResolverState);\n  const dataHolders = useRecoilValue(ScorecardDataSourceState);\n  const {\n    averageColumn,\n    itemNumber\n  } = useRecoilValue(ScorecardViewState(\"options\"));\n  return /*#__PURE__*/React.createElement(DataTableRow, {\n    className: classes[\"average-row\"],\n    bordered: true\n  }, /*#__PURE__*/React.createElement(DataTableCell, {\n    fixed: true,\n    left: \"0\",\n    width: \"50px\"\n  }), itemNumber && /*#__PURE__*/React.createElement(DataTableCell, {\n    className: \"extra-table-cell\",\n    fixed: true,\n    left: \"50px\",\n    width: \"50px\"\n  }), /*#__PURE__*/React.createElement(DataTableCell, {\n    fixed: true,\n    left: itemNumber ? \"100px\" : \"50px\",\n    className: \"scorecard-org-unit-cell\"\n  }, /*#__PURE__*/React.createElement(\"b\", null, i18n.t(\"Average\"))), dataHolders === null || dataHolders === void 0 ? void 0 : dataHolders.map(_ref2 => {\n    let {\n      dataSources,\n      id: holderId\n    } = _ref2;\n    return periods === null || periods === void 0 ? void 0 : periods.map(_ref3 => {\n      let {\n        id\n      } = _ref3;\n      return /*#__PURE__*/React.createElement(AverageDataContainer, {\n        dataEngine: dataEngine,\n        orgUnits: orgUnits,\n        key: `${holderId}-${id}-average-cell`,\n        dataSources: dataSources,\n        period: id\n      });\n    });\n  }), averageColumn && /*#__PURE__*/React.createElement(AverageCell, {\n    bold: true,\n    value: overallAverage\n  }));\n}\nAverageDataSourceRow.propTypes = {\n  dataEngine: PropTypes.instanceOf(ScorecardDataEngine).isRequired,\n  orgUnits: PropTypes.array.isRequired,\n  overallAverage: PropTypes.number.isRequired\n};","import i18n from \"@dhis2/d2-i18n\";\nimport { DataTableCell, DataTableRow } from \"@dhis2/ui\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport classes from \"../../../scorecardTable.module.css\";\nimport AverageCell from \"./AverageCell\";\nimport AverageDataContainer from \"./AverageDataContainer\";\nimport { PeriodResolverState, ScorecardOrgUnitState, ScorecardViewState } from \"../../../../../../../state\";\nimport { ScorecardDataEngine } from \"../../../../../../../models\";\nexport default function AverageOrgUnitRow(_ref) {\n  var _ref2;\n  let {\n    orgUnits,\n    overallAverage,\n    dataEngine\n  } = _ref;\n  const periods = useRecoilValue(PeriodResolverState);\n  const {\n    childrenOrgUnits,\n    filteredOrgUnits\n  } = useRecoilValue(ScorecardOrgUnitState(orgUnits));\n  const {\n    averageColumn,\n    itemNumber\n  } = useRecoilValue(ScorecardViewState(\"options\"));\n  return /*#__PURE__*/React.createElement(DataTableRow, {\n    className: classes[\"average-row\"],\n    bordered: true\n  }, /*#__PURE__*/React.createElement(DataTableCell, {\n    fixed: true,\n    left: \"0\",\n    width: \"50px\"\n  }), itemNumber && /*#__PURE__*/React.createElement(DataTableCell, {\n    fixed: true,\n    left: \"50px\",\n    width: \"50px\"\n  }), /*#__PURE__*/React.createElement(DataTableCell, {\n    fixed: true,\n    left: itemNumber ? \"100px\" : \"50px\",\n    className: \"scorecard-org-unit-cell\"\n  }, /*#__PURE__*/React.createElement(\"b\", null, i18n.t(\"Average\"))), (_ref2 = [...filteredOrgUnits, ...childrenOrgUnits]) === null || _ref2 === void 0 ? void 0 : _ref2.map(_ref3 => {\n    let {\n      id\n    } = _ref3;\n    return periods === null || periods === void 0 ? void 0 : periods.map(_ref4 => {\n      let {\n        id: periodId\n      } = _ref4;\n      return /*#__PURE__*/React.createElement(AverageDataContainer, {\n        dataEngine: dataEngine,\n        orgUnits: orgUnits,\n        key: `${id}-${periodId}-average`,\n        period: periodId,\n        orgUnit: id\n      });\n    });\n  }), averageColumn && /*#__PURE__*/React.createElement(AverageCell, {\n    bold: true,\n    value: overallAverage\n  }));\n}\nAverageOrgUnitRow.propTypes = {\n  dataEngine: PropTypes.instanceOf(ScorecardDataEngine).isRequired,\n  orgUnits: PropTypes.array.isRequired,\n  overallAverage: PropTypes.number.isRequired\n};","/* eslint-disable no-case-declarations */\nexport function getAllowedChartType(chartType) {\n  let newChartType = \"\";\n  switch (chartType) {\n    case \"radar\":\n      newChartType = \"line\";\n      break;\n    case \"dotted\":\n      newChartType = \"line\";\n      break;\n    default:\n      newChartType = chartType;\n      break;\n  }\n  return newChartType;\n}","import { getAllowedChartType } from \"./get-allowed-chart-types.helper\";\nexport function getPlotOptions(chartConfiguration) {\n  const plotOptionChartType = getAllowedChartType(chartConfiguration.type);\n\n  // TODO: Find best way to attach custom events into the chart\n  const plotOptions = {\n    series: {\n      cursor: \"pointer\",\n      point: {\n        events: {\n          click: function () {\n            const clickedChart = (window[\"clickedCharts\"] || {})[this.id];\n            const currentColor = this.color;\n            if (!clickedChart) {\n              if (!window[\"clickedCharts\"]) {\n                window[\"clickedCharts\"] = {};\n              }\n              window[\"clickedCharts\"] = {\n                ...window[\"clickedCharts\"],\n                [this.id]: {\n                  color: this.color\n                }\n              };\n            } else {\n              (window[\"clickedCharts\"] || {})[this.id] = null;\n            }\n            this.update({\n              color: !clickedChart ? \"#f00\" : currentColor !== \"#f00\" ? \"#f00\" : clickedChart.color\n            }, true, false);\n          }\n        }\n      }\n    }\n  };\n  if (plotOptionChartType) {\n    switch (plotOptionChartType) {\n      case \"solidgauge\":\n        plotOptions[plotOptionChartType] = {\n          dataLabels: {\n            y: 5,\n            borderWidth: 0,\n            useHTML: true\n          }\n        };\n        break;\n      case \"gauge\":\n        plotOptions[plotOptionChartType] = {\n          dataLabels: {\n            y: 5,\n            borderWidth: 0,\n            useHTML: true\n          }\n        };\n        break;\n      case \"pie\":\n        plotOptions[plotOptionChartType] = {\n          borderWidth: 0,\n          allowPointSelect: true,\n          cursor: \"pointer\",\n          showInLegend: !chartConfiguration.hideLegend\n        };\n        break;\n      default:\n        plotOptions[plotOptionChartType !== \"\" ? plotOptionChartType : \"series\"] = {\n          showInLegend: !chartConfiguration.hideLegend,\n          colorByPoint: true\n        };\n\n        /**\n         * Set attributes for stacked charts\n         */\n        if (chartConfiguration.type === \"stacked_column\" || chartConfiguration.type === \"stacked_bar\" || chartConfiguration.type === \"area\") {\n          plotOptions[plotOptionChartType].stacking = chartConfiguration.percentStackedValues ? \"percent\" : \"normal\";\n        }\n        if (chartConfiguration.type === \"dotted\") {\n          plotOptions[\"line\"] = {\n            lineWidth: 0,\n            states: {\n              hover: {\n                enabled: false\n              }\n            }\n          };\n        }\n        break;\n    }\n  }\n  return plotOptions;\n}","import { map } from \"lodash\";\nexport function getChartSubtitleObject(chartConfiguration, analyticsObject) {\n  if (chartConfiguration.hideSubtitle) {\n    return null;\n  }\n  return {\n    text: map(chartConfiguration.zAxisType, zAxis => map(analyticsObject && analyticsObject.metaData ? analyticsObject.metaData[zAxis] || [] : [], itemId => analyticsObject && analyticsObject.metaData && analyticsObject.metaData.names ? analyticsObject.metaData.names[itemId] || [] : []).join(\", \")).join(\" - \"),\n    align: \"left\",\n    style: {\n      fontWeight: \"600\",\n      fontSize: \"13px\"\n    }\n  };\n}","export function getChartTitleObject(chartConfiguration) {\n  if (chartConfiguration.hideTitle) {\n    return null;\n  }\n  return {\n    text: chartConfiguration.title,\n    align: \"left\",\n    style: {\n      fontWeight: \"500\",\n      fontSize: \"16px\"\n    }\n  };\n}","import { getAllowedChartType } from \"./get-allowed-chart-types.helper\";\nexport function getTooltipOptions(chartConfiguration) {\n  const tooltipChartType = getAllowedChartType(chartConfiguration.type);\n  let tooltipObject = {};\n  if (tooltipChartType) {\n    switch (tooltipChartType) {\n      case \"solidgauge\":\n        tooltipObject = {\n          enabled: false\n        };\n        break;\n      case \"pie\":\n        tooltipObject = {\n          pointFormat: \"{series.name}<br/> <b>{point.y}</b> ( {point.percentage:.1f} % )\"\n        };\n        break;\n      default:\n        switch (chartConfiguration.type) {\n          case \"stacked_column\":\n            tooltipObject = {\n              headerFormat: \"<b>{point.x}</b><br/>\",\n              pointFormat: \"{series.name}: {point.y}<br/>Total: {point.stackTotal}\"\n            };\n            break;\n          default:\n            tooltipObject = {\n              enabled: true\n            };\n            break;\n        }\n        break;\n    }\n  }\n  return tooltipObject;\n}","import { getAllowedChartType } from \"./get-allowed-chart-types.helper\";\nexport function getChartAttributeOptions(chartConfiguration) {\n  const chartOptions = {\n    renderTo: chartConfiguration.renderId,\n    zoomType: \"xy\",\n    type: getAllowedChartType(chartConfiguration.type)\n  };\n\n  /**\n   * Extend Options depending on chart type\n   */\n  if (chartConfiguration.type === \"pie\") {\n    chartOptions.plotBackgroundColor = null;\n    chartOptions.plotBorderWidth = null;\n    chartOptions.plotShadow = false;\n  } else if (chartConfiguration.type === \"radar\") {\n    chartOptions.polar = true;\n  }\n  return chartOptions;\n}","import { getCumulativeFormatForAnalytics } from \"./get-cumulative-format-for-analytics.helper\";\nexport function getSanitizedanalyticsBasedOnConfiguration(analyticsObject, chartConfiguration) {\n  return chartConfiguration.cumulativeValues ? getCumulativeFormatForAnalytics(analyticsObject, chartConfiguration.xAxisType[0], chartConfiguration.yAxisType) : analyticsObject;\n}","import { assign, clone, find, findIndex, reverse } from \"lodash\";\nexport function getCumulativeFormatForAnalytics(analyticsObject, xAxisType, yAxisType) {\n  const newAnalyticsObject = clone(analyticsObject);\n  if (analyticsObject) {\n    const yAxisDimensionArray = analyticsObject.metadata[yAxisType];\n    const xAxisDimensionArray = [...reverse([...analyticsObject.metadata[xAxisType]])];\n    const yAxisDimensionIndex = findIndex(analyticsObject.headers, find(analyticsObject.headers, [\"name\", yAxisType]));\n    const xAxisDimensionIndex = findIndex(analyticsObject.headers, find(analyticsObject.headers, [\"name\", xAxisType]));\n    const dataValueIndex = findIndex(analyticsObject.headers, find(analyticsObject.headers, [\"name\", \"value\"]));\n    const newRows = [];\n    yAxisDimensionArray.forEach(yAxisDimensionValue => {\n      let initialValue = 0;\n      xAxisDimensionArray.forEach(xAxisDimensionValue => {\n        analyticsObject.rows.forEach(row => {\n          if (row[yAxisDimensionIndex] === yAxisDimensionValue && row[xAxisDimensionIndex] === xAxisDimensionValue) {\n            initialValue += parseInt(row[dataValueIndex], 10);\n            const newRow = clone(row);\n            newRow[dataValueIndex] = initialValue;\n            newRows.push(newRow);\n          }\n        });\n      });\n    });\n    newAnalyticsObject.rows = assign([], newRows);\n  }\n  return newAnalyticsObject;\n}","import { each, filter, find, flatten, intersection, map, some } from \"lodash\";\nimport { getChartExportingOptions } from \"./get-chart-exporting-options.helper\";\nexport function getSanitizedChartObject(chartObject, chartConfiguration) {\n  const dataSelectionGroups = flatten(filter(map(chartConfiguration.dataSelections || [], dataSelection => {\n    return dataSelection.groups;\n  }), group => group));\n  const dataSelectionGroupMembers = flatten(map(dataSelectionGroups, group => {\n    return map(group.members, member => `${member.id}_${group.id}`);\n  }));\n\n  // Remove non numeric series data and their categories\n  const dataIndexesArrayToRemove = map(chartObject.series, seriesObject => {\n    return filter(map(seriesObject.data, (dataItem, dataIndex) => dataItem.y === \"\" || dataSelectionGroupMembers.length > 0 && dataSelectionGroupMembers.indexOf(dataItem.id) === -1 ? dataIndex : -1), dataIndex => dataIndex !== -1);\n  });\n  let newDataIndexes = [];\n  each(dataIndexesArrayToRemove, dataIndexes => {\n    newDataIndexes = newDataIndexes.length === 0 ? dataIndexes : newDataIndexes;\n    newDataIndexes = intersection(newDataIndexes, dataIndexes);\n  });\n  const newSeries = map(chartObject.series, seriesObject => {\n    return {\n      ...seriesObject,\n      data: filter(map(seriesObject.data, dataItem => {\n        const splitedDataItemId = dataItem.id.split(\"_\");\n        const associatedGroup = find(dataSelectionGroups, [\"id\", splitedDataItemId[1]]);\n\n        // TODO: Need to find a way to generically handle color assignment from click event\n        const clickedChart = (window[\"clickedCharts\"] || {})[dataItem.id];\n        if (clickedChart) {\n          return {\n            ...dataItem,\n            color: \"#f00\"\n          };\n        }\n        return associatedGroup && some(associatedGroup.members, member => member.id === splitedDataItemId[0]) && associatedGroup.color ? {\n          ...dataItem,\n          color: associatedGroup.color\n        } : dataItem;\n      }), (dataItem, dataIndex) => newDataIndexes.indexOf(dataIndex) === -1)\n    };\n  });\n  let categoryCount = 0;\n  const newCategories = map(chartObject.xAxis.categories, category => {\n    if (!category.categories) {\n      return category;\n    }\n    const newCategory = {\n      ...category,\n      categories: filter(category.categories, (innerCategory, innerCategoryIndex) => newDataIndexes.indexOf(innerCategoryIndex + categoryCount) === -1)\n    };\n    categoryCount += category.categories ? category.categories.length : 0;\n    return newCategory;\n  });\n  return {\n    ...chartObject,\n    series: newSeries,\n    xAxis: {\n      ...chartObject.xAxis,\n      categories: newCategories\n    },\n    exporting: getChartExportingOptions(newCategories)\n  };\n}","export function getChartExportingOptions(xAxisCategories) {\n  return {\n    scale: 3,\n    chartOptions: {\n      title: {\n        style: {\n          fontSize: \"10px\"\n        }\n      },\n      subtitle: {\n        style: {\n          fontSize: \"10px\"\n        }\n      },\n      xAxis: [{\n        categories: xAxisCategories,\n        labels: {\n          rotation: 0,\n          style: {\n            fontSize: \"8px\",\n            color: \"#000000\",\n            textAlign: \"center\",\n            textOverflow: \"allow\",\n            width: 1,\n            paddingBottom: \"5px\"\n          }\n        }\n      }]\n    },\n    buttons: {\n      contextButton: {\n        enabled: true\n      }\n    }\n  };\n}","import { assign, map } from \"lodash\";\nexport function getChartAxisItems(analyticsObject, axisTypeArray, isCategory) {\n  let items = [];\n  const metadataNames = analyticsObject.metaData.names;\n  axisTypeArray === null || axisTypeArray === void 0 ? void 0 : axisTypeArray.forEach((axisType, axisIndex) => {\n    var _analyticsObject$meta;\n    const itemKeys = (_analyticsObject$meta = analyticsObject.metaData[axisType]) !== null && _analyticsObject$meta !== void 0 ? _analyticsObject$meta : [];\n    if (itemKeys) {\n      if (axisIndex > 0) {\n        const availableItems = assign([], items);\n        items = [];\n        itemKeys.forEach(itemKey => {\n          availableItems.forEach(item => {\n            items.push({\n              id: item.id + \"_\" + itemKey,\n              name: item.name + \"_\" + metadataNames[itemKey].trim()\n            });\n          });\n        });\n      } else {\n        items = map(itemKeys, itemKey => {\n          return {\n            id: itemKey,\n            name: metadataNames[itemKey].trim()\n          };\n        });\n      }\n    }\n  });\n  return items;\n}","import { assign } from \"lodash\";\nexport function getChartPaneOptions(chartType) {\n  let paneOptions = {};\n  switch (chartType) {\n    case \"radar\":\n      paneOptions = assign({}, {\n        size: \"80%\"\n      });\n      break;\n    default:\n      paneOptions = assign({}, {\n        center: [\"50%\", \"85%\"],\n        size: \"140%\",\n        startAngle: -90,\n        endAngle: 90,\n        background: {\n          backgroundColor: \"#EEE\",\n          innerRadius: \"60%\",\n          outerRadius: \"100%\",\n          shape: \"arc\"\n        }\n      });\n      break;\n  }\n  return paneOptions;\n}","export function getChartSeriesDataLabelsOptions(chartConfiguration) {\n  let dataLabels = null;\n  switch (chartConfiguration.type) {\n    case \"pie\":\n      dataLabels = {\n        enabled: chartConfiguration.showData,\n        format: \"{point.name}<br/> <b>{point.y}</b> ( {point.percentage:.1f} % )\"\n      };\n      break;\n    default:\n      dataLabels = {\n        enabled: chartConfiguration.showData\n      };\n      break;\n  }\n  return dataLabels;\n}","/* eslint-disable max-params */\nimport { find, findIndex, map } from \"lodash\";\nimport { getChartSeriesDataLabelsOptions } from \"./get-chart-series-data-label-options.helper\";\nimport { getChartSeriesValue } from \"./get-chart-series-value.helper\";\nexport function getChartSeriesData(analyticsObject, chartConfiguration, yAxisItemId, xAxisItems) {\n  const data = [];\n\n  /**\n   * Get index to locate data for y axis\n   */\n  const yAxisItemIndex = findIndex(analyticsObject.headers, find(analyticsObject.headers, [\"name\", chartConfiguration.yAxisType]));\n\n  /**\n   * Get index for value attribute to get the data\n   */\n  const dataIndex = findIndex(analyticsObject.headers, find(analyticsObject.headers, [\"name\", \"value\"]));\n\n  /**\n   * Get index to locate data for x axis\n   */\n  const xAxisItemIndex = map(chartConfiguration.xAxisType, xAxisType => {\n    return findIndex(analyticsObject.headers, find(analyticsObject.headers, [\"name\", xAxisType]));\n  }).join(\"_\");\n  if (xAxisItems) {\n    xAxisItems.forEach(xAxisItem => {\n      /**\n       * Get the required data depending on xAxis and yAxis\n       */\n      //getChartSeriesValue\n      const seriesValue = getChartSeriesValue(analyticsObject.rows, yAxisItemIndex, yAxisItemId, xAxisItemIndex, xAxisItem.id, dataIndex);\n      data.push({\n        id: xAxisItem.id,\n        name: xAxisItem.name,\n        dataLabels: getChartSeriesDataLabelsOptions(chartConfiguration),\n        y: seriesValue\n      });\n    });\n  }\n  return data;\n}","/* eslint-disable max-params */\nimport { forEach, map, some } from \"lodash\";\nexport function getChartSeriesValue(analyticsRows, yAxisItemIndex, yAxisItemId, xAxisItemIndex, xAxisItemId, dataIndex) {\n  let finalValue = 0;\n  const seriesValues = map(analyticsRows, row => {\n    let seriesValue = 0;\n    let xAxisRowId = \"\";\n    forEach(xAxisItemIndex.split(\"_\"), axisIndex => {\n      xAxisRowId += xAxisRowId !== \"\" ? \"_\" : \"\";\n      xAxisRowId += row[axisIndex];\n    });\n    if (row[yAxisItemIndex] === yAxisItemId && xAxisRowId === xAxisItemId) {\n      const value = parseFloat(row[dataIndex]);\n      if (isNaN(value)) {\n        return row[dataIndex];\n      }\n      seriesValue += value;\n    }\n    return seriesValue;\n  }).filter(value => value !== 0);\n  if (seriesValues) {\n    // Check if series values have non numeric content\n    if (some(seriesValues, seriesValue => isNaN(seriesValue))) {\n      return \"\";\n    }\n    // TODO find best way to identify ratios\n    const isRatio = some(seriesValues, seriesValue => seriesValue.toString().split(\".\")[1]);\n    const valueSum = seriesValues.length > 0 ? seriesValues.reduce((sum, count) => parseFloat(sum) + parseFloat(count)) : 0;\n    if (isRatio) {\n      finalValue = valueSum / seriesValues.length;\n    } else {\n      finalValue = valueSum;\n    }\n  }\n  return finalValue !== 0 ? finalValue : null;\n}","/* eslint-disable max-params */\nimport { getAllowedChartType } from \"./get-allowed-chart-types.helper\";\nimport { getChartSeriesData } from \"./get-chart-series-data.helper\";\nexport function getChartSeries(analyticsObject, xAxisItems, yAxisItems, chartConfiguration) {\n  const series = yAxisItems.map((yAxisItem, yAxisIndex) => {\n    return {\n      name: yAxisItem.name,\n      id: yAxisItem.id,\n      index: yAxisIndex,\n      turboThreshold: 0,\n      pointPlacement: chartConfiguration.type === \"radar\" ? \"on\" : undefined,\n      data: getChartSeriesData(analyticsObject, chartConfiguration, yAxisItem.id, xAxisItems),\n      type: getAllowedChartType(chartConfiguration.type)\n    };\n  });\n  return series;\n}","import { assign, map } from \"lodash\";\nexport function getChartYAxisOptions(chartConfiguration) {\n  const yAxes = chartConfiguration.axes;\n  let newYAxes = [];\n  if (yAxes.length == 0) {\n    newYAxes = assign([], [{\n      min: chartConfiguration.rangeAxisMinValue,\n      max: chartConfiguration.rangeAxisMaxValue,\n      title: {\n        text: \"\",\n        style: {\n          color: \"#000000\",\n          fontWeight: \"normal\",\n          fontSize: \"14px\"\n        }\n      }\n    }]);\n  } else {\n    newYAxes = map(yAxes, yAxis => {\n      return {\n        min: chartConfiguration.rangeAxisMinValue,\n        max: chartConfiguration.rangeAxisMaxValue,\n        title: {\n          text: yAxis.name,\n          style: {\n            color: \"#000000\",\n            fontWeight: \"normal\",\n            fontSize: \"14px\"\n          }\n        },\n        opposite: yAxis.orientation !== \"left\"\n      };\n    });\n  }\n  return map(newYAxes, yAxis => {\n    /**\n     * Get more options depending on chart type\n     */\n    switch (chartConfiguration.type) {\n      case \"radar\":\n        yAxis[\"gridLineInterpolation\"] = \"polygon\";\n        yAxis[\"lineWidth\"] = 0;\n        break;\n      case \"solidgauge\":\n        yAxis[\"lineWidth\"] = 0;\n        yAxis[\"labels\"] = {\n          y: 16\n        };\n        yAxis[\"max\"] = 100;\n        break;\n      case \"stacked_column\":\n        yAxis[\"stackLabels\"] = {\n          enabled: false,\n          style: {\n            fontWeight: \"bold\"\n          }\n        };\n        break;\n      default:\n        yAxis[\"labels\"] = {\n          style: {\n            color: \"#000000\",\n            fontWeight: \"normal\",\n            fontSize: \"14px\"\n          }\n        };\n        yAxis[\"plotLines\"] = [{\n          color: \"#000000\",\n          dashStyle: \"Solid\",\n          value: chartConfiguration.targetLineValue,\n          width: 2,\n          zIndex: 1000,\n          label: {\n            text: chartConfiguration.targetLineLabel\n          }\n        }, {\n          color: \"#000000\",\n          dashStyle: \"Solid\",\n          value: chartConfiguration.baseLineValue,\n          zIndex: 1000,\n          width: 2,\n          label: {\n            text: chartConfiguration.baseLineLabel\n          }\n        }];\n        break;\n    }\n    return yAxis;\n  });\n}","import { find, findIndex } from \"lodash\";\nexport function getCombinedChartSeriesData(seriesData) {\n  let combinedSeriesData = [];\n  seriesData.forEach(seriesDataArray => {\n    seriesDataArray.forEach(seriesDataObject => {\n      const availableSeriesData = find(combinedSeriesData, [\"id\", seriesDataObject.id]);\n      if (!availableSeriesData) {\n        combinedSeriesData = [...combinedSeriesData, seriesDataObject];\n      } else {\n        const seriesDataIndex = findIndex(combinedSeriesData, availableSeriesData);\n        const newSeriesObject = {\n          ...seriesDataObject\n        };\n        newSeriesObject.y += availableSeriesData.y;\n        combinedSeriesData = [...combinedSeriesData.slice(0, seriesDataIndex), newSeriesObject, ...combinedSeriesData.slice(seriesDataIndex + 1)];\n      }\n    });\n  });\n  return combinedSeriesData;\n}","import { find, map, reverse, sortBy } from \"lodash\";\nimport { getCombinedChartSeriesData } from \"./get-combined-chart-series-data.helper\";\nexport function getSortedChartSeries(series, sortOrder) {\n  let newSeries = [...series];\n  let seriesCategories = [];\n\n  /**\n   * Combine all available series for sorting\n   */\n  const combinedSeriesData = [...getCombinedChartSeriesData(map(series, seriesObject => seriesObject.data))];\n  if (sortOrder === 1) {\n    seriesCategories = map(reverse(sortBy(combinedSeriesData, [\"y\"])), seriesData => seriesData.id);\n    newSeries = map(newSeries, seriesObject => {\n      const newSeriesObject = {\n        ...seriesObject\n      };\n      if (seriesCategories.length > 0) {\n        newSeriesObject.data = [...map(seriesCategories, seriesCategory => find(seriesObject.data, [\"id\", seriesCategory]))];\n      }\n      return newSeriesObject;\n    });\n  } else if (sortOrder === -1) {\n    seriesCategories = map(sortBy(combinedSeriesData, [\"y\"]), seriesData => seriesData.id);\n    newSeries = map(series, seriesObject => {\n      const newSeriesObject = {\n        ...seriesObject\n      };\n      if (seriesCategories.length > 0) {\n        newSeriesObject.data = [...map(seriesCategories, seriesCategory => find(seriesObject.data, [\"id\", seriesCategory]))];\n      }\n      return newSeriesObject;\n    });\n  }\n  return newSeries;\n}","import { assign, clone } from \"lodash\";\nimport { getChartAxisItems } from \"./get-chart-axis-items.helper\";\nimport { getChartPaneOptions } from \"./get-chart-pane-options.helper\";\nimport { getChartSeries } from \"./get-chart-series.helper\";\nimport { getChartYAxisOptions } from \"./get-chart-y-axis-options.helper\";\nimport { getSortedChartSeries } from \"./get-sorted-chart-series.helper\";\nexport function getSolidGaugeChartObject(initialChartObject, analyticsObject, chartConfiguration) {\n  // todo make gauge chart more understanble in analyisis\n  const newChartObject = clone(initialChartObject);\n  const yAxisSeriesItems = getChartAxisItems(analyticsObject, chartConfiguration.yAxisType);\n\n  /**\n   * Get pane options\n   */\n  newChartObject.pane = getChartPaneOptions(chartConfiguration.type);\n\n  /**\n   * Get y axis options\n   */\n  newChartObject.yAxis = assign([], getChartYAxisOptions(chartConfiguration));\n\n  /**\n   * Sort the corresponding series\n   */\n  const sortedSeries = getSortedChartSeries(getChartSeries(analyticsObject, getChartAxisItems(analyticsObject, chartConfiguration.xAxisType, true), yAxisSeriesItems, chartConfiguration), chartConfiguration.cumulativeValues ? -1 : chartConfiguration.sortOrder);\n  return {\n    ...newChartObject,\n    series: sortedSeries\n  };\n}","import { assign, clone } from \"lodash\";\nimport { getChartAxisItems } from \"./get-chart-axis-items.helper\";\nimport { getChartPaneOptions } from \"./get-chart-pane-options.helper\";\nimport { getChartSeries } from \"./get-chart-series.helper\";\nimport { getChartYAxisOptions } from \"./get-chart-y-axis-options.helper\";\nimport { getChartXAxisOptions } from \"./get-charts-x-axis-options.helper\";\nimport { getSanitizedChartXAxisCategories } from \"./get-sanitized-chart-x-axis-categories.helper\";\nimport { getSortedChartSeries } from \"./get-sorted-chart-series.helper\";\nimport { getXAxisItemsFromChartConfiguration } from \"./get-x-axis-items-from-chart-configuration.helper\";\nexport function getSpiderWebChartObject(initialChartObject, analyticsObject, chartConfiguration) {\n  //getChartAxisItems\n  const newChartObject = clone(initialChartObject);\n  const yAxisSeriesItems = getChartAxisItems(analyticsObject, chartConfiguration.yAxisType);\n\n  /**\n   * Get pane attribute\n   */\n  newChartObject.pane = assign({}, getChartPaneOptions(chartConfiguration.type));\n\n  /**\n   * Get y axis options\n   */\n  newChartObject.yAxis = assign([], getChartYAxisOptions(chartConfiguration));\n\n  /**\n   * Sort the corresponding series\n   * getChartSeries\n   */\n  const sortedSeries = getSortedChartSeries(getChartSeries(analyticsObject, getChartAxisItems(analyticsObject, chartConfiguration.xAxisType, true), yAxisSeriesItems, chartConfiguration), chartConfiguration.cumulativeValues ? -1 : chartConfiguration.sortOrder);\n\n  /**\n   *  Get series\n   *\n   */\n\n  newChartObject.series = assign([], sortedSeries);\n  const xAxisItems = getXAxisItemsFromChartConfiguration(chartConfiguration);\n\n  /**\n   *\n   *   Get refined x axis options\n   */\n  newChartObject.xAxis = getChartXAxisOptions(getSanitizedChartXAxisCategories(newChartObject.series, xAxisItems), chartConfiguration);\n  return newChartObject;\n}","import { find } from \"lodash\";\nexport function getXAxisItemsFromChartConfiguration(chartConfiguration) {\n  return (chartConfiguration ? chartConfiguration.xAxisType : []).map(xAxisDimension => {\n    const dataSelection = find(chartConfiguration ? chartConfiguration.dataSelections : [], [\"dimension\", xAxisDimension === \"groups\" ? \"dx\" : xAxisDimension]);\n    return dataSelection ? xAxisDimension === \"groups\" ? dataSelection.groups : dataSelection.items : [];\n  });\n}","import { assign } from \"lodash\";\nexport function getChartXAxisOptions(xAxisCategories, chartConfiguration) {\n  let xAxisOptions = {};\n  switch (chartConfiguration.type) {\n    case \"radar\":\n      xAxisOptions = assign({}, {\n        categories: xAxisCategories,\n        tickmarkPlacement: \"on\",\n        lineWidth: 0\n      });\n      break;\n    default:\n      xAxisOptions = assign({}, {\n        categories: [...(xAxisCategories === null || xAxisCategories === void 0 ? void 0 : xAxisCategories.map(xAxisCategory => xAxisCategory.name))],\n        labels: {\n          rotation: 0,\n          useHTML: true,\n          allowOverlap: true,\n          style: {\n            color: \"#000000\",\n            fontWeight: \"normal\",\n            fontSize: \"12px\",\n            wordBreak: \"break-all\",\n            textOverflow: \"allow\"\n          }\n        }\n      });\n      break;\n  }\n  return xAxisOptions;\n}","import { assign, filter, find, findIndex, forEach, groupBy, map, reverse, times, uniqBy } from \"lodash\";\nexport function getSanitizedChartXAxisCategories(series, xAxisItems) {\n  const reversedXAxisItems = reverse(xAxisItems || []);\n  let newCategories = [];\n  if (series) {\n    const seriesDataObjects = map(series, seriesObject => seriesObject.data);\n    if (seriesDataObjects) {\n      const seriesCategoryNamesArray = map(seriesDataObjects, seriesData => {\n        return map(seriesData, data => {\n          const idArray = data.name.split(\"_\");\n          const newCategoryArray = [];\n          if (idArray) {\n            const reversedIdArray = reverse(idArray);\n            times(idArray.length, num => {\n              if (num === 0) {\n                const parentCategoryItem = find(reversedXAxisItems[num] || [], [\"id\", reversedIdArray[num]]);\n                newCategoryArray.push({\n                  id: reversedIdArray[num],\n                  name: parentCategoryItem ? parentCategoryItem.label || parentCategoryItem.name : reversedIdArray[num]\n                });\n              } else {\n                const parentCategory = find(newCategoryArray, [\"id\", reversedIdArray[num - 1]]);\n                if (parentCategory) {\n                  const parentCategoryIndex = findIndex(newCategoryArray, parentCategory);\n                  let newChildrenCategories = parentCategory.categories ? parentCategory.categories : [];\n                  const childrenCategoryItem = find(reversedXAxisItems[num] || [], [\"id\", reversedIdArray[num]]);\n                  newChildrenCategories = [...newChildrenCategories, childrenCategoryItem ? childrenCategoryItem.label || childrenCategoryItem.name : reversedIdArray[num]];\n                  parentCategory.categories = assign([], newChildrenCategories);\n                  newCategoryArray[parentCategoryIndex] = parentCategory;\n                }\n              }\n            });\n          }\n          return newCategoryArray[0];\n        });\n      });\n      if (seriesCategoryNamesArray) {\n        const groupedCategoryNames = groupBy(seriesCategoryNamesArray[0], \"name\");\n        const categoryNameGroupKeys = map(seriesCategoryNamesArray[0], category => category.name);\n        const sanitizedCategoryNames = [];\n        forEach(categoryNameGroupKeys, key => {\n          const categories = filter(map(groupedCategoryNames[key], categoryObject => {\n            return categoryObject.categories ? categoryObject.categories[0] : null;\n          }), category => category !== null);\n          if (categories.length === 0) {\n            sanitizedCategoryNames.push({\n              name: key\n            });\n          } else {\n            sanitizedCategoryNames.push({\n              name: key,\n              categories: categories\n            });\n          }\n        });\n        newCategories = assign([], sanitizedCategoryNames);\n      }\n    }\n  }\n  return uniqBy(newCategories, \"name\");\n}","/* eslint-disable no-case-declarations */\nimport { clone } from \"lodash\";\nimport { getInitialChartObject } from \"./get-initial-chart-object-helper\";\nimport { getSanitizedanalyticsBasedOnConfiguration } from \"./get-sanitized-analytics-based-on-chart-configuration.helper\";\nimport { getSanitizedChartObject } from \"./get-sanitized-chart-object.helper\";\nimport { getSolidGaugeChartObject } from \"./get-solid-gauge-chart-object.helper\";\nimport { getSpiderWebChartObject } from \"./get-spider-web-chart-object.helper\";\nexport function getCharObject(incommingAnalyticObject, chartConfiguration) {\n  const analyticsObject = getSanitizedanalyticsBasedOnConfiguration(incommingAnalyticObject, chartConfiguration);\n  let chartObject = getInitialChartObject(analyticsObject, chartConfiguration);\n\n  /**\n   * Extend chart options depending on type\n   */\n\n  switch (chartConfiguration.type) {\n    case \"radar\":\n      chartObject = getSpiderWebChartObject(chartObject, analyticsObject, chartConfiguration);\n      break;\n    case \"solidgauge\":\n      chartObject = getSolidGaugeChartObject(chartObject, analyticsObject, chartConfiguration);\n      break;\n    case \"gauge\":\n      const newChartConfiguration = clone(chartConfiguration);\n      newChartConfiguration.type = \"solidgauge\";\n      chartObject = getSolidGaugeChartObject(chartObject, analyticsObject, newChartConfiguration);\n      break;\n    default:\n      return getSanitizedChartObject(getSpiderWebChartObject(chartObject, analyticsObject, chartConfiguration), chartConfiguration);\n  }\n  return getSanitizedChartObject(chartObject, chartConfiguration);\n}","import { getChartColors } from \"./get-chart-colors.helper\";\nimport { getChartCreditsOption } from \"./get-chart-credit-options.helper\";\nimport { getPlotOptions } from \"./get-chart-plot-options.helper\";\nimport { getChartSubtitleObject } from \"./get-chart-subtitle.helper\";\nimport { getChartTitleObject } from \"./get-chart-title-object.helper\";\nimport { getTooltipOptions } from \"./get-chart-tooltip-options.helper\";\nimport { getChartAttributeOptions } from \"./getChartAttributeOptions\";\nexport function getInitialChartObject(analyticsObject, chartConfiguration) {\n  return {\n    chart: getChartAttributeOptions(chartConfiguration),\n    title: getChartTitleObject(chartConfiguration),\n    subtitle: getChartSubtitleObject(chartConfiguration, analyticsObject),\n    credits: getChartCreditsOption(),\n    colors: getChartColors(),\n    plotOptions: getPlotOptions(chartConfiguration),\n    tooltip: getTooltipOptions(chartConfiguration)\n  };\n}","export function getChartCreditsOption() {\n  return {\n    enabled: false\n  };\n}","export function getChartColors() {\n  return [\"#A9BE3B\", \"#558CC0\", \"#D34957\", \"#FF9F3A\", \"#968F8F\", \"#B7409F\", \"#FFDA64\", \"#4FBDAE\", \"#B78040\", \"#676767\", \"#6A33CF\", \"#4A7833\", \"#434348\", \"#7CB5EC\", \"#F7A35C\", \"#F15C80\"];\n}","/* eslint-disable no-prototype-builtins */\n/* eslint-disable max-params */\n\nexport function getChartConfiguration(visualizationSettings, renderId, visualizationLayout, interventionName, customChartType, dataSelections) {\n  const chartType = customChartType;\n  return {\n    renderId: renderId,\n    type: chartType,\n    title: getChartTitle(visualizationSettings, interventionName),\n    subtitle: visualizationSettings.hasOwnProperty(\"subtitle\") ? visualizationSettings.subtitle : \"\",\n    hideTitle: visualizationSettings.hasOwnProperty(\"hideTitle\") ? visualizationSettings.hideTitle : true,\n    hideSubtitle: visualizationSettings.hasOwnProperty(\"hideSubtitle\") ? visualizationSettings.hideSubtitle : false,\n    showData: visualizationSettings.hasOwnProperty(\"showData\") ? visualizationSettings.showData : true,\n    hideEmptyRows: visualizationSettings.hasOwnProperty(\"hideEmptyRows\") ? visualizationSettings.hideEmptyRows : true,\n    hideLegend: visualizationSettings.hasOwnProperty(\"hideLegend\") ? visualizationSettings.hideLegend : true,\n    cumulativeValues: visualizationSettings.hasOwnProperty(\"cumulativeValues\") ? visualizationSettings.cumulativeValues : false,\n    targetLineValue: visualizationSettings.targetLineValue ? visualizationSettings.targetLineValue : undefined,\n    targetLineLabel: visualizationSettings.targetLineLabel ? visualizationSettings.targetLineLabel : \"\",\n    baseLineValue: visualizationSettings.baseLineValue ? visualizationSettings.baseLineValue : undefined,\n    baseLineLabel: visualizationSettings.baseLineLabel ? visualizationSettings.baseLineLabel : \"\",\n    legendAlign: \"bottom\",\n    categoryRotation: 0,\n    reverseLegend: false,\n    showLabels: true,\n    axes: visualizationSettings.axes ? visualizationSettings.axes : [],\n    rangeAxisMaxValue: 90,\n    rangeAxisMinValue: visualizationSettings.rangeAxisMinValue ? visualizationSettings.rangeAxisMinValue : undefined,\n    sortOrder: visualizationSettings.hasOwnProperty(\"sortOrder\") ? visualizationSettings.sortOrder : 0,\n    percentStackedValues: visualizationSettings.hasOwnProperty(\"percentStackedValues\") ? visualizationSettings.percentStackedValues : true,\n    multiAxisTypes: visualizationSettings.hasOwnProperty(\"selectedChartTypes\") ? visualizationSettings.selectedChartTypes : [],\n    xAxisType: visualizationLayout.row,\n    yAxisType: visualizationLayout.column,\n    zAxisType: visualizationLayout.filter,\n    dataSelections\n  };\n}\nfunction getChartTitle(favoriteObject, interventionName) {\n  return `${favoriteObject.title || favoriteObject.displayName || favoriteObject.name}${interventionName ? ` : ${interventionName}` : \"\"}`;\n}","/* eslint-disable import/no-unresolved */\nimport { atom, selectorFamily } from \"recoil\";\nimport { getChartConfiguration } from \"../helper/get-chart-configuration.helper\";\nimport { CHART_TYPES } from \"../../../../../../../../../constants\";\nexport const chartTypesAtom = atom({\n  key: \"chartTypes-atom\",\n  default: CHART_TYPES\n});\nexport const chartUpdateAtom = atom({\n  key: \"chart-update-atom\",\n  default: {\n    id: \"\",\n    type: \"\"\n  }\n});\nexport const currentChartTypeAtom = atom({\n  key: \"current-chart-type\",\n  default: \"column\"\n});\nexport const chartConfigurationSelector = selectorFamily({\n  key: \"chart-comfiguration-selector\",\n  get: _ref => {\n    let {\n      layout,\n      currentChartType\n    } = _ref;\n    return () => {\n      const configuration = getChartConfiguration({}, \"render-id-unique\", layout, \"\", currentChartType, []);\n      return configuration;\n    };\n  }\n});","import Highcharts from \"highcharts\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect } from \"react\";\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { DataState } from \"../../../../state/data\";\nimport \"./chart-item-component.css\";\nimport { LayoutState } from \"../../../../state/layout\";\nimport { getCharObject } from \"../../helper/get-chart-object.helper\";\nimport { chartConfigurationSelector, chartTypesAtom, chartUpdateAtom, currentChartTypeAtom } from \"../../state-helper/chartAnalyticsChart\";\nexport default function ChartItemComponent(_ref) {\n  let {\n    chartHeight\n  } = _ref;\n  const chartTypes = useRecoilValue(chartTypesAtom);\n  const setChartUpdate = useSetRecoilState(chartUpdateAtom);\n  const [currentChartType, setCurrentChartType] = useRecoilState(currentChartTypeAtom);\n  const data = useRecoilValue(DataState);\n  const layout = useRecoilValue(LayoutState);\n  const chartConfiguration = useRecoilValue(chartConfigurationSelector({\n    layout,\n    currentChartType\n  }));\n  let chart = \"\";\n  useEffect(() => {\n    drawChart(data[\"_data\"], chartConfiguration);\n  }, [data, currentChartType, layout]);\n  function drawChart(analyticsObject, chartConfiguration) {\n    if (chartConfiguration && analyticsObject) {\n      const chartObject = getCharObject(analyticsObject, chartConfiguration);\n      if (chartObject) {\n        setTimeout(() => {\n          chart = Highcharts.chart(\"renderId\", chartObject);\n        }, 20);\n      }\n    }\n  }\n  function updateChartType(chartType, event) {\n    event.stopPropagation();\n    setCurrentChartType(chartType);\n    drawChart(data[\"_data\"], {\n      ...chartConfiguration,\n      type: chartType\n    });\n    setChartUpdate({\n      id: \"render-id-unique\",\n      type: chartType.toUpperCase\n    });\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-item-container\",\n    style: {\n      width: \"100%\"\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"renderId\",\n    className: \"chart-block\",\n    style: {\n      height: \"calc(\" + chartHeight + \"px-20px\",\n      width: \"100%\"\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"chart-type-list animated fadeInRight\"\n  }, chartTypes === null || chartTypes === void 0 ? void 0 : chartTypes.map((chartType, chartTypePosition) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: \"chart-type\" + chartTypePosition\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => updateChartType(chartType.type, e),\n      title: chartType.description,\n      className: currentChartType == chartType.type ? \"active-chart-type\" : \"\"\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: chartType.icon,\n      className: \"chart-option-icon\",\n      alt: \"\"\n    })));\n  })));\n}\nChartItemComponent.propTypes = {\n  chartHeight: PropTypes.string.isRequired\n};","import React, { Suspense } from \"react\";\nimport ChartItemComponent from \"../chart-item/chart-item-component\";\n//React.lazy(() => import('../chart-item/chart-item-component'));\nimport \"./chart-list-component.css\";\nexport default function ChartListComponent() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-list\"\n  }, /*#__PURE__*/React.createElement(Suspense, {\n    fallback: /*#__PURE__*/React.createElement(\"div\", null, \"Loading .....\")\n  }, /*#__PURE__*/React.createElement(ChartItemComponent, {\n    chartHeight: 2000\n  })));\n}","import i18n from \"@dhis2/d2-i18n\";\nimport { Button, Chip, Modal, ModalActions, ModalContent } from \"@dhis2/ui\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport ChartIcon from \"@material-ui/icons/Equalizer\";\nimport TableChartIcon from \"@material-ui/icons/TableChart\";\nimport { cloneDeep, find, get } from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport React, { Suspense, useEffect, useState } from \"react\";\nimport { useRecoilCallback, useRecoilValue, useRecoilValueLoadable, useResetRecoilState, useSetRecoilState } from \"recoil\";\nimport ChartAnalysis from \"./Components/ChartAnalysis\";\nimport { DataSourceState, DataState } from \"./state/data\";\nimport { LayoutState } from \"./state/layout\";\nimport { orgUnitSelectorOptionOnCell, OrgUnitState } from \"./state/orgUnit\";\nimport { cellPeriodOptionAtom, PeriodState } from \"./state/period\";\nimport { LowestOrgUnitLevel, OrgUnitLevels } from \"../../../../../../state\";\nimport { OrgUnitSelection } from \"../../../../../../models\";\nimport { getDataSourcesDisplayName } from \"../../../../../../utils\";\nimport ModalLoader from \"../../../../../Loaders/ModalLoader\";\nimport FullPageError from \"../../../../../Errors/FullPageError\";\nconst DictionaryAnalysis = /*#__PURE__*/React.lazy(() => import(\"./Components/DictionaryAnalysis\"));\nconst DimensionsSelector = /*#__PURE__*/React.lazy(() => import(\"./Components/DimensionsSelector\"));\nconst TableAnalysis = /*#__PURE__*/React.lazy(() => import(\"./Components/TableAnalysis\"));\nconst viewTypes = [{\n  displayName: i18n.t(\"Table\"),\n  name: \"table\",\n  icon: /*#__PURE__*/React.createElement(TableChartIcon, null),\n  component: TableAnalysis\n}, {\n  displayName: i18n.t(\"Chart\"),\n  name: \"chart\",\n  icon: /*#__PURE__*/React.createElement(ChartIcon, null),\n  component: ChartAnalysis\n}, {\n  displayName: i18n.t(\"Dictionary\"),\n  name: \"dictionary\",\n  icon: /*#__PURE__*/React.createElement(DescriptionIcon, null),\n  component: DictionaryAnalysis\n}];\nexport default function TableCellAnalysis(_ref) {\n  let {\n    onClose,\n    dataHolder,\n    orgUnit,\n    period\n  } = _ref;\n  const dataState = useRecoilValueLoadable(DataState);\n  const orgUnitLevels = useRecoilValue(OrgUnitLevels);\n  const [viewType, setViewType] = useState(viewTypes[0]);\n  const dataSources = dataHolder === null || dataHolder === void 0 ? void 0 : dataHolder.dataSources;\n  const SelectedView = viewType.component;\n  const resetPeriodOptionsCell = useResetRecoilState(cellPeriodOptionAtom);\n  const resetOrgUnitOptionCell = useSetRecoilState(orgUnitSelectorOptionOnCell);\n  const setStates = useRecoilCallback(_ref2 => {\n    let {\n      set,\n      snapshot\n    } = _ref2;\n    return () => {\n      const orgUnitOptionValue = snapshot.getLoadable(orgUnitSelectorOptionOnCell).contents;\n      const lowestOrgUnitLevel = snapshot.getLoadable(LowestOrgUnitLevel).contents;\n      function orgUnitUpdateSelector() {\n        const orgUnitSelection = new OrgUnitSelection({\n          orgUnits: [orgUnit]\n        });\n        if (orgUnitOptionValue) {\n          const newOrgUnitSelection = cloneDeep(orgUnitSelection);\n          const currentOrgUnitLevel = get(orgUnitSelection, ['orgUnits', 0, 'level']);\n          if (currentOrgUnitLevel < lowestOrgUnitLevel.level) {\n            const orgUnitCurrentUserBelowLevels = find(orgUnitLevels, function (level) {\n              return level.level === currentOrgUnitLevel + 1;\n            });\n            newOrgUnitSelection['levels'] = [orgUnitCurrentUserBelowLevels.id];\n          } else {\n            return orgUnitSelection;\n          }\n          return newOrgUnitSelection;\n        } else {\n          return orgUnitSelection;\n        }\n      }\n      if (orgUnitOptionValue) {\n        set(LayoutState, {\n          column: [\"dx\"],\n          row: [\"ou\"],\n          filter: [\"pe\"]\n        });\n      }\n      set(DataSourceState, dataSources);\n      set(OrgUnitState, orgUnitUpdateSelector());\n      set(PeriodState, {\n        periods: [period]\n      });\n    };\n  }, [dataSources, orgUnit, orgUnitLevels, period]);\n  const resetStates = useRecoilCallback(_ref3 => {\n    let {\n      reset\n    } = _ref3;\n    return () => {\n      reset(OrgUnitState);\n      reset(PeriodState);\n      reset(LayoutState);\n      reset(DataSourceState);\n    };\n  }, []);\n  useEffect(() => {\n    setStates();\n    return () => {\n      resetStates();\n      resetPeriodOptionsCell();\n      resetOrgUnitOptionCell(false);\n    };\n  }, [dataSources, orgUnit, period]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    className: \"large-modal\",\n    position: \"middle\",\n    onClose: onClose,\n    large: true\n  }, /*#__PURE__*/React.createElement(ModalContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      overflow: \"hidden\",\n      minHeight: 400\n    },\n    className: \"h-100 w-100 column\"\n  }, /*#__PURE__*/React.createElement(DimensionsSelector, null), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"pt-8\"\n  }, getDataSourcesDisplayName(dataSources)), /*#__PURE__*/React.createElement(Suspense, {\n    fallback: /*#__PURE__*/React.createElement(ModalLoader, null)\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      overflow: \"auto\",\n      margin: \"16px 0\",\n      height: \"100%\"\n    }\n  }, dataState.state === \"hasError\" && /*#__PURE__*/React.createElement(FullPageError, {\n    error: dataState.contents\n  }), dataState.state === \"loading\" && /*#__PURE__*/React.createElement(ModalLoader, null), dataState.state === \"hasValue\" && /*#__PURE__*/React.createElement(SelectedView, null))))), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      bottom: 16,\n      left: 16,\n      width: `calc(100% - 32px)`\n    },\n    className: \"row space-between align-items-end\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, viewTypes === null || viewTypes === void 0 ? void 0 : viewTypes.map(type => /*#__PURE__*/React.createElement(Chip, {\n    selected: (type === null || type === void 0 ? void 0 : type.name) === (viewType === null || viewType === void 0 ? void 0 : viewType.name),\n    onClick: () => setViewType(type),\n    key: type === null || type === void 0 ? void 0 : type.name,\n    icon: type === null || type === void 0 ? void 0 : type.icon\n  }, type === null || type === void 0 ? void 0 : type.displayName))), /*#__PURE__*/React.createElement(Button, {\n    onClick: onClose\n  }, i18n.t('Cancel')))));\n}\nTableCellAnalysis.propTypes = {\n  dataHolder: PropTypes.object.isRequired,\n  orgUnit: PropTypes.object.isRequired,\n  period: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired\n};","import React from \"react\";\nimport ChartListComponent from \"./Components/chart-list/chart-list-component\";\nexport default function ChartAnalysis() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column align-items-center center h-100\"\n  }, /*#__PURE__*/React.createElement(ChartListComponent, {\n    width: \"100%\"\n  }));\n}","import { colors } from \"@dhis2/ui\";\nimport PropTypes from \"prop-types\";\nimport React, { useMemo } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { LinkedCellSvg, SingleCellSvg } from \"../../../../../../index\";\nimport { ScorecardViewState } from \"../../../../../../../state\";\nimport { getIncreasingStatus } from \"../../../../../../../utils\";\nexport function SingleDataCell(_ref) {\n  var _useRecoilValue;\n  let {\n    cellRef,\n    data,\n    color,\n    indicator\n  } = _ref;\n  const {\n    arrows\n  } = (_useRecoilValue = useRecoilValue(ScorecardViewState(\"options\"))) !== null && _useRecoilValue !== void 0 ? _useRecoilValue : {};\n  const {\n    current,\n    previous\n  } = data !== null && data !== void 0 ? data : {};\n  const increasing = useMemo(() => {\n    const {\n      effectiveGap,\n      displayArrows\n    } = indicator !== null && indicator !== void 0 ? indicator : {};\n    if (arrows && displayArrows) {\n      return getIncreasingStatus(current, previous, effectiveGap);\n    }\n    return null;\n  }, [current, previous, arrows, indicator]);\n  return current ? /*#__PURE__*/React.createElement(SingleCellSvg, {\n    cellRef: cellRef,\n    status: increasing,\n    value: `${current !== null && current !== void 0 ? current : \"\"}`,\n    color: color\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 47,\n      width: \"100%\",\n      background: color\n    }\n  });\n}\nSingleDataCell.propTypes = {\n  data: PropTypes.object.isRequired,\n  indicator: PropTypes.any.isRequired,\n  color: PropTypes.string\n};\nexport function LinkedDataCell(_ref2) {\n  var _useRecoilValue2;\n  let {\n    cellRef,\n    topData,\n    bottomData,\n    topColor,\n    bottomColor,\n    topIndicator,\n    bottomIndicator\n  } = _ref2;\n  const {\n    current: topCurrent,\n    previous: topPrevious\n  } = topData !== null && topData !== void 0 ? topData : {};\n  const {\n    current: bottomCurrent,\n    previous: bottomPrevious\n  } = bottomData !== null && bottomData !== void 0 ? bottomData : {};\n  const {\n    arrows\n  } = (_useRecoilValue2 = useRecoilValue(ScorecardViewState(\"options\"))) !== null && _useRecoilValue2 !== void 0 ? _useRecoilValue2 : {};\n  const topIncreasing = useMemo(() => {\n    const {\n      effectiveGap,\n      displayArrows\n    } = topIndicator !== null && topIndicator !== void 0 ? topIndicator : {};\n    if (arrows && displayArrows) {\n      return getIncreasingStatus(topCurrent, topPrevious, effectiveGap);\n    }\n    return null;\n  }, [topCurrent, topPrevious, arrows, topIndicator]);\n  const bottomIncreasing = useMemo(() => {\n    const {\n      effectiveGap,\n      displayArrows\n    } = bottomIndicator !== null && bottomIndicator !== void 0 ? bottomIndicator : {};\n    if (arrows && displayArrows) {\n      return getIncreasingStatus(bottomCurrent, bottomPrevious, effectiveGap);\n    }\n    return null;\n  }, [bottomCurrent, bottomPrevious, arrows, bottomIndicator]);\n  return topCurrent || bottomCurrent ? /*#__PURE__*/React.createElement(LinkedCellSvg, {\n    cellRef: cellRef,\n    topValue: topCurrent,\n    topColor: topColor,\n    bottomValue: bottomCurrent,\n    bottomColor: bottomColor,\n    topStatus: topIncreasing,\n    bottomStatus: bottomIncreasing\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"100%\",\n      width: \"100%\",\n      background: colors.grey100\n    }\n  });\n}\nLinkedDataCell.propTypes = {\n  bottomData: PropTypes.object.isRequired,\n  bottomIndicator: PropTypes.any.isRequired,\n  topData: PropTypes.object.isRequired,\n  topIndicator: PropTypes.any.isRequired,\n  bottomColor: PropTypes.string,\n  topColor: PropTypes.string\n};","// extracted by mini-css-extract-plugin\nexport default {\"furtherAnalysisMenu\":\"FurtherAnalysisMenu_furtherAnalysisMenu__NHa6A\"};","import i18n from \"@dhis2/d2-i18n\";\nimport { IconDimensionOrgUnit16, IconVisualizationColumnStacked24, IconVisualizationLine24, Menu, MenuItem, Popover } from \"@dhis2/ui\";\nimport { Period } from \"@iapps/period-utilities\";\nimport PropTypes from 'prop-types';\nimport React, { useState } from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { orgUnitSelectorOptionOnCell } from \"../../../TableCellAnalysis/state/orgUnit\";\nimport { cellPeriodOptionSelector } from \"../../../TableCellAnalysis/state/period\";\nimport styles from \"./FurtherAnalysisMenu.module.css\";\nexport default function FurtherAnalysisMenu(_ref) {\n  let {\n    stateActionRef,\n    setStateActionRef,\n    setAnalysisOpen\n  } = _ref;\n  const [showSubMenu, setShowSubMenu] = useState(false);\n  const setPeriodOptionValueStates = useSetRecoilState(cellPeriodOptionSelector);\n  const setOrgUnitOptionValueStates = useSetRecoilState(orgUnitSelectorOptionOnCell);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Popover, {\n    onClickOutside: () => setStateActionRef(undefined),\n    placement: \"bottom-start\",\n    reference: stateActionRef\n  }, /*#__PURE__*/React.createElement(Menu, null, /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: () => {\n      setStateActionRef(undefined);\n      setAnalysisOpen(true);\n    },\n    label: i18n.t(\"Further Analysis\"),\n    icon: /*#__PURE__*/React.createElement(IconVisualizationColumnStacked24, null)\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: () => {\n      setOrgUnitOptionValueStates(true);\n      setStateActionRef(undefined);\n      setAnalysisOpen(true);\n    },\n    label: i18n.t(\"Lower Organisation Unit Levels\"),\n    icon: /*#__PURE__*/React.createElement(IconDimensionOrgUnit16, null)\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    showSubMenu: showSubMenu,\n    toggleSubMenu: () => {\n      setShowSubMenu(prevState => !prevState);\n    },\n    label: i18n.t(\"Trend Analysis \"),\n    icon: /*#__PURE__*/React.createElement(IconVisualizationLine24, null),\n    className: styles['furtherAnalysisMenu']\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: () => {\n      setStateActionRef(undefined);\n      setPeriodOptionValueStates([new Period().setPreferences({\n        allowFuturePeriods: true\n      }).getById(\"LAST_3_MONTHS\")]);\n      setAnalysisOpen(true);\n    },\n    label: i18n.t(\"Last 3 Months\"),\n    icon: /*#__PURE__*/React.createElement(IconVisualizationColumnStacked24, null),\n    className: styles['furtherAnalysisMenu']\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: () => {\n      setStateActionRef(undefined);\n      setPeriodOptionValueStates([new Period().setPreferences({\n        allowFuturePeriods: true\n      }).getById(\"LAST_6_MONTHS\")]);\n      setAnalysisOpen(true);\n    },\n    label: i18n.t(\"Last 6 Months\"),\n    icon: /*#__PURE__*/React.createElement(IconVisualizationColumnStacked24, null),\n    className: styles['furtherAnalysisMenu']\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: () => {\n      setStateActionRef(undefined);\n      setPeriodOptionValueStates([new Period().setPreferences({\n        allowFuturePeriods: true\n      }).getById(\"LAST_12_MONTHS\")]);\n      setAnalysisOpen(true);\n    },\n    label: i18n.t(\"Last 12 Months\"),\n    icon: /*#__PURE__*/React.createElement(IconVisualizationColumnStacked24, null),\n    className: styles['furtherAnalysisMenu']\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: () => {\n      setStateActionRef(undefined);\n      setPeriodOptionValueStates([new Period().setPreferences({\n        allowFuturePeriods: true\n      }).getById(\"LAST_4_QUARTERS\")]);\n      setAnalysisOpen(true);\n    },\n    label: i18n.t(\"Last 4 Quarters\"),\n    icon: /*#__PURE__*/React.createElement(IconVisualizationColumnStacked24, null),\n    className: styles['furtherAnalysisMenu']\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: () => {\n      setStateActionRef(undefined);\n      setPeriodOptionValueStates([new Period().setPreferences({\n        allowFuturePeriods: true\n      }).getById(\"LAST_5_YEARS\")]);\n      setAnalysisOpen(true);\n    },\n    label: i18n.t(\"Last 5 Years\"),\n    icon: /*#__PURE__*/React.createElement(IconVisualizationColumnStacked24, null),\n    className: styles['furtherAnalysisMenu']\n  })))));\n}\nFurtherAnalysisMenu.propTypes = {\n  setAnalysisOpen: PropTypes.func,\n  setStateActionRef: PropTypes.func,\n  stateActionRef: PropTypes.object\n};","import PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\nimport { useRecoilValue, useResetRecoilState } from \"recoil\";\nimport TableCellAnalysis from \"../TableCellAnalysis\";\nimport { orgUnitOptionOnCell } from \"../TableCellAnalysis/state/orgUnit\";\nimport { cellPeriodOptionAtom } from \"../TableCellAnalysis/state/period\";\nimport { LinkedDataCell, SingleDataCell } from \"./Components/DataCells\";\nimport FurtherAnalysisMenu from \"./Components/FurtherAnalysisMenu\";\nimport LoadingCell from \"./Components/LoadingCell\";\nimport { OrgUnitLevels, ScorecardViewState } from \"../../../../../../state\";\nimport { getLegend } from \"../../../../../../utils\";\nimport { ScorecardDataEngine } from \"../../../../../../models\";\nfunction DataContainer(_ref) {\n  var _getLegend, _getLegend2;\n  let {\n    dataSources,\n    orgUnit,\n    period,\n    dataEngine\n  } = _ref;\n  const orgUnitLevels = useRecoilValue(OrgUnitLevels);\n  const legendDefinitions = useRecoilValue(ScorecardViewState(\"legendDefinitions\"));\n  const {\n    id: orgUnitId,\n    level: dataOrgUnitLevel\n  } = orgUnit !== null && orgUnit !== void 0 ? orgUnit : {};\n  const {\n    id: periodId\n  } = period !== null && period !== void 0 ? period : {};\n  const [analysisOpen, setAnalysisOpen] = useState(false);\n  const [topData, setTopData] = useState();\n  const [bottomData, setBottomData] = useState();\n  const [stateActionRef, setStateActionRef] = useState(null);\n  const resetPeriodsOptionSelection = useResetRecoilState(cellPeriodOptionAtom);\n  const resetOrgUnitOptionSelection = useResetRecoilState(orgUnitOptionOnCell);\n  const [tableCellRef, setTableRef] = useState();\n  const [top, bottom] = dataSources !== null && dataSources !== void 0 ? dataSources : [];\n  const {\n    color: topColor\n  } = (_getLegend = getLegend(topData === null || topData === void 0 ? void 0 : topData.current, top === null || top === void 0 ? void 0 : top.legends, {\n    max: top === null || top === void 0 ? void 0 : top.weight,\n    dataOrgUnitLevel,\n    orgUnitLevels,\n    legendDefinitions,\n    period: periodId,\n    orgUnit: orgUnitId,\n    specificTargets: top === null || top === void 0 ? void 0 : top.specificTargets\n  })) !== null && _getLegend !== void 0 ? _getLegend : {};\n  const {\n    color: bottomColor\n  } = (_getLegend2 = getLegend(bottomData === null || bottomData === void 0 ? void 0 : bottomData.current, bottom === null || bottom === void 0 ? void 0 : bottom.legends, {\n    max: bottom === null || bottom === void 0 ? void 0 : bottom.weight,\n    dataOrgUnitLevel,\n    orgUnitLevels,\n    legendDefinitions,\n    period: periodId,\n    orgUnit: orgUnitId,\n    specificTargets: bottom === null || bottom === void 0 ? void 0 : bottom.specificTargets\n  })) !== null && _getLegend2 !== void 0 ? _getLegend2 : {};\n  const loading = false;\n  const topKey = `${top.id}_${orgUnitId}_${periodId}`;\n  const bottomKey = `${bottom === null || bottom === void 0 ? void 0 : bottom.id}_${orgUnitId}_${periodId}`;\n  useEffect(() => {\n    const topSub = dataEngine.get(topKey).subscribe(data => {\n      setTopData(data);\n    });\n    const bottomSub = dataEngine.get(bottomKey).subscribe(setBottomData);\n    return () => {\n      topSub.unsubscribe();\n      bottomSub.unsubscribe();\n      resetPeriodsOptionSelection();\n      resetOrgUnitOptionSelection();\n    };\n  }, [orgUnitId, periodId, top, bottom]);\n  return /*#__PURE__*/React.createElement(\"td\", {\n    ref: setTableRef,\n    className: \"data-cell\",\n    align: \"center\",\n    \"data-test\": \"data-cell\",\n    style: {\n      minWidth: 100\n    },\n    onClick: event => {\n      event.stopPropagation();\n      setAnalysisOpen(true);\n    },\n    onContextMenu: e => {\n      e.preventDefault();\n      setStateActionRef(e.target);\n    }\n  }, loading ? /*#__PURE__*/React.createElement(LoadingCell, null) : (dataSources === null || dataSources === void 0 ? void 0 : dataSources.length) > 1 ? /*#__PURE__*/React.createElement(LinkedDataCell, {\n    cellRef: tableCellRef,\n    topIndicator: top,\n    bottomIndicator: bottom,\n    bottomData: bottomData,\n    topData: topData,\n    bottomColor: bottomColor,\n    topColor: topColor\n  }) : /*#__PURE__*/React.createElement(SingleDataCell, {\n    cellRef: tableCellRef,\n    indicator: top,\n    data: topData,\n    color: topColor\n  }), analysisOpen && /*#__PURE__*/React.createElement(TableCellAnalysis, {\n    orgUnit: orgUnit,\n    period: period,\n    dataHolder: {\n      dataSources\n    },\n    onClose: (_, event) => {\n      event.stopPropagation();\n      setAnalysisOpen(false);\n    }\n  }), stateActionRef && /*#__PURE__*/React.createElement(FurtherAnalysisMenu, {\n    orgUnit: orgUnit,\n    period: period,\n    dataSources: dataSources,\n    analysisOpen: analysisOpen,\n    setAnalysisOpen: setAnalysisOpen,\n    stateActionRef: stateActionRef,\n    setStateActionRef: setStateActionRef\n  }));\n}\nexport default DataContainer;\nDataContainer.propTypes = {\n  dataEngine: PropTypes.instanceOf(ScorecardDataEngine).isRequired,\n  dataSources: PropTypes.array.isRequired,\n  orgUnit: PropTypes.object.isRequired,\n  period: PropTypes.object.isRequired\n};","import { CircularLoader, DataTableCell, DataTableRow, LinearLoader } from \"@dhis2/ui\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { useMediaQuery } from \"../../../../../hooks\";\nimport { ScorecardDataLoadingState, ScorecardTableConfigState } from \"../../../../../state\";\nimport { ScorecardDataEngine } from \"../../../../../models\";\nexport default function TableLoader() {\n  const {\n    width: screenWidth\n  } = useMediaQuery();\n  return /*#__PURE__*/React.createElement(DataTableRow, null, /*#__PURE__*/React.createElement(DataTableCell, {\n    width: `${screenWidth}px`,\n    align: \"center\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row center align-items-center\",\n    style: {\n      height: 400,\n      width: \"100%\"\n    }\n  }, /*#__PURE__*/React.createElement(CircularLoader, {\n    small: true\n  }))));\n}\nexport function TableLinearLoader(_ref) {\n  let {\n    dataEngine,\n    orgUnits\n  } = _ref;\n  const {\n    width: screenWidth\n  } = useMediaQuery();\n  const {\n    colSpan\n  } = useRecoilValue(ScorecardTableConfigState(orgUnits));\n  const loading = useRecoilValue(ScorecardDataLoadingState(orgUnits));\n  const [progress, setProgress] = useState(0);\n  useEffect(() => {\n    const subscription = dataEngine.getProgress().subscribe(setProgress);\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [orgUnits, dataEngine]);\n  return loading ? /*#__PURE__*/React.createElement(DataTableRow, null, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: colSpan\n  }, /*#__PURE__*/React.createElement(LinearLoader, {\n    width: `${screenWidth}px`,\n    amount: progress,\n    margin: 0\n  }))) : null;\n}\nTableLinearLoader.propTypes = {\n  dataEngine: PropTypes.instanceOf(ScorecardDataEngine).isRequired,\n  orgUnits: PropTypes.array.isRequired\n};","import { colors } from \"@dhis2/ui\";\nimport { debounce } from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport React, { useRef } from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport { useSetRecoilState } from \"recoil\";\nimport { ScorecardTableOrientationState } from \"../../../../../../../state\";\nimport { Orientation } from \"../../../../../../../constants\";\nexport default function DroppableCell(_ref) {\n  let {\n    accept,\n    children\n  } = _ref;\n  const setOrientation = useSetRecoilState(ScorecardTableOrientationState);\n  const onDrop = useRef(debounce(setOrientation));\n  const [{\n    canDrop\n  }, dropRef] = useDrop({\n    accept,\n    drop: () => {\n      onDrop.current(prevState => {\n        return prevState === Orientation.ORG_UNIT_VS_DATA ? Orientation.DATA_VS_ORG_UNIT : Orientation.ORG_UNIT_VS_DATA;\n      });\n      return undefined;\n    },\n    collect: monitor => ({\n      isOver: !!monitor.isOver(),\n      canDrop: !!monitor.canDrop()\n    })\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: dropRef,\n    className: \"column center align-items-center\",\n    style: {\n      border: canDrop && `2px dashed ${colors.grey700}`,\n      background: canDrop && `${colors.grey100}`,\n      height: canDrop ? 47 : \"100%\",\n      width: \"100%\"\n    }\n  }, children);\n}\nDroppableCell.propTypes = {\n  accept: PropTypes.arrayOf(PropTypes.string).isRequired,\n  children: PropTypes.node.isRequired\n};","function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport { colors } from \"@dhis2/ui\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport { DraggableItems } from \"../../../../../../../constants\";\nexport default function DraggableCell(_ref) {\n  let {\n    label,\n    type,\n    style,\n    ...props\n  } = _ref;\n  const [{\n    isDragging\n  }, dragRef] = useDrag(() => ({\n    type,\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, props, {\n    className: \"column center\",\n    style: {\n      background: isDragging && (colors === null || colors === void 0 ? void 0 : colors.grey400),\n      cursor: \"move\",\n      opacity: isDragging ? 0.5 : 1,\n      height: \"100%\",\n      width: \"100%\",\n      padding: \"0 12px\",\n      ...style\n    },\n    ref: dragRef\n  }), label);\n}\nDraggableCell.propTypes = {\n  label: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(Object.values(DraggableItems)).isRequired,\n  style: PropTypes.object\n};","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport DraggableCell from \"./DraggableCell\";\nimport { ScorecardViewState } from \"../../../../../../../state\";\nimport { DraggableItems } from \"../../../../../../../constants\";\nexport default function OrgUnitContainer(_ref) {\n  let {\n    orgUnit\n  } = _ref;\n  const {\n    showHierarchy\n  } = useRecoilValue(ScorecardViewState(\"options\"));\n  return /*#__PURE__*/React.createElement(DraggableCell, {\n    label: showHierarchy ? orgUnit.hierarchy : orgUnit.displayName,\n    type: DraggableItems.ORG_UNIT_ROW,\n    style: {\n      textAlign: \"start\"\n    }\n  });\n}\nOrgUnitContainer.propTypes = {\n  orgUnit: PropTypes.object.isRequired\n};","import i18n from \"@dhis2/d2-i18n\";\nimport { DataTableCell, DataTableRow, Tooltip } from \"@dhis2/ui\";\nimport PropTypes from \"prop-types\";\nimport React, { Suspense, useCallback, useEffect, useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport ScorecardTable from \"../../../index\";\nimport classes from '../../../scorecardTable.module.css';\nimport DataContainer from \"../../TableDataContainer\";\nimport TableLoader from \"../../TableLoader\";\nimport AverageCell from \"./AverageCell\";\nimport DroppableCell from \"./DroppableCell\";\nimport OrgUnitContainer from \"./OrgUnitContainer\";\nimport { PeriodResolverState, ScorecardDataLoadingState, ScorecardViewState } from \"../../../../../../../state\";\nimport { AverageDisplayType, DraggableItems } from \"../../../../../../../constants\";\nimport { ScorecardDataEngine } from \"../../../../../../../models\";\nexport default function ChildOrgUnitRow(_ref) {\n  var _useRecoilValue, _useRecoilValue2;\n  let {\n    orgUnit,\n    expandedOrgUnit,\n    onExpand,\n    overallAverage,\n    dataEngine,\n    orgUnits,\n    index\n  } = _ref;\n  const {\n    emptyRows,\n    averageColumn,\n    averageDisplayType,\n    itemNumber\n  } = useRecoilValue(ScorecardViewState(\"options\"));\n  const [isEmpty, setIsEmpty] = useState(false);\n  const [average, setAverage] = useState();\n  const {\n    id\n  } = orgUnit !== null && orgUnit !== void 0 ? orgUnit : {};\n  const {\n    dataGroups\n  } = (_useRecoilValue = useRecoilValue(ScorecardViewState(\"dataSelection\"))) !== null && _useRecoilValue !== void 0 ? _useRecoilValue : {};\n  const loading = useRecoilValue(ScorecardDataLoadingState(orgUnits));\n  const periods = (_useRecoilValue2 = useRecoilValue(PeriodResolverState)) !== null && _useRecoilValue2 !== void 0 ? _useRecoilValue2 : [];\n  function subscribe() {\n    if (loading !== undefined && !loading) {\n      const rowAverage = dataEngine.getOrgUnitAverage(id).subscribe(setAverage);\n      const rowStatusSub = dataEngine.isRowEmpty(id).subscribe(setIsEmpty);\n      return () => {\n        rowAverage.unsubscribe();\n        rowStatusSub.unsubscribe();\n      };\n    }\n  }\n  const onExpandClick = useCallback(() => {\n    if (id === expandedOrgUnit) {\n      onExpand(undefined);\n    } else {\n      onExpand(id);\n    }\n  }, [expandedOrgUnit, id, onExpand]);\n  useEffect(subscribe, [orgUnit, loading, id, dataEngine]);\n  const Component = (emptyRows || !isEmpty) && /*#__PURE__*/React.createElement(DataTableRow, {\n    dataTest: \"orgUnit-children-table-column-cell\",\n    className: classes[\"child-table-row\"],\n    expanded: id === expandedOrgUnit,\n    onExpandToggle: onExpandClick,\n    expandableContent: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-16\"\n    }, /*#__PURE__*/React.createElement(Suspense, {\n      fallback: /*#__PURE__*/React.createElement(TableLoader, null)\n    }, /*#__PURE__*/React.createElement(ScorecardTable, {\n      nested: true,\n      orgUnits: [id]\n    }))),\n    key: id,\n    bordered: true\n  }, itemNumber && /*#__PURE__*/React.createElement(DataTableCell, {\n    onClick: onExpandClick,\n    width: \"50px\",\n    fixed: true,\n    left: \"50px\"\n  }, index + 1), /*#__PURE__*/React.createElement(DataTableCell, {\n    dataTest: \"orgUnit-parent-table-column-cell\",\n    fixed: true,\n    left: itemNumber ? \"100px\" : \"50px\",\n    width: \"30%\",\n    onClick: onExpandClick\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    content: i18n.t(\"Drag to column headers to change layout\")\n  }, /*#__PURE__*/React.createElement(DroppableCell, {\n    accept: [DraggableItems.DATA_COLUMN]\n  }, /*#__PURE__*/React.createElement(OrgUnitContainer, {\n    orgUnit: orgUnit\n  })))), dataGroups === null || dataGroups === void 0 ? void 0 : dataGroups.map(_ref2 => {\n    let {\n      id: groupId,\n      dataHolders\n    } = _ref2;\n    return dataHolders === null || dataHolders === void 0 ? void 0 : dataHolders.map(_ref3 => {\n      let {\n        id: holderId,\n        dataSources\n      } = _ref3;\n      return periods === null || periods === void 0 ? void 0 : periods.map(period => /*#__PURE__*/React.createElement(DataContainer, {\n        key: `${groupId}-${holderId}-${period.id}`,\n        dataEngine: dataEngine,\n        orgUnit: orgUnit,\n        dataSources: dataSources,\n        period: period\n      }));\n    });\n  }), averageColumn && /*#__PURE__*/React.createElement(AverageCell, {\n    bold: true,\n    value: average\n  }));\n  if (averageDisplayType === AverageDisplayType.ALL) {\n    return Component;\n  }\n  if (averageDisplayType === AverageDisplayType.BELOW_AVERAGE && overallAverage > average) {\n    return Component;\n  }\n  if (averageDisplayType === AverageDisplayType.ABOVE_AVERAGE && overallAverage <= average) {\n    return Component;\n  }\n  return null;\n}\nChildOrgUnitRow.propTypes = {\n  dataEngine: PropTypes.instanceOf(ScorecardDataEngine).isRequired,\n  index: PropTypes.number.isRequired,\n  orgUnit: PropTypes.object.isRequired,\n  orgUnits: PropTypes.array.isRequired,\n  overallAverage: PropTypes.number.isRequired,\n  onExpand: PropTypes.func.isRequired,\n  expandedOrgUnit: PropTypes.string\n};","import { DataTableCell, DataTableRow } from \"@dhis2/ui\";\nimport { head } from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport classes from \"../../../scorecardTable.module.css\";\nimport DataContainer from \"../../TableDataContainer\";\nimport AverageCell from \"./AverageCell\";\nimport DraggableCell from \"./DraggableCell\";\nimport DroppableCell from \"./DroppableCell\";\nimport { PeriodResolverState, ScorecardOrgUnitState, ScorecardViewState } from \"../../../../../../../state\";\nimport { AverageDisplayType, DraggableItems } from \"../../../../../../../constants\";\nimport { getDataSourcesDisplayName } from \"../../../../../../../utils\";\nimport { ScorecardDataEngine } from \"../../../../../../../models\";\nexport default function DataSourceRow(_ref) {\n  var _useRecoilValue, _ref4;\n  let {\n    orgUnits,\n    dataSources,\n    overallAverage,\n    dataEngine,\n    index\n  } = _ref;\n  const {\n    emptyRows,\n    averageColumn,\n    averageDisplayType,\n    itemNumber\n  } = useRecoilValue(ScorecardViewState(\"options\"));\n  const [isEmpty, setIsEmpty] = useState(false);\n  const [average, setAverage] = useState();\n  const {\n    filteredOrgUnits,\n    childrenOrgUnits\n  } = useRecoilValue(ScorecardOrgUnitState(orgUnits));\n  const periods = (_useRecoilValue = useRecoilValue(PeriodResolverState)) !== null && _useRecoilValue !== void 0 ? _useRecoilValue : [];\n  useEffect(() => {\n    const rowStatusSub = dataEngine.isDataSourcesRowEmpty(dataSources === null || dataSources === void 0 ? void 0 : dataSources.map(_ref2 => {\n      let {\n        id\n      } = _ref2;\n      return id;\n    })).subscribe(setIsEmpty);\n    const rowAverageSub = dataEngine.getDataSourceAverage(dataSources === null || dataSources === void 0 ? void 0 : dataSources.map(_ref3 => {\n      let {\n        id\n      } = _ref3;\n      return id;\n    })).subscribe(setAverage);\n    return () => {\n      rowStatusSub.unsubscribe();\n      rowAverageSub.unsubscribe();\n    };\n  }, [dataSources]);\n  const Component = /*#__PURE__*/React.createElement(DataTableRow, {\n    bordered: true,\n    className: classes[\"average-row\"]\n  }, /*#__PURE__*/React.createElement(DataTableCell, {\n    className: \"jsx-1369417008\",\n    fixed: true,\n    left: \"0\",\n    width: \"50px\"\n  }), itemNumber && /*#__PURE__*/React.createElement(DataTableCell, {\n    fixed: true,\n    left: \"50px\",\n    width: \"50px\"\n  }, index + 1), /*#__PURE__*/React.createElement(DataTableCell, {\n    fixed: true,\n    left: itemNumber ? \"100px\" : \"50px\",\n    className: \"scorecard-org-unit-cell\"\n  }, /*#__PURE__*/React.createElement(DroppableCell, {\n    accept: [DraggableItems.ORG_UNIT_COLUMN]\n  }, /*#__PURE__*/React.createElement(DraggableCell, {\n    label: getDataSourcesDisplayName(dataSources),\n    type: DraggableItems.DATA_ROW\n  }))), (_ref4 = [...filteredOrgUnits, ...childrenOrgUnits]) === null || _ref4 === void 0 ? void 0 : _ref4.map(orgUnit => periods === null || periods === void 0 ? void 0 : periods.map(period => {\n    var _head;\n    return /*#__PURE__*/React.createElement(\"td\", {\n      className: \"data-cell\",\n      align: \"center\",\n      key: `${orgUnit === null || orgUnit === void 0 ? void 0 : orgUnit.id}-${(_head = head(dataSources)) === null || _head === void 0 ? void 0 : _head.id}-${period === null || period === void 0 ? void 0 : period.id}`\n    }, /*#__PURE__*/React.createElement(DataContainer, {\n      dataEngine: dataEngine,\n      orgUnit: orgUnit,\n      dataSources: dataSources,\n      period: period\n    }));\n  })), averageColumn && /*#__PURE__*/React.createElement(AverageCell, {\n    dataSources: dataSources,\n    bold: true,\n    value: average\n  }));\n  if (averageDisplayType === AverageDisplayType.ALL) {\n    return (emptyRows || !isEmpty) && Component;\n  }\n  if (averageDisplayType === AverageDisplayType.BELOW_AVERAGE && overallAverage > average) {\n    return (emptyRows || !isEmpty) && Component;\n  }\n  if (averageDisplayType === AverageDisplayType.ABOVE_AVERAGE && overallAverage <= average) {\n    return (emptyRows || !isEmpty) && Component;\n  }\n  return null;\n}\nDataSourceRow.propTypes = {\n  dataEngine: PropTypes.instanceOf(ScorecardDataEngine).isRequired,\n  dataSources: PropTypes.arrayOf(PropTypes.object).isRequired,\n  index: PropTypes.number.isRequired,\n  orgUnits: PropTypes.arrayOf(PropTypes.object).isRequired,\n  overallAverage: PropTypes.number.isRequired\n};","import i18n from \"@dhis2/d2-i18n\";\nimport { DataTableCell, DataTableRow, Tooltip } from \"@dhis2/ui\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport classes from \"../../../scorecardTable.module.css\";\nimport DataContainer from \"../../TableDataContainer\";\nimport AverageCell from \"./AverageCell\";\nimport DroppableCell from \"./DroppableCell\";\nimport OrgUnitContainer from \"./OrgUnitContainer\";\nimport { PeriodResolverState, ScorecardDataLoadingState, ScorecardViewState } from \"../../../../../../../state\";\nimport { AverageDisplayType, DraggableItems } from \"../../../../../../../constants\";\nimport { ScorecardDataEngine } from \"../../../../../../../models\";\nexport default function ParentOrgUnitRow(_ref) {\n  var _useRecoilValue, _useRecoilValue2;\n  let {\n    orgUnit,\n    overallAverage,\n    dataEngine,\n    orgUnits,\n    index\n  } = _ref;\n  const {\n    emptyRows,\n    averageColumn,\n    averageDisplayType,\n    itemNumber\n  } = useRecoilValue(ScorecardViewState(\"options\"));\n  const [isEmpty, setIsEmpty] = useState(false);\n  const [average, setAverage] = useState();\n  const {\n    id\n  } = orgUnit !== null && orgUnit !== void 0 ? orgUnit : {};\n  const {\n    dataGroups\n  } = (_useRecoilValue = useRecoilValue(ScorecardViewState(\"dataSelection\"))) !== null && _useRecoilValue !== void 0 ? _useRecoilValue : {};\n  const loading = useRecoilValue(ScorecardDataLoadingState(orgUnits));\n  const periods = (_useRecoilValue2 = useRecoilValue(PeriodResolverState)) !== null && _useRecoilValue2 !== void 0 ? _useRecoilValue2 : [];\n  function subscribeToAverage() {\n    if (loading !== undefined && !loading) {\n      const rowAverage = dataEngine.getOrgUnitAverage(id).subscribe(setAverage);\n      const rowStatusSub = dataEngine.isRowEmpty(id).subscribe(setIsEmpty);\n      return () => {\n        rowAverage.unsubscribe();\n        rowStatusSub.unsubscribe();\n      };\n    }\n  }\n  useEffect(subscribeToAverage, [orgUnit, loading, id]);\n  const Component = (emptyRows || !isEmpty) && /*#__PURE__*/React.createElement(DataTableRow, {\n    className: classes[\"parent-table-row\"],\n    key: id,\n    bordered: true\n  }, /*#__PURE__*/React.createElement(DataTableCell, {\n    fixed: true,\n    left: \"0\",\n    width: \"50px\"\n  }), itemNumber && /*#__PURE__*/React.createElement(DataTableCell, {\n    width: \"50px\",\n    fixed: true,\n    left: \"50px\"\n  }, index + 1), /*#__PURE__*/React.createElement(DataTableCell, {\n    dataTest: \"orgUnit-parent-table-column-cell\",\n    fixed: true,\n    left: itemNumber ? \"100px\" : \"50px\",\n    width: \"30%\",\n    className: \"scorecard-org-unit-cell parent-org-unit-cell\"\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    content: i18n.t(\"Drag to the column headers to change layout\")\n  }, /*#__PURE__*/React.createElement(DroppableCell, {\n    accept: [DraggableItems.DATA_COLUMN]\n  }, /*#__PURE__*/React.createElement(OrgUnitContainer, {\n    orgUnit: orgUnit\n  })))), dataGroups === null || dataGroups === void 0 ? void 0 : dataGroups.map(_ref2 => {\n    let {\n      id: groupId,\n      dataHolders\n    } = _ref2;\n    return dataHolders === null || dataHolders === void 0 ? void 0 : dataHolders.map(_ref3 => {\n      let {\n        id: holderId,\n        dataSources\n      } = _ref3;\n      return periods === null || periods === void 0 ? void 0 : periods.map(period => /*#__PURE__*/React.createElement(DataContainer, {\n        key: `${groupId}-${holderId}-${period.id}`,\n        dataEngine: dataEngine,\n        orgUnit: orgUnit,\n        dataSources: dataSources,\n        period: period\n      }));\n    });\n  }), averageColumn && /*#__PURE__*/React.createElement(AverageCell, {\n    bold: true,\n    value: average\n  }));\n  if (averageDisplayType === AverageDisplayType.ALL) {\n    return Component;\n  }\n  if (averageDisplayType === AverageDisplayType.BELOW_AVERAGE && overallAverage > average) {\n    return Component;\n  }\n  if (averageDisplayType === AverageDisplayType.ABOVE_AVERAGE && overallAverage <= average) {\n    return Component;\n  }\n  return null;\n}\nParentOrgUnitRow.propTypes = {\n  dataEngine: PropTypes.instanceOf(ScorecardDataEngine).isRequired,\n  index: PropTypes.number.isRequired,\n  orgUnit: PropTypes.object.isRequired,\n  orgUnits: PropTypes.array.isRequired,\n  overallAverage: PropTypes.number.isRequired\n};","import useTableDataSources from \"./useTableDataSources\";\nimport useTableLoadingState from \"./useTableLoadingState\";\nimport useTableOrgUnits from \"./useTableOrgUnits\";\nexport default function useTableConfig(dataEngine, orgUnits, nested) {\n  const {\n    loading: orgUnitLoading\n  } = useTableOrgUnits(dataEngine, orgUnits, nested);\n  const {\n    loading: dataSourcesLoading\n  } = useTableDataSources(dataEngine, orgUnits);\n  useTableLoadingState(dataEngine, orgUnits);\n  return {\n    loading: orgUnitLoading || dataSourcesLoading\n  };\n}","import { useDataEngine } from \"@dhis2/app-runtime\";\nimport { isEmpty } from \"lodash\";\nimport { useEffect, useState } from \"react\";\nimport { useRecoilCallback, useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { PeriodResolverState, ScorecardNameSort, ScorecardOrgUnitState, ScorecardTableOrientationState, ScorecardTableSortState, ScorecardViewState } from \"../../../../../state\";\nimport { searchOrganisationUnit } from \"../../../../../hooks\";\nimport { Orientation, TableSort } from \"../../../../../constants\";\nimport { sortOrgUnitsBasedOnData, sortOrgUnitsBasedOnNames } from \"../../../../../utils\";\nexport default function useTableOrgUnits(dataEngine, orgUnits, nested) {\n  const [loading, setLoading] = useState(false);\n  const engine = useDataEngine();\n  const setOrgUnits = useSetRecoilState(ScorecardOrgUnitState(orgUnits));\n  const searchKeyword = useRecoilValue(ScorecardViewState(\"orgUnitSearchKeyword\"));\n  const {\n    orgUnit: sort\n  } = useRecoilValue(ScorecardNameSort(orgUnits));\n  const dataSort = useRecoilValue(ScorecardTableSortState(orgUnits));\n  const periods = useRecoilValue(PeriodResolverState);\n  const orientation = useRecoilValue(ScorecardTableOrientationState);\n  const [orgUnitSort, setOrgUnitSort] = useState();\n  const setDefaults = useRecoilCallback(_ref => {\n    let {\n      reset\n    } = _ref;\n    return () => {\n      reset(ScorecardOrgUnitState(orgUnits));\n    };\n  });\n  useEffect(() => {\n    async function search() {\n      const searchedOrgUnits = await searchOrganisationUnit(searchKeyword, engine);\n      setOrgUnits(prevOrgUnits => ({\n        ...prevOrgUnits,\n        filteredOrgUnits: searchedOrgUnits,\n        childrenOrgUnits: []\n      }));\n    }\n    if (!isEmpty(searchKeyword) && !nested) {\n      setLoading(true);\n      search().catch(e => console.error(e)).finally(() => setLoading(false));\n    } else {\n      setDefaults();\n    }\n  }, [searchKeyword]);\n  useEffect(() => {\n    function setDataSort() {\n      if (orientation === Orientation.ORG_UNIT_VS_DATA) {\n        if (dataSort.type === \"period\") {\n          var _dataSort$name;\n          const [dx, pe] = (_dataSort$name = dataSort.name) === null || _dataSort$name === void 0 ? void 0 : _dataSort$name.split(\"-\");\n          dataEngine.sortOrgUnitsByDataAndPeriod({\n            dataSource: dx,\n            period: pe,\n            sortType: dataSort === null || dataSort === void 0 ? void 0 : dataSort.direction\n          }).subscribe(setOrgUnitSort);\n        }\n        if (dataSort.type === \"data\") {\n          const dx = dataSort === null || dataSort === void 0 ? void 0 : dataSort.name;\n          dataEngine.sortOrgUnitsByData({\n            dataSource: dx,\n            periods: periods === null || periods === void 0 ? void 0 : periods.map(_ref2 => {\n              let {\n                id\n              } = _ref2;\n              return id;\n            }),\n            sortType: dataSort === null || dataSort === void 0 ? void 0 : dataSort.direction\n          }).subscribe(setOrgUnitSort);\n        }\n      }\n    }\n    if (dataSort) {\n      setDataSort();\n    }\n  }, [sort, dataSort, orientation, dataEngine, periods]);\n  useEffect(() => {\n    function sortOrgUnits() {\n      if (!isEmpty(orgUnitSort)) {\n        setOrgUnits(_ref3 => {\n          let {\n            childrenOrgUnits,\n            filteredOrgUnits\n          } = _ref3;\n          const {\n            parentOrgUnits,\n            childOrgUnits\n          } = sortOrgUnitsBasedOnData({\n            orgUnitSort,\n            childrenOrgUnits,\n            filteredOrgUnits\n          });\n          return {\n            filteredOrgUnits: parentOrgUnits,\n            childrenOrgUnits: childOrgUnits\n          };\n        });\n      } else {\n        setOrgUnits(_ref4 => {\n          let {\n            childrenOrgUnits,\n            filteredOrgUnits\n          } = _ref4;\n          const {\n            parentOrgUnits,\n            childOrgUnits\n          } = sortOrgUnitsBasedOnNames({\n            sort,\n            childrenOrgUnits,\n            filteredOrgUnits\n          });\n          return {\n            filteredOrgUnits: parentOrgUnits,\n            childrenOrgUnits: childOrgUnits\n          };\n        });\n      }\n    }\n    if (isEmpty(orgUnitSort) && sort === TableSort.DEFAULT) {\n      setDefaults();\n      return;\n    }\n    if (!isEmpty(orgUnitSort) || sort) {\n      sortOrgUnits();\n    }\n  }, [orgUnitSort, sort]);\n  return {\n    loading\n  };\n}","import { filter, flatten, isEmpty } from \"lodash\";\nimport { useEffect } from \"react\";\nimport { useRecoilValue, useResetRecoilState, useSetRecoilState } from \"recoil\";\nimport { PeriodResolverState, ScorecardDataSourceState, ScorecardNameSort, ScorecardTableOrientationState, ScorecardTableSortState, ScorecardViewState } from \"../../../../../state\";\nimport { Orientation } from \"../../../../../constants\";\nimport { sortDataSourcesBasedOnData, sortDataSourcesBasedOnNames } from \"../../../../../utils\";\nexport default function useTableDataSources(dataEngine, orgUnits) {\n  const setDataSources = useSetRecoilState(ScorecardDataSourceState);\n  const dataSearchKeyword = useRecoilValue(ScorecardViewState(\"dataSearchKeyword\"));\n  const {\n    data: sort\n  } = useRecoilValue(ScorecardNameSort(orgUnits));\n  const resetDataSources = useResetRecoilState(ScorecardDataSourceState);\n  const dataSort = useRecoilValue(ScorecardTableSortState(orgUnits));\n  const periods = useRecoilValue(PeriodResolverState);\n  const orientation = useRecoilValue(ScorecardTableOrientationState);\n  useEffect(() => {\n    function search() {\n      setDataSources(prevDataSources => {\n        return filter(prevDataSources, value => {\n          var _value$dataSources;\n          const searchIndex = flatten((_value$dataSources = value.dataSources) === null || _value$dataSources === void 0 ? void 0 : _value$dataSources.map(_ref => {\n            let {\n              id,\n              displayName\n            } = _ref;\n            return `${id}-${displayName}`;\n          })).join(\"_\");\n          return searchIndex.toLowerCase().match(RegExp(dataSearchKeyword.toLowerCase()));\n        });\n      });\n    }\n    if (dataSearchKeyword) {\n      search();\n    } else {\n      resetDataSources();\n    }\n  }, [dataSearchKeyword]);\n  useEffect(() => {\n    function sortDataSources() {\n      let dataSourceSort = [];\n      if (!isEmpty(dataSort)) {\n        if (orientation === Orientation.DATA_VS_ORG_UNIT) {\n          if (dataSort.type === \"orgUnit\") {\n            dataEngine.sortDataSourceByOrgUnit({\n              periods: periods === null || periods === void 0 ? void 0 : periods.map(_ref2 => {\n                let {\n                  id\n                } = _ref2;\n                return id;\n              }),\n              orgUnit: dataSort === null || dataSort === void 0 ? void 0 : dataSort.name,\n              sortType: dataSort === null || dataSort === void 0 ? void 0 : dataSort.direction\n            }).subscribe(dSort => dataSourceSort = dSort);\n          }\n          if (dataSort.type === \"period\") {\n            const [ou, pe] = dataSort.name.split(\"-\");\n            dataEngine.sortDataSourceByOrgUnitAndPeriod({\n              period: pe,\n              orgUnit: ou,\n              sortType: dataSort === null || dataSort === void 0 ? void 0 : dataSort.direction\n            }).subscribe(dSort => dataSourceSort = dSort);\n          }\n        }\n      }\n      if (!isEmpty(dataSourceSort)) {\n        setDataSources(prevDataSources => {\n          return sortDataSourcesBasedOnData({\n            dataSort: dataSourceSort,\n            dataSources: prevDataSources\n          });\n        });\n      } else {\n        setDataSources(prevDataSources => {\n          return sortDataSourcesBasedOnNames({\n            sort: sortDataSources,\n            dataSources: prevDataSources\n          });\n        });\n      }\n    }\n    if (sort) {\n      sortDataSources();\n    }\n  }, [dataEngine, dataSort, orientation, periods, sort]);\n  return {\n    loading: false\n  };\n}","import { useEffect } from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { ScorecardDataLoadingState } from \"../../../../../state\";\nexport default function useTableLoadingState(dataEngine, orgUnits) {\n  const setLoadingState = useSetRecoilState(ScorecardDataLoadingState(orgUnits));\n  useEffect(() => {\n    const subscription = dataEngine.loading$.subscribe(setLoadingState);\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [orgUnits, dataEngine]);\n}","import { DataTableBody } from \"@dhis2/ui\";\nimport PropTypes from \"prop-types\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useRecoilValue, useResetRecoilState } from \"recoil\";\nimport AverageDataSourceRow from \"./Components/AverageDataSourceRow\";\nimport AverageOrgUnitRow from \"./Components/AverageOrgUnitRow\";\nimport ChildOrgUnitRow from \"./Components/ChildOrgUnitRow\";\nimport DataSourceRow from \"./Components/DataSourceRow\";\nimport ParentOrgUnitRow from \"./Components/ParentOrgUnitRow\";\nimport { useDataEngine } from \"@dhis2/app-runtime\";\nimport useTableConfig from \"../../hooks/useTableConfig\";\nimport { LowestOrgUnitLevel, PeriodResolverState, RefreshScorecardState, ScorecardDataLoadingState, ScorecardDataSourceState, ScorecardOrgUnitState, ScorecardTableOrientationState, ScorecardViewState, SystemSettingsState } from \"../../../../../../state\";\nimport { Orientation } from \"../../../../../../constants\";\nimport { ScorecardDataEngine } from \"../../../../../../models\";\nfunction childrenAlreadyDisplayed(orgUnit, childrenOrgUnit) {\n  return childrenOrgUnit.some(childOrgUnit => childOrgUnit.level === orgUnit.level + 1);\n}\nexport default function ScorecardTableBody(_ref) {\n  var _useRecoilValue, _useRecoilValue2;\n  let {\n    orgUnits,\n    dataEngine,\n    nested\n  } = _ref;\n  const {\n    loading: configLoader\n  } = useTableConfig(dataEngine, orgUnits, nested);\n  const [expandedOrgUnit, setExpandedOrgUnit] = useState();\n  const dhis2Engine = useDataEngine();\n  const {\n    calendar\n  } = useRecoilValue(SystemSettingsState);\n  const tableOrientation = useRecoilValue(ScorecardTableOrientationState);\n  const lowestOrgUnitLevel = useRecoilValue(LowestOrgUnitLevel);\n  const {\n    dataGroups\n  } = (_useRecoilValue = useRecoilValue(ScorecardViewState(\"dataSelection\"))) !== null && _useRecoilValue !== void 0 ? _useRecoilValue : {};\n  const {\n    averageRow\n  } = (_useRecoilValue2 = useRecoilValue(ScorecardViewState(\"options\"))) !== null && _useRecoilValue2 !== void 0 ? _useRecoilValue2 : {};\n  const filteredDataHolders = useRecoilValue(ScorecardDataSourceState);\n  const loading = useRecoilValue(ScorecardDataLoadingState(orgUnits));\n  const periods = useRecoilValue(PeriodResolverState);\n  const {\n    periodType\n  } = useRecoilValue(ScorecardViewState(\"periodSelection\"));\n  const {\n    childrenOrgUnits,\n    filteredOrgUnits\n  } = useRecoilValue(ScorecardOrgUnitState(orgUnits));\n  const refreshScorecard = useRecoilValue(RefreshScorecardState);\n  const resetRefreshScorecard = useResetRecoilState(RefreshScorecardState);\n  const [overallAverage, setOverallAverage] = useState();\n  useEffect(() => {\n    if (loading !== undefined && !loading) {\n      var _ref2;\n      dataEngine.getOverallAverage((_ref2 = [...childrenOrgUnits, ...filteredOrgUnits]) === null || _ref2 === void 0 ? void 0 : _ref2.map(_ref3 => {\n        let {\n          id\n        } = _ref3;\n        return id;\n      })).subscribe(setOverallAverage);\n    }\n  }, [childrenOrgUnits, filteredOrgUnits, loading]);\n  useEffect(() => {\n    dataEngine.setDataQueryEngine(dhis2Engine).setDataGroups(dataGroups).setPeriods(periods).setOrgUnits([...(filteredOrgUnits !== null && filteredOrgUnits !== void 0 ? filteredOrgUnits : []), ...(childrenOrgUnits !== null && childrenOrgUnits !== void 0 ? childrenOrgUnits : [])]).setPeriodType(periodType).setCalendar(calendar).load();\n    return () => {\n      resetRefreshScorecard();\n    };\n  }, [dataGroups, filteredOrgUnits, childrenOrgUnits, periodType, periods, dataEngine, calendar]);\n  useEffect(() => {\n    if (refreshScorecard !== 0) {\n      dataEngine.refresh();\n    }\n  }, [dataEngine, refreshScorecard]);\n  return configLoader ? /*#__PURE__*/React.createElement(\"div\", null) : /*#__PURE__*/React.createElement(DataTableBody, null, /*#__PURE__*/React.createElement(Fragment, null, tableOrientation === Orientation.ORG_UNIT_VS_DATA ? /*#__PURE__*/React.createElement(Fragment, null, filteredOrgUnits === null || filteredOrgUnits === void 0 ? void 0 : filteredOrgUnits.map((orgUnit, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-break\"\n  }), orgUnit.level === lowestOrgUnitLevel.level || childrenAlreadyDisplayed(orgUnit, childrenOrgUnits) ? /*#__PURE__*/React.createElement(ParentOrgUnitRow, {\n    index: index,\n    dataEngine: dataEngine,\n    key: `${orgUnit === null || orgUnit === void 0 ? void 0 : orgUnit.id}-row`,\n    orgUnit: orgUnit,\n    overallAverage: overallAverage,\n    orgUnits: orgUnits\n  }) : /*#__PURE__*/React.createElement(ChildOrgUnitRow, {\n    index: index,\n    dataEngine: dataEngine,\n    key: `${orgUnit === null || orgUnit === void 0 ? void 0 : orgUnit.id}-row`,\n    onExpand: setExpandedOrgUnit,\n    orgUnit: orgUnit,\n    expandedOrgUnit: expandedOrgUnit,\n    overallAverage: overallAverage,\n    orgUnits: orgUnits\n  }))), childrenOrgUnits === null || childrenOrgUnits === void 0 ? void 0 : childrenOrgUnits.map((orgUnit, index) => {\n    if (orgUnit.level === lowestOrgUnitLevel.level) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"page-break\"\n      }), /*#__PURE__*/React.createElement(ParentOrgUnitRow, {\n        index: index + 1,\n        dataEngine: dataEngine,\n        key: `${orgUnit === null || orgUnit === void 0 ? void 0 : orgUnit.id}-row`,\n        orgUnit: orgUnit,\n        overallAverage: overallAverage,\n        orgUnits: orgUnits\n      }));\n    }\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-break\"\n    }), /*#__PURE__*/React.createElement(ChildOrgUnitRow, {\n      index: index + 1,\n      dataEngine: dataEngine,\n      key: `${orgUnit === null || orgUnit === void 0 ? void 0 : orgUnit.id}-row`,\n      onExpand: setExpandedOrgUnit,\n      orgUnit: orgUnit,\n      expandedOrgUnit: expandedOrgUnit,\n      overallAverage: overallAverage,\n      orgUnits: orgUnits\n    }));\n  })) : filteredDataHolders === null || filteredDataHolders === void 0 ? void 0 : filteredDataHolders.map((_ref4, index) => {\n    let {\n      id,\n      dataSources\n    } = _ref4;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-break\"\n    }), /*#__PURE__*/React.createElement(DataSourceRow, {\n      index: index,\n      dataEngine: dataEngine,\n      orgUnits: orgUnits,\n      dataSources: dataSources,\n      key: `${id}-row`,\n      overallAverage: overallAverage\n    }));\n  }), averageRow && (tableOrientation === Orientation.ORG_UNIT_VS_DATA ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-break\"\n  }), /*#__PURE__*/React.createElement(AverageDataSourceRow, {\n    dataEngine: dataEngine,\n    orgUnits: orgUnits,\n    overallAverage: overallAverage\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-break\"\n  }), /*#__PURE__*/React.createElement(AverageOrgUnitRow, {\n    dataEngine: dataEngine,\n    orgUnits: orgUnits,\n    overallAverage: overallAverage\n  })))));\n}\nScorecardTableBody.propTypes = {\n  dataEngine: PropTypes.instanceOf(ScorecardDataEngine).isRequired,\n  orgUnits: PropTypes.arrayOf(PropTypes.object).isRequired\n};","import i18n from \"@dhis2/d2-i18n\";\nimport { DataTableCell, DataTableColumnHeader, InputField } from \"@dhis2/ui\";\nimport { debounce } from \"lodash\";\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport classes from \"../../../scorecardTable.module.css\";\nimport { ScorecardNameSort, ScorecardViewState } from \"../../../../../../../state\";\nexport default function OrgUnitHeaderCells(_ref) {\n  var _useRecoilValue;\n  let {\n    orgUnits,\n    nested\n  } = _ref;\n  const [orgUnitKeyword, setOrgUnitKeyword] = useRecoilState(ScorecardViewState(\"orgUnitSearchKeyword\"));\n  const [searchValue, setSearchValue] = useState(orgUnitKeyword);\n  const {\n    itemNumber\n  } = (_useRecoilValue = useRecoilValue(ScorecardViewState(\"options\"))) !== null && _useRecoilValue !== void 0 ? _useRecoilValue : {};\n  const [sort, setSort] = useRecoilState(ScorecardNameSort(orgUnits));\n  const onSortIconClick = _ref2 => {\n    let {\n      direction\n    } = _ref2;\n    setSort(prevValue => ({\n      ...prevValue,\n      orgUnit: direction\n    }));\n  };\n  const onOrgUnitSearch = useRef(debounce(setOrgUnitKeyword, 1000, {\n    trailing: true,\n    leading: false\n  }));\n  useEffect(() => {\n    onOrgUnitSearch.current(searchValue);\n  }, [searchValue]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataTableCell, {\n    rowSpan: \"3\",\n    fixed: true,\n    left: \"0\",\n    width: \"50px\"\n  }), itemNumber && /*#__PURE__*/React.createElement(DataTableCell, {\n    rowSpan: \"3\",\n    fixed: true,\n    left: \"50px\",\n    width: \"50px\"\n  }), /*#__PURE__*/React.createElement(DataTableColumnHeader, {\n    align: \"center\",\n    name: \"orgUnit\",\n    onSortIconClick: onSortIconClick,\n    sortDirection: sort === null || sort === void 0 ? void 0 : sort.orgUnit,\n    fixed: true,\n    top: \"0\",\n    left: itemNumber ? \"100px\" : \"50px\",\n    bordered: true,\n    width: \"200px\",\n    className: classes['org-unit-header-cell'],\n    rowSpan: \"3\"\n  }, !nested && /*#__PURE__*/React.createElement(InputField, {\n    dataTest: \"org-unit-search\",\n    className: \"print-hide w-100 org-unit-search\",\n    value: searchValue,\n    onChange: _ref3 => {\n      let {\n        value\n      } = _ref3;\n      return setSearchValue(value);\n    },\n    placeholder: i18n.t(\"Search Organisation Unit\")\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"print-show hide\"\n  }, i18n.t(\"Organisation Unit(s)\"))));\n}\nOrgUnitHeaderCells.propTypes = {\n  nested: PropTypes.bool,\n  orgUnits: PropTypes.array\n};","import i18n from \"@dhis2/d2-i18n\";\nimport { DataTableCell, DataTableRow } from \"@dhis2/ui\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport classes from \"../../../scorecardTable.module.css\";\nimport OrgUnitHeaderCells from \"./OrgUnitHeaderCells\";\nimport { PeriodResolverState, ScorecardViewState } from \"../../../../../../../state\";\nimport { ScorecardTableConstants } from \"../../../../../../../constants\";\nexport default function GroupsHeaderRow(_ref) {\n  var _useRecoilValue, _useRecoilValue2, _useRecoilValue3;\n  let {\n    nested,\n    orgUnits\n  } = _ref;\n  const {\n    dataGroups\n  } = (_useRecoilValue = useRecoilValue(ScorecardViewState(\"dataSelection\"))) !== null && _useRecoilValue !== void 0 ? _useRecoilValue : {};\n  const {\n    averageColumn\n  } = (_useRecoilValue2 = useRecoilValue(ScorecardViewState(\"options\"))) !== null && _useRecoilValue2 !== void 0 ? _useRecoilValue2 : {};\n  const periods = (_useRecoilValue3 = useRecoilValue(PeriodResolverState)) !== null && _useRecoilValue3 !== void 0 ? _useRecoilValue3 : [];\n  const isSingleGroup = dataGroups.length === 1;\n  return !isSingleGroup && /*#__PURE__*/React.createElement(DataTableRow, {\n    className: classes[\"table-header-row\"]\n  }, /*#__PURE__*/React.createElement(OrgUnitHeaderCells, {\n    orgUnits: orgUnits,\n    nested: nested\n  }), dataGroups === null || dataGroups === void 0 ? void 0 : dataGroups.map((_ref2, index) => {\n    var _dataHolders$length, _periods$length, _dataHolders$length2, _periods$length2;\n    let {\n      title,\n      id,\n      dataHolders\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(DataTableCell, {\n      fixed: true,\n      className: \"scorecard-table-header header\",\n      align: \"center\",\n      bordered: true,\n      width: `${((_dataHolders$length = dataHolders === null || dataHolders === void 0 ? void 0 : dataHolders.length) !== null && _dataHolders$length !== void 0 ? _dataHolders$length : 1) * ((_periods$length = periods === null || periods === void 0 ? void 0 : periods.length) !== null && _periods$length !== void 0 ? _periods$length : 1) * ScorecardTableConstants.CELL_WIDTH}px`,\n      top: \"0\",\n      colSpan: `${((_dataHolders$length2 = dataHolders === null || dataHolders === void 0 ? void 0 : dataHolders.length) !== null && _dataHolders$length2 !== void 0 ? _dataHolders$length2 : 1) * ((_periods$length2 = periods === null || periods === void 0 ? void 0 : periods.length) !== null && _periods$length2 !== void 0 ? _periods$length2 : 1)}`,\n      key: id\n    }, title);\n  }), averageColumn && /*#__PURE__*/React.createElement(DataTableCell, {\n    width: `${ScorecardTableConstants.CELL_WIDTH}px`,\n    fixed: true,\n    align: \"center\",\n    bordered: true,\n    className: \"scorecard-table-header header\",\n    rowSpan: \"3\"\n  }, i18n.t(\"Average\")));\n}\nGroupsHeaderRow.propTypes = {\n  nested: PropTypes.bool.isRequired,\n  orgUnits: PropTypes.array.isRequired\n};","import i18n from \"@dhis2/d2-i18n\";\nimport { DataTableCell, DataTableColumnHeader, DataTableRow, Tooltip } from \"@dhis2/ui\";\nimport { head } from \"lodash\";\nimport PropTypes from 'prop-types';\nimport React from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport classes from '../../../scorecardTable.module.css';\nimport DraggableCell from \"../../TableBody/Components/DraggableCell\";\nimport DroppableCell from \"../../TableBody/Components/DroppableCell\";\nimport OrgUnitHeaderCells from \"./OrgUnitHeaderCells\";\nimport { PeriodResolverState, ScorecardTableSortState, ScorecardViewState } from \"../../../../../../../state\";\nimport { DraggableItems, ScorecardTableConstants } from \"../../../../../../../constants\";\nimport { getDataSourcesDisplayName } from \"../../../../../../../utils\";\nexport default function HoldersHeaderRow(_ref) {\n  var _useRecoilValue, _useRecoilValue2, _useRecoilValue3;\n  let {\n    orgUnits,\n    nested\n  } = _ref;\n  const {\n    dataGroups\n  } = (_useRecoilValue = useRecoilValue(ScorecardViewState(\"dataSelection\"))) !== null && _useRecoilValue !== void 0 ? _useRecoilValue : {};\n  const [{\n    name,\n    direction\n  }, setDataSort] = useRecoilState(ScorecardTableSortState(orgUnits));\n  const {\n    averageColumn\n  } = (_useRecoilValue2 = useRecoilValue(ScorecardViewState(\"options\"))) !== null && _useRecoilValue2 !== void 0 ? _useRecoilValue2 : {};\n  const periods = (_useRecoilValue3 = useRecoilValue(PeriodResolverState)) !== null && _useRecoilValue3 !== void 0 ? _useRecoilValue3 : [];\n  const onSortClick = direction => {\n    setDataSort({\n      ...direction,\n      type: \"data\"\n    });\n  };\n  const isSingleGroup = dataGroups.length === 1;\n  return /*#__PURE__*/React.createElement(DataTableRow, {\n    className: classes[\"table-header-row\"]\n  }, isSingleGroup && /*#__PURE__*/React.createElement(OrgUnitHeaderCells, {\n    nested: nested,\n    orgUnits: orgUnits\n  }), dataGroups === null || dataGroups === void 0 ? void 0 : dataGroups.map(_ref2 => {\n    let {\n      dataHolders\n    } = _ref2;\n    return dataHolders === null || dataHolders === void 0 ? void 0 : dataHolders.map((_ref3, index) => {\n      var _head, _head2;\n      let {\n        id,\n        dataSources\n      } = _ref3;\n      return /*#__PURE__*/React.createElement(DataTableColumnHeader, {\n        onSortIconClick: onSortClick,\n        sortDirection: name === `${(_head = head(dataSources)) === null || _head === void 0 ? void 0 : _head.id}` ? direction : \"default\",\n        className: classes['holder-header-cell'],\n        dataTest: \"indicator-table-header-cell\",\n        width: `${(periods === null || periods === void 0 ? void 0 : periods.length) * ScorecardTableConstants.CELL_WIDTH}px`,\n        top: \"0\",\n        fixed: true,\n        colSpan: `${periods === null || periods === void 0 ? void 0 : periods.length}`,\n        bordered: true,\n        align: \"center\",\n        key: `${id}-column-header`,\n        name: `${(_head2 = head(dataSources)) === null || _head2 === void 0 ? void 0 : _head2.id}`\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        className: \"m-auto\",\n        content: i18n.t(\"Drag to row headers to change layout\")\n      }, /*#__PURE__*/React.createElement(DroppableCell, {\n        accept: [DraggableItems.ORG_UNIT_ROW]\n      }, /*#__PURE__*/React.createElement(DraggableCell, {\n        label: getDataSourcesDisplayName(dataSources),\n        type: DraggableItems.DATA_COLUMN\n      })))));\n    });\n  }), averageColumn && isSingleGroup ? /*#__PURE__*/React.createElement(DataTableCell, {\n    width: `${ScorecardTableConstants.CELL_WIDTH}px`,\n    fixed: true,\n    align: \"center\",\n    bordered: true,\n    className: \"scorecard-table-header header\",\n    rowSpan: \"3\"\n  }, i18n.t(\"Average\")) : null);\n}\nHoldersHeaderRow.propTypes = {\n  nested: PropTypes.bool,\n  orgUnits: PropTypes.array\n};","import i18n from \"@dhis2/d2-i18n\";\nimport { DataTableCell, DataTableColumnHeader, DataTableRow, InputField, Tooltip } from \"@dhis2/ui\";\nimport { debounce } from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport classes from '../../../scorecardTable.module.css';\nimport DraggableCell from \"../../TableBody/Components/DraggableCell\";\nimport DroppableCell from \"../../TableBody/Components/DroppableCell\";\nimport { PeriodResolverState, ScorecardNameSort, ScorecardOrgUnitState, ScorecardTableConfigState, ScorecardTableSortState, ScorecardViewState } from \"../../../../../../../state\";\nimport { DraggableItems, ScorecardTableConstants } from \"../../../../../../../constants\";\nexport default function OrgUnitHeaderRow(_ref) {\n  var _useRecoilValue, _ref4;\n  let {\n    orgUnits,\n    nested\n  } = _ref;\n  const {\n    averageColumn,\n    itemNumber\n  } = useRecoilValue(ScorecardViewState(\"options\"));\n  const {\n    filteredOrgUnits,\n    childrenOrgUnits\n  } = useRecoilValue(ScorecardOrgUnitState(orgUnits));\n  const periods = (_useRecoilValue = useRecoilValue(PeriodResolverState)) !== null && _useRecoilValue !== void 0 ? _useRecoilValue : [];\n  const [dataKeyword, setDataKeyword] = useRecoilState(ScorecardViewState(\"dataSearchKeyword\"));\n  const [searchValue, setSearchValue] = useState(dataKeyword);\n  const [sort, setSort] = useRecoilState(ScorecardNameSort(orgUnits));\n  const [{\n    name,\n    direction\n  }, setDataSort] = useRecoilState(ScorecardTableSortState(orgUnits));\n  const onDataSearch = useRef(debounce(setDataKeyword, 1000, {\n    trailing: true,\n    leading: false\n  }));\n  const {\n    nameColumnWidth\n  } = useRecoilValue(ScorecardTableConfigState(orgUnits));\n  useEffect(() => {\n    onDataSearch.current(searchValue);\n  }, [searchValue]);\n  const onSortIconClick = _ref2 => {\n    let {\n      direction\n    } = _ref2;\n    setSort(prevValue => ({\n      ...prevValue,\n      data: direction\n    }));\n  };\n  const onDataSortClick = direction => {\n    setDataSort({\n      ...direction,\n      type: \"orgUnit\"\n    });\n  };\n  return /*#__PURE__*/React.createElement(DataTableRow, {\n    className: classes[\"table-header-row\"]\n  }, /*#__PURE__*/React.createElement(DataTableCell, {\n    rowSpan: \"2\",\n    fixed: true,\n    left: \"0\",\n    width: \"50px\"\n  }), itemNumber && /*#__PURE__*/React.createElement(DataTableCell, {\n    rowSpan: \"2\",\n    fixed: true,\n    left: \"50px\",\n    width: \"50px\"\n  }), /*#__PURE__*/React.createElement(DataTableColumnHeader, {\n    onSortIconClick: onSortIconClick,\n    sortDirection: sort === null || sort === void 0 ? void 0 : sort.data,\n    align: \"center\",\n    fixed: true,\n    top: \"0\",\n    left: itemNumber ? \"100px\" : \"50px\",\n    width: nameColumnWidth,\n    bordered: true,\n    className: classes['org-unit-header-cell'],\n    rowSpan: \"2\"\n  }, !nested && /*#__PURE__*/React.createElement(InputField, {\n    className: \"print-hide w-100 data-search\",\n    value: searchValue,\n    onChange: _ref3 => {\n      let {\n        value\n      } = _ref3;\n      return setSearchValue(value);\n    },\n    placeholder: i18n.t(\"Search Data\")\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"print-show hide\"\n  }, i18n.t(\"Data\"))), (_ref4 = [...filteredOrgUnits, ...childrenOrgUnits]) === null || _ref4 === void 0 ? void 0 : _ref4.map(_ref5 => {\n    var _periods$length;\n    let {\n      displayName,\n      id\n    } = _ref5;\n    return /*#__PURE__*/React.createElement(DataTableColumnHeader, {\n      name: `${id}`,\n      sortDirection: name === id ? direction : \"default\",\n      onSortIconClick: onDataSortClick,\n      fixed: true,\n      className: classes['data-header-cell'],\n      align: \"center\",\n      bordered: true,\n      width: `${(periods === null || periods === void 0 ? void 0 : periods.length) * ScorecardTableConstants.CELL_WIDTH}px`,\n      colSpan: `${(_periods$length = periods === null || periods === void 0 ? void 0 : periods.length) !== null && _periods$length !== void 0 ? _periods$length : 1}`,\n      key: id\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"100%\",\n        width: \"100%\"\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      className: \"m-auto\",\n      content: i18n.t(\"Drag to row headers to change layout \")\n    }, /*#__PURE__*/React.createElement(DroppableCell, {\n      accept: [DraggableItems.DATA_ROW]\n    }, /*#__PURE__*/React.createElement(DraggableCell, {\n      label: displayName,\n      type: DraggableItems.ORG_UNIT_COLUMN\n    })))));\n  }), averageColumn && /*#__PURE__*/React.createElement(DataTableCell, {\n    width: `${ScorecardTableConstants.CELL_WIDTH}px`,\n    fixed: true,\n    align: \"center\",\n    bordered: true,\n    className: classes['data-header-cell'],\n    rowSpan: \"2\"\n  }, i18n.t(\"Average\")));\n}\nOrgUnitHeaderRow.propTypes = {\n  nested: PropTypes.bool.isRequired,\n  orgUnits: PropTypes.arrayOf(PropTypes.object).isRequired\n};","import { DataTableColumnHeader, DataTableRow } from \"@dhis2/ui\";\nimport { head } from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport classes from '../../../scorecardTable.module.css';\nimport { PeriodResolverState, ScorecardOrgUnitState, ScorecardTableOrientationState, ScorecardTableSortState, ScorecardViewState } from \"../../../../../../../state\";\nimport { Orientation } from \"../../../../../../../constants\";\nexport default function PeriodHeaderRow(_ref) {\n  var _useRecoilValue, _useRecoilValue2, _useRecoilValue3, _ref5;\n  let {\n    orgUnits\n  } = _ref;\n  const {\n    dataGroups\n  } = (_useRecoilValue = useRecoilValue(ScorecardViewState(\"dataSelection\"))) !== null && _useRecoilValue !== void 0 ? _useRecoilValue : {};\n  const {\n    filteredOrgUnits,\n    childrenOrgUnits\n  } = (_useRecoilValue2 = useRecoilValue(ScorecardOrgUnitState(orgUnits))) !== null && _useRecoilValue2 !== void 0 ? _useRecoilValue2 : {};\n  const orientation = useRecoilValue(ScorecardTableOrientationState);\n  const periods = (_useRecoilValue3 = useRecoilValue(PeriodResolverState)) !== null && _useRecoilValue3 !== void 0 ? _useRecoilValue3 : [];\n  const [{\n    name: sortName,\n    direction\n  }, setDataSort] = useRecoilState(ScorecardTableSortState(orgUnits));\n  const onSortClick = direction => {\n    setDataSort({\n      ...direction,\n      type: \"period\"\n    });\n  };\n  return periods.length > 1 ? /*#__PURE__*/React.createElement(DataTableRow, null, orientation === Orientation.ORG_UNIT_VS_DATA ? dataGroups === null || dataGroups === void 0 ? void 0 : dataGroups.map(_ref2 => {\n    let {\n      dataHolders\n    } = _ref2;\n    return dataHolders === null || dataHolders === void 0 ? void 0 : dataHolders.map(_ref3 => {\n      let {\n        id,\n        dataSources\n      } = _ref3;\n      return periods === null || periods === void 0 ? void 0 : periods.map(_ref4 => {\n        var _head, _head2;\n        let {\n          name,\n          id: periodId\n        } = _ref4;\n        return /*#__PURE__*/React.createElement(DataTableColumnHeader, {\n          dataTest: \"test-period-table-scorecard\",\n          fixed: true,\n          top: \"0\",\n          onSortIconClick: onSortClick,\n          sortDirection: sortName === `${(_head = head(dataSources)) === null || _head === void 0 ? void 0 : _head.id}-${periodId}` ? direction : \"default\",\n          width: \"100px\",\n          bordered: true,\n          align: \"center\",\n          key: `${id}-${periodId}`,\n          className: classes[\"period-header-cell\"],\n          name: `${(_head2 = head(dataSources)) === null || _head2 === void 0 ? void 0 : _head2.id}-${periodId}`\n        }, name);\n      });\n    });\n  }) : (_ref5 = [...filteredOrgUnits, ...childrenOrgUnits]) === null || _ref5 === void 0 ? void 0 : _ref5.map(_ref6 => {\n    let {\n      id\n    } = _ref6;\n    return periods === null || periods === void 0 ? void 0 : periods.map(_ref7 => {\n      let {\n        name,\n        id: periodId\n      } = _ref7;\n      return /*#__PURE__*/React.createElement(DataTableColumnHeader, {\n        dataTest: \"test-period-table-scorecard\",\n        fixed: true,\n        top: \"0\",\n        onSortIconClick: onSortClick,\n        sortDirection: sortName === `${id}-${periodId}` ? direction : \"default\",\n        width: \"100px\",\n        bordered: true,\n        align: \"center\",\n        key: `${id}-${periodId}`,\n        className: \"scorecard-table-cell header\",\n        name: `${id}-${periodId}`\n      }, name);\n    });\n  })) : null;\n}\nPeriodHeaderRow.propTypes = {\n  orgUnits: PropTypes.arrayOf(PropTypes.object).isRequired\n};","import { DataTableHead } from \"@dhis2/ui\";\nimport PropTypes from \"prop-types\";\nimport React, { useMemo } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport GroupsHeaderRow from \"./Components/GroupsHeaderRow\";\nimport HoldersHeaderRow from \"./Components/HoldersHeaderRow\";\nimport OrgUnitHeaderRow from \"./Components/OrgUnitHeaderRow\";\nimport PeriodHeaderRow from \"./Components/PeriodHeaderRow\";\nimport { ScorecardTableConfigState } from \"../../../../../../state\";\nfunction getHeaderRow(type) {\n  switch (type) {\n    case \"groups\":\n      return GroupsHeaderRow;\n    case \"data\":\n      return HoldersHeaderRow;\n    case \"periods\":\n      return PeriodHeaderRow;\n    case \"orgUnits\":\n      return OrgUnitHeaderRow;\n    default:\n      return null;\n  }\n}\nexport default function TableHeader(_ref) {\n  let {\n    orgUnits,\n    nested\n  } = _ref;\n  const {\n    columns\n  } = useRecoilValue(ScorecardTableConfigState(orgUnits));\n  const headerRows = useMemo(() => columns === null || columns === void 0 ? void 0 : columns.map(getHeaderRow), [columns]);\n  return /*#__PURE__*/React.createElement(DataTableHead, null, headerRows === null || headerRows === void 0 ? void 0 : headerRows.map((Row, i) => /*#__PURE__*/React.createElement(Row, {\n    orgUnits: orgUnits,\n    nested: nested,\n    key: `${columns[i]}-header-row`\n  })));\n}\nTableHeader.propTypes = {\n  nested: PropTypes.bool.isRequired,\n  orgUnits: PropTypes.arrayOf(PropTypes.object).isRequired\n};","import React from 'react';\nimport { useRecoilValue } from \"recoil\";\nimport { ScorecardTableConfigState } from \"../../../../../../state\";\nexport default function TableWidth(_ref) {\n  let {\n    orgUnits\n  } = _ref;\n  const {\n    nameColumnWidth\n  } = useRecoilValue(ScorecardTableConfigState(orgUnits));\n  return /*#__PURE__*/React.createElement(\"colgroup\", null, /*#__PURE__*/React.createElement(\"col\", {\n    width: \"50px\"\n  }), /*#__PURE__*/React.createElement(\"col\", {\n    width: \"50px\"\n  }), /*#__PURE__*/React.createElement(\"col\", {\n    width: `${nameColumnWidth}`\n  }));\n}\n;","import { DataTable } from \"@dhis2/ui\";\nimport PropTypes from \"prop-types\";\nimport React, { Suspense, useEffect, useMemo } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { useRecoilCallback, useRecoilValue } from \"recoil\";\nimport ScorecardTableBody from \"./Components/TableBody\";\nimport TableHeader from \"./Components/TableHeader\";\nimport TableLoader, { TableLinearLoader } from \"./Components/TableLoader\";\nimport classes from \"./scorecardTable.module.css\";\nimport TableWidth from \"./Components/TableWidth\";\nimport { ScorecardDataEngine } from \"../../../../models\";\nimport { ScorecardDataLoadingState, ScorecardTableConfigState, ScreenDimensionState } from \"../../../../state\";\nexport default function ScorecardTable(_ref) {\n  let {\n    orgUnits,\n    nested,\n    initialDataEngine\n  } = _ref;\n  const dataEngine = useMemo(() => initialDataEngine !== null && initialDataEngine !== void 0 ? initialDataEngine : new ScorecardDataEngine(), [initialDataEngine]);\n  const {\n    width: screenWidth\n  } = useRecoilValue(ScreenDimensionState);\n  const {\n    tableWidth\n  } = useRecoilValue(ScorecardTableConfigState(orgUnits));\n  const reset = useRecoilCallback(_ref2 => {\n    let {\n      reset\n    } = _ref2;\n    return () => {\n      reset(ScorecardDataLoadingState(orgUnits));\n      dataEngine.reset(true);\n    };\n  });\n  useEffect(() => {\n    return () => {\n      reset();\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-100 pb-32 flex-1 print-area scorecard-table overflow-hidden\"\n  }, /*#__PURE__*/React.createElement(DndProvider, {\n    backend: HTML5Backend\n  }, /*#__PURE__*/React.createElement(DataTable, {\n    className: classes[\"table-print\"],\n    layout: \"fixed\",\n    scrollWidth: tableWidth !== null && tableWidth !== void 0 ? tableWidth : screenWidth\n  }, /*#__PURE__*/React.createElement(TableWidth, {\n    orgUnits: orgUnits\n  }), /*#__PURE__*/React.createElement(TableHeader, {\n    width: screenWidth,\n    orgUnits: orgUnits,\n    nested: nested\n  }), /*#__PURE__*/React.createElement(TableLinearLoader, {\n    orgUnits: orgUnits,\n    dataEngine: dataEngine\n  }), /*#__PURE__*/React.createElement(Suspense, {\n    fallback: /*#__PURE__*/React.createElement(TableLoader, {\n      orgUnits: orgUnits\n    })\n  }, /*#__PURE__*/React.createElement(ScorecardTableBody, {\n    dataEngine: dataEngine,\n    orgUnits: orgUnits\n  })))));\n}\nScorecardTable.propTypes = {\n  nested: PropTypes.bool.isRequired,\n  orgUnits: PropTypes.arrayOf(PropTypes.object).isRequired,\n  initialDataEngine: PropTypes.instanceOf(ScorecardDataEngine)\n};"],"names":["DataState","selector","key","get","async","_ref","orgUnits","InitialOrgUnits","periods","ResolvedPeriodState","dataSources","DataSourceState","engine","EngineState","isEmpty","dataSource","type","AnalyticsResult","getCustomFunctionAnalytics","functions","id","map","_ref2","_ref3","Fn","Analytics","setDimension","_ref4","join","setPeriod","_periods$map","_ref5","setData","_dataSources$map","_ref6","atom","default","LayoutState","DEFAULT_LAYOUT","OrgUnitState","ScorecardViewState","orgUnitOptionOnCell","orgUnitSelectorOptionOnCell","set","value","_get","_get2","levels","groups","userOrgUnit","userSubUnit","userSubX2Unit","PeriodResolverState","dataHolders","ScorecardDataSourceState","organisationUnits","UserState","orgUnitLevels","OrgUnitLevels","resolvedOrgUnits","_levels$map","_groups$map","level","_find","find","group","uniqBy","PeriodState","cellPeriodOptionAtom","cellPeriodOptionSelector","reset","relativePeriods","filter","length","_period$type","period","Period","setPreferences","allowFuturePeriods","getById","match","RegExp","allPeriods","differenceBy","periodInstance","actualPeriods","isArray","iso","concat","compact","SingleAverageCell","_getLegend","cellRef","values","bold","orgUnit","defaultLegendDefinitions","useRecoilValue","ScorecardLegendDefinitionSelector","legendDefinitions","color","cellColor","getLegend","head","legends","max","weight","defaultLegends","dataOrgUnitLevel","specificTargets","undefined","React","SingleCellSvg","round","LinkedAverageCell","_getLegend2","_getLegend3","topDataSource","bottomDataSource","topCellColor","bottomCellColor","last","LinkedCellSvg","topColor","bottomColor","topValue","bottomValue","ComplexAverageCell","Object","tableCellRef","setTableCellRef","useState","ref","className","align","AverageCell","singleCellRef","setSingleCellRef","propTypes","PropTypes","isRequired","AverageDataContainer","dataEngine","average","setAverage","loading","ScorecardDataLoadingState","childrenOrgUnits","filteredOrgUnits","ScorecardOrgUnitState","useEffect","subscription","getOrgUnitColumnAverage","subscribe","getDataSourceColumnAverage","unsubscribe","AverageDataSourceRow","overallAverage","averageColumn","itemNumber","DataTableRow","classes","bordered","DataTableCell","fixed","left","width","i18n","t","holderId","AverageOrgUnitRow","periodId","ScorecardDataEngine","getAllowedChartType","chartType","newChartType","getPlotOptions","chartConfiguration","plotOptionChartType","plotOptions","series","cursor","point","events","click","clickedChart","window","this","currentColor","update","dataLabels","y","borderWidth","useHTML","allowPointSelect","showInLegend","hideLegend","colorByPoint","stacking","percentStackedValues","lineWidth","states","hover","enabled","getChartSubtitleObject","analyticsObject","hideSubtitle","text","zAxisType","zAxis","metaData","itemId","names","style","fontWeight","fontSize","getChartTitleObject","hideTitle","title","getTooltipOptions","tooltipChartType","tooltipObject","pointFormat","headerFormat","getChartAttributeOptions","chartOptions","renderTo","renderId","zoomType","plotBackgroundColor","plotBorderWidth","plotShadow","polar","getSanitizedanalyticsBasedOnConfiguration","cumulativeValues","xAxisType","yAxisType","newAnalyticsObject","clone","yAxisDimensionArray","metadata","xAxisDimensionArray","reverse","yAxisDimensionIndex","findIndex","headers","xAxisDimensionIndex","dataValueIndex","newRows","forEach","yAxisDimensionValue","initialValue","xAxisDimensionValue","rows","row","parseInt","newRow","push","assign","getCumulativeFormatForAnalytics","getSanitizedChartObject","chartObject","dataSelectionGroups","flatten","dataSelections","dataSelection","dataSelectionGroupMembers","members","member","dataIndexesArrayToRemove","seriesObject","data","dataItem","dataIndex","indexOf","newDataIndexes","each","dataIndexes","intersection","newSeries","splitedDataItemId","split","associatedGroup","some","categoryCount","newCategories","xAxis","categories","category","newCategory","innerCategory","innerCategoryIndex","exporting","xAxisCategories","scale","subtitle","labels","rotation","textAlign","textOverflow","paddingBottom","buttons","contextButton","getChartAxisItems","axisTypeArray","isCategory","items","metadataNames","axisType","axisIndex","_analyticsObject$meta","itemKeys","availableItems","itemKey","item","name","trim","getChartPaneOptions","paneOptions","size","center","startAngle","endAngle","background","backgroundColor","innerRadius","outerRadius","shape","getChartSeriesDataLabelsOptions","showData","format","getChartSeriesData","yAxisItemId","xAxisItems","yAxisItemIndex","xAxisItemIndex","xAxisItem","seriesValue","analyticsRows","xAxisItemId","finalValue","seriesValues","xAxisRowId","parseFloat","isNaN","isRatio","toString","valueSum","reduce","sum","count","getChartSeriesValue","getChartSeries","yAxisItems","yAxisItem","yAxisIndex","index","turboThreshold","pointPlacement","getChartYAxisOptions","yAxes","axes","newYAxes","min","rangeAxisMinValue","rangeAxisMaxValue","yAxis","opposite","orientation","dashStyle","targetLineValue","zIndex","label","targetLineLabel","baseLineValue","baseLineLabel","getCombinedChartSeriesData","seriesData","combinedSeriesData","seriesDataArray","seriesDataObject","availableSeriesData","seriesDataIndex","newSeriesObject","slice","getSortedChartSeries","sortOrder","seriesCategories","sortBy","seriesCategory","getSolidGaugeChartObject","initialChartObject","newChartObject","yAxisSeriesItems","pane","sortedSeries","getSpiderWebChartObject","xAxisDimension","getXAxisItemsFromChartConfiguration","xAxisOptions","tickmarkPlacement","xAxisCategory","allowOverlap","wordBreak","getChartXAxisOptions","reversedXAxisItems","seriesDataObjects","seriesCategoryNamesArray","idArray","newCategoryArray","reversedIdArray","times","num","parentCategoryItem","parentCategory","parentCategoryIndex","newChildrenCategories","childrenCategoryItem","groupedCategoryNames","groupBy","categoryNameGroupKeys","sanitizedCategoryNames","categoryObject","getSanitizedChartXAxisCategories","getCharObject","incommingAnalyticObject","chart","credits","colors","tooltip","getInitialChartObject","newChartConfiguration","getChartTitle","favoriteObject","interventionName","displayName","chartTypesAtom","CHART_TYPES","chartUpdateAtom","currentChartTypeAtom","chartConfigurationSelector","selectorFamily","layout","currentChartType","visualizationSettings","visualizationLayout","hasOwnProperty","hideEmptyRows","legendAlign","categoryRotation","reverseLegend","showLabels","multiAxisTypes","selectedChartTypes","column","ChartItemComponent","chartHeight","chartTypes","setChartUpdate","useSetRecoilState","setCurrentChartType","useRecoilState","drawChart","setTimeout","Highcharts","height","chartTypePosition","onClick","e","event","stopPropagation","toUpperCase","updateChartType","description","src","icon","alt","ChartListComponent","Suspense","fallback","DictionaryAnalysis","DimensionsSelector","TableAnalysis","viewTypes","TableChartIcon","component","ChartIcon","DescriptionIcon","TableCellAnalysis","onClose","dataHolder","dataState","useRecoilValueLoadable","viewType","setViewType","SelectedView","resetPeriodOptionsCell","useResetRecoilState","resetOrgUnitOptionCell","setStates","useRecoilCallback","snapshot","orgUnitOptionValue","getLoadable","contents","lowestOrgUnitLevel","LowestOrgUnitLevel","orgUnitSelection","OrgUnitSelection","newOrgUnitSelection","cloneDeep","currentOrgUnitLevel","orgUnitCurrentUserBelowLevels","orgUnitUpdateSelector","resetStates","Modal","position","large","ModalContent","overflow","minHeight","getDataSourcesDisplayName","ModalLoader","margin","state","FullPageError","error","ModalActions","bottom","Chip","selected","Button","SingleDataCell","_useRecoilValue","indicator","arrows","current","previous","increasing","useMemo","effectiveGap","displayArrows","getIncreasingStatus","status","LinkedDataCell","_useRecoilValue2","topData","bottomData","topIndicator","bottomIndicator","topCurrent","topPrevious","bottomCurrent","bottomPrevious","topIncreasing","bottomIncreasing","topStatus","bottomStatus","grey100","FurtherAnalysisMenu","stateActionRef","setStateActionRef","setAnalysisOpen","showSubMenu","setShowSubMenu","setPeriodOptionValueStates","setOrgUnitOptionValueStates","Popover","onClickOutside","placement","reference","Menu","MenuItem","IconVisualizationColumnStacked24","IconDimensionOrgUnit16","toggleSubMenu","prevState","IconVisualizationLine24","styles","DataContainer","orgUnitId","analysisOpen","setTopData","setBottomData","resetPeriodsOptionSelection","resetOrgUnitOptionSelection","setTableRef","top","topKey","bottomKey","topSub","bottomSub","minWidth","onContextMenu","preventDefault","target","_","TableLoader","screenWidth","useMediaQuery","CircularLoader","small","TableLinearLoader","colSpan","ScorecardTableConfigState","progress","setProgress","getProgress","LinearLoader","amount","DroppableCell","accept","children","setOrientation","ScorecardTableOrientationState","onDrop","useRef","debounce","canDrop","dropRef","useDrop","drop","Orientation","ORG_UNIT_VS_DATA","DATA_VS_ORG_UNIT","collect","monitor","isOver","border","grey700","_extends","bind","i","arguments","source","prototype","call","apply","DraggableCell","props","isDragging","dragRef","useDrag","grey400","opacity","padding","OrgUnitContainer","showHierarchy","hierarchy","DraggableItems","ORG_UNIT_ROW","ChildOrgUnitRow","expandedOrgUnit","onExpand","emptyRows","averageDisplayType","setIsEmpty","dataGroups","onExpandClick","useCallback","rowAverage","getOrgUnitAverage","rowStatusSub","isRowEmpty","Component","dataTest","expanded","onExpandToggle","expandableContent","ScorecardTable","nested","Tooltip","content","DATA_COLUMN","groupId","AverageDisplayType","ALL","BELOW_AVERAGE","ABOVE_AVERAGE","DataSourceRow","isDataSourcesRowEmpty","rowAverageSub","getDataSourceAverage","ORG_UNIT_COLUMN","DATA_ROW","_head","ParentOrgUnitRow","useTableConfig","orgUnitLoading","setLoading","useDataEngine","setOrgUnits","searchKeyword","sort","ScorecardNameSort","dataSort","ScorecardTableSortState","orgUnitSort","setOrgUnitSort","setDefaults","searchedOrgUnits","searchOrganisationUnit","prevOrgUnits","search","catch","console","finally","_dataSort$name","dx","pe","sortOrgUnitsByDataAndPeriod","sortType","direction","sortOrgUnitsByData","setDataSort","TableSort","DEFAULT","parentOrgUnits","childOrgUnits","sortOrgUnitsBasedOnNames","sortOrgUnitsBasedOnData","useTableOrgUnits","dataSourcesLoading","setDataSources","dataSearchKeyword","resetDataSources","prevDataSources","_value$dataSources","toLowerCase","sortDataSources","dataSourceSort","sortDataSourceByOrgUnit","dSort","ou","sortDataSourceByOrgUnitAndPeriod","sortDataSourcesBasedOnNames","sortDataSourcesBasedOnData","useTableDataSources","setLoadingState","loading$","useTableLoadingState","ScorecardTableBody","configLoader","setExpandedOrgUnit","dhis2Engine","calendar","SystemSettingsState","tableOrientation","averageRow","filteredDataHolders","periodType","refreshScorecard","RefreshScorecardState","resetRefreshScorecard","setOverallAverage","getOverallAverage","setDataQueryEngine","setDataGroups","setPeriods","setPeriodType","setCalendar","load","refresh","DataTableBody","Fragment","childrenOrgUnit","childOrgUnit","childrenAlreadyDisplayed","OrgUnitHeaderCells","orgUnitKeyword","setOrgUnitKeyword","searchValue","setSearchValue","setSort","onOrgUnitSearch","trailing","leading","rowSpan","DataTableColumnHeader","onSortIconClick","prevValue","sortDirection","InputField","onChange","placeholder","GroupsHeaderRow","_useRecoilValue3","_dataHolders$length","_periods$length","_dataHolders$length2","_periods$length2","ScorecardTableConstants","CELL_WIDTH","HoldersHeaderRow","onSortClick","isSingleGroup","_head2","OrgUnitHeaderRow","dataKeyword","setDataKeyword","onDataSearch","nameColumnWidth","onDataSortClick","PeriodHeaderRow","sortName","_ref7","getHeaderRow","TableHeader","columns","headerRows","DataTableHead","Row","TableWidth","initialDataEngine","ScreenDimensionState","tableWidth","DndProvider","backend","HTML5Backend","DataTable","scrollWidth"],"sourceRoot":""}