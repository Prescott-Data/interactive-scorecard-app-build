{"version":3,"file":"static/js/7386.5655774e.chunk.js","mappings":"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","sources":["webpack://@dhis2/app-shell/../../../shared/build/es/components/ScorecardView/components/ScorecardTable/scorecardTable.module.css?d2d2","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableBody/Components/AverageCell.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableBody/Components/AverageDataContainer.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableBody/Components/AverageDataSourceRow.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableBody/Components/AverageOrgUnitRow.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-allowed-chart-types.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-chart-plot-options.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-chart-subtitle.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-chart-title-object.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-chart-tooltip-options.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/getChartAttributeOptions.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-sanitized-analytics-based-on-chart-configuration.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-cumulative-format-for-analytics.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-sanitized-chart-object.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-chart-exporting-options.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-chart-axis-items.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-chart-pane-options.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-chart-series-data-label-options.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-chart-series-data.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-chart-series-value.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-chart-series.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-chart-y-axis-options.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-combined-chart-series-data.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-sorted-chart-series.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-solid-gauge-chart-object.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-spider-web-chart-object.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-x-axis-items-from-chart-configuration.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-charts-x-axis-options.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-sanitized-chart-x-axis-categories.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-chart-object.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-initial-chart-object-helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-chart-credit-options.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-chart-colors.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/helper/get-chart-configuration.helper.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/state-helper/chartAnalyticsChart.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/Components/chart-item/chart-item-component.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/Components/chart-list/chart-list-component.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/index.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/Components/ChartAnalysis/index.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableDataContainer/Components/DataCells.js","webpack://@dhis2/app-shell/../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableDataContainer/Components/FurtherAnalysisMenu/FurtherAnalysisMenu.module.css?02fd","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableDataContainer/Components/FurtherAnalysisMenu/index.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableDataContainer/index.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableLoader.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableBody/Components/DroppableCell.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableBody/Components/DraggableCell.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableBody/Components/OrgUnitContainer.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableBody/Components/ChildOrgUnitRow.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableBody/Components/DataSourceRow.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableBody/Components/ParentOrgUnitRow.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/hooks/useTableConfig.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/hooks/useTableOrgUnits.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/hooks/useTableDataSources.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/hooks/useTableLoadingState.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableBody/index.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableHeader/Components/OrgUnitHeaderCells.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableHeader/Components/GroupsHeaderRow.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableHeader/Components/HoldersHeaderRow.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableHeader/Components/OrgUnitHeaderRow.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableHeader/Components/PeriodHeaderRow.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableHeader/index.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableWidth/index.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/index.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/state/layout.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/state/data.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/state/period.js","../../../../shared/build/es/components/ScorecardView/components/ScorecardTable/Components/TableCellAnalysis/state/orgUnit.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"org-unit-header-cell\":\"scorecardTable_org-unit-header-cell__zyAxQ\",\"holder-header-cell\":\"scorecardTable_holder-header-cell__Tysy3\",\"data-header-cell\":\"scorecardTable_data-header-cell__v5Zuf\",\"period-header-cell\":\"scorecardTable_period-header-cell__9IjVV\",\"child-table-row\":\"scorecardTable_child-table-row__GI9Cw\",\"parent-table-row\":\"scorecardTable_parent-table-row__Mz+w5\",\"table-print\":\"scorecardTable_table-print__BlF6y\",\"average-row\":\"scorecardTable_average-row__Lc5lf\",\"table-header-row\":\"scorecardTable_table-header-row__57TP5\"};","import { head, last, round } from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { LinkedCellSvg, SingleCellSvg } from \"../../../../../../index\";\nimport { OrgUnitLevels, ScorecardLegendDefinitionSelector, ScorecardViewState } from \"../../../../../../../state\";\nimport { getLegend } from \"../../../../../../../utils\";\nfunction SingleAverageCell({\n  cellRef,\n  dataSources,\n  values,\n  bold,\n  period,\n  orgUnit\n}) {\n  var _getLegend;\n  const [dataSource] = dataSources !== null && dataSources !== void 0 ? dataSources : [];\n  const defaultLegendDefinitions = useRecoilValue(ScorecardLegendDefinitionSelector(true));\n  const orgUnitLevels = useRecoilValue(OrgUnitLevels);\n  const legendDefinitions = useRecoilValue(ScorecardViewState(\"legendDefinitions\"));\n  const {\n    color: cellColor\n  } = (_getLegend = getLegend(head(values), dataSource === null || dataSource === void 0 ? void 0 : dataSource.legends, {\n    max: dataSource === null || dataSource === void 0 ? void 0 : dataSource.weight,\n    defaultLegends: defaultLegendDefinitions,\n    dataOrgUnitLevel: {},\n    orgUnitLevels,\n    legendDefinitions,\n    specificTargets: dataSource === null || dataSource === void 0 ? void 0 : dataSource.specificTargets,\n    period,\n    orgUnit\n  })) !== null && _getLegend !== void 0 ? _getLegend : {};\n  if (head(values) === undefined) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(SingleCellSvg, {\n    cellRef: cellRef,\n    color: cellColor,\n    bold: bold,\n    value: head(values) !== undefined ? round(head(values), 2) : \"\"\n  });\n}\nfunction LinkedAverageCell({\n  cellRef,\n  dataSources,\n  values,\n  bold,\n  period,\n  orgUnit\n}) {\n  var _getLegend2, _getLegend3;\n  const defaultLegendDefinitions = useRecoilValue(ScorecardLegendDefinitionSelector(true));\n  const orgUnitLevels = useRecoilValue(OrgUnitLevels);\n  const legendDefinitions = useRecoilValue(ScorecardViewState(\"legendDefinitions\"));\n  const [topDataSource, bottomDataSource] = dataSources !== null && dataSources !== void 0 ? dataSources : [];\n  const {\n    color: topCellColor\n  } = (_getLegend2 = getLegend(head(values), topDataSource === null || topDataSource === void 0 ? void 0 : topDataSource.legends, {\n    max: topDataSource === null || topDataSource === void 0 ? void 0 : topDataSource.weight,\n    defaultLegends: defaultLegendDefinitions,\n    dataOrgUnitLevel: {},\n    orgUnitLevels,\n    legendDefinitions,\n    orgUnit,\n    period,\n    specificTargets: topDataSource === null || topDataSource === void 0 ? void 0 : topDataSource.specificTargets\n  })) !== null && _getLegend2 !== void 0 ? _getLegend2 : {};\n  const {\n    color: bottomCellColor\n  } = (_getLegend3 = getLegend(last(values), bottomDataSource === null || bottomDataSource === void 0 ? void 0 : bottomDataSource.legends, {\n    max: bottomDataSource === null || bottomDataSource === void 0 ? void 0 : bottomDataSource.weight,\n    defaultLegends: defaultLegendDefinitions,\n    dataOrgUnitLevel: {},\n    orgUnitLevels,\n    legendDefinitions,\n    orgUnit,\n    period,\n    specificTargets: bottomDataSource === null || bottomDataSource === void 0 ? void 0 : bottomDataSource.specificTargets\n  })) !== null && _getLegend3 !== void 0 ? _getLegend3 : {};\n  return /*#__PURE__*/React.createElement(LinkedCellSvg, {\n    cellRef: cellRef,\n    topColor: topCellColor,\n    bottomColor: bottomCellColor,\n    bold: bold,\n    topValue: head(values) ? round(+head(values), 2) : \"\",\n    bottomValue: last(values) ? round(last(values), 2) : \"\"\n  });\n}\nSingleAverageCell.propTypes = {\n  values: PropTypes.arrayOf(PropTypes.any).isRequired,\n  bold: PropTypes.bool,\n  dataSources: PropTypes.arrayOf(PropTypes.any),\n  orgUnit: PropTypes.string,\n  period: PropTypes.string\n};\nLinkedAverageCell.propTypes = {\n  values: PropTypes.arrayOf(PropTypes.any).isRequired,\n  bold: PropTypes.bool,\n  dataSources: PropTypes.arrayOf(PropTypes.any),\n  orgUnit: PropTypes.string,\n  period: PropTypes.string\n};\nfunction ComplexAverageCell({\n  value,\n  bold,\n  dataSources,\n  period,\n  orgUnit\n}) {\n  const values = Object.values(value);\n  const [tableCellRef, setTableCellRef] = useState();\n  return /*#__PURE__*/React.createElement(\"td\", {\n    ref: setTableCellRef,\n    className: \"data-cell\",\n    align: \"center\"\n  }, values.length > 1 ? /*#__PURE__*/React.createElement(LinkedAverageCell, {\n    cellRef: tableCellRef,\n    period: period,\n    orgUnit: true,\n    bold: bold,\n    dataSources: dataSources,\n    values: values\n  }) : /*#__PURE__*/React.createElement(SingleAverageCell, {\n    cellRef: tableCellRef,\n    period: period,\n    orgUnit: orgUnit,\n    bold: bold,\n    dataSources: dataSources,\n    values: values\n  }));\n}\nComplexAverageCell.propTypes = {\n  value: PropTypes.any.isRequired,\n  bold: PropTypes.bool,\n  dataSources: PropTypes.arrayOf(PropTypes.any),\n  orgUnit: PropTypes.string,\n  period: PropTypes.string\n};\nexport default function AverageCell({\n  value,\n  bold,\n  dataSources,\n  orgUnit,\n  period\n}) {\n  const [singleCellRef, setSingleCellRef] = useState();\n  if (value === undefined) {\n    return null;\n  }\n  if (typeof value === \"number\") {\n    return /*#__PURE__*/React.createElement(\"td\", {\n      ref: setSingleCellRef,\n      className: \"data-cell\",\n      align: \"center\"\n    }, /*#__PURE__*/React.createElement(SingleCellSvg, {\n      cellRef: singleCellRef,\n      bold: bold,\n      value: value ? round(value, 2) : \"\"\n    }));\n  }\n  return /*#__PURE__*/React.createElement(ComplexAverageCell, {\n    orgUnit: orgUnit,\n    period: period,\n    value: value,\n    bold: bold,\n    dataSources: dataSources\n  });\n}\nAverageCell.propTypes = {\n  value: PropTypes.any.isRequired,\n  bold: PropTypes.bool,\n  dataSources: PropTypes.arrayOf(PropTypes.any),\n  orgUnit: PropTypes.string,\n  period: PropTypes.string\n};","import { isEmpty } from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport AverageCell from \"./AverageCell\";\nimport { ScorecardDataLoadingState, ScorecardOrgUnitState } from \"../../../../../../../state\";\nimport { ScorecardDataEngine } from \"../../../../../../../models\";\nexport default function AverageDataContainer({\n  period,\n  dataSources,\n  orgUnit,\n  orgUnits,\n  dataEngine\n}) {\n  const [average, setAverage] = useState();\n  const loading = useRecoilValue(ScorecardDataLoadingState(orgUnits));\n  const {\n    childrenOrgUnits,\n    filteredOrgUnits\n  } = useRecoilValue(ScorecardOrgUnitState(orgUnits));\n  function subscribe() {\n    if (!loading) {\n      let subscription;\n      if (isEmpty(dataSources)) {\n        subscription = dataEngine.getOrgUnitColumnAverage({\n          period,\n          orgUnit\n        }).subscribe(setAverage);\n      } else {\n        var _ref;\n        subscription = dataEngine.getDataSourceColumnAverage({\n          period,\n          dataSources: dataSources === null || dataSources === void 0 ? void 0 : dataSources.map(({\n            id\n          }) => id),\n          orgUnits: (_ref = [...childrenOrgUnits, ...filteredOrgUnits]) === null || _ref === void 0 ? void 0 : _ref.map(({\n            id\n          }) => id)\n        }).subscribe(setAverage);\n      }\n      return () => {\n        subscription.unsubscribe();\n      };\n    }\n  }\n  useEffect(subscribe, [loading, dataSources, orgUnit, period, childrenOrgUnits, filteredOrgUnits]);\n  return /*#__PURE__*/React.createElement(AverageCell, {\n    dataSources: dataSources,\n    bold: true,\n    value: average,\n    period: period\n  });\n}\nAverageDataContainer.propTypes = {\n  dataEngine: PropTypes.instanceOf(ScorecardDataEngine).isRequired,\n  orgUnits: PropTypes.array.isRequired,\n  period: PropTypes.string.isRequired,\n  dataSources: PropTypes.array,\n  orgUnit: PropTypes.string\n};","import i18n from \"@dhis2/d2-i18n\";\nimport { DataTableCell, DataTableRow } from \"@dhis2/ui\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport classes from \"../../../scorecardTable.module.css\";\nimport AverageCell from \"./AverageCell\";\nimport AverageDataContainer from \"./AverageDataContainer\";\nimport { PeriodResolverState, ScorecardDataSourceState, ScorecardViewState } from \"../../../../../../../state\";\nimport { ScorecardDataEngine } from \"../../../../../../../models\";\nexport default function AverageDataSourceRow({\n  orgUnits,\n  overallAverage,\n  dataEngine\n}) {\n  const periods = useRecoilValue(PeriodResolverState);\n  const dataHolders = useRecoilValue(ScorecardDataSourceState);\n  const {\n    averageColumn,\n    itemNumber\n  } = useRecoilValue(ScorecardViewState(\"options\"));\n  return /*#__PURE__*/React.createElement(DataTableRow, {\n    className: classes[\"average-row\"],\n    bordered: true\n  }, /*#__PURE__*/React.createElement(DataTableCell, {\n    fixed: true,\n    left: \"0\",\n    width: \"50px\"\n  }), itemNumber && /*#__PURE__*/React.createElement(DataTableCell, {\n    className: \"extra-table-cell\",\n    fixed: true,\n    left: \"50px\",\n    width: \"50px\"\n  }), /*#__PURE__*/React.createElement(DataTableCell, {\n    fixed: true,\n    left: itemNumber ? \"100px\" : \"50px\",\n    className: \"scorecard-org-unit-cell\"\n  }, /*#__PURE__*/React.createElement(\"b\", null, i18n.t(\"Average\"))), dataHolders === null || dataHolders === void 0 ? void 0 : dataHolders.map(({\n    dataSources,\n    id: holderId\n  }) => periods === null || periods === void 0 ? void 0 : periods.map(({\n    id\n  }) => /*#__PURE__*/React.createElement(AverageDataContainer, {\n    dataEngine: dataEngine,\n    orgUnits: orgUnits,\n    key: `${holderId}-${id}-average-cell`,\n    dataSources: dataSources,\n    period: id\n  }))), averageColumn && /*#__PURE__*/React.createElement(AverageCell, {\n    bold: true,\n    value: overallAverage\n  }));\n}\nAverageDataSourceRow.propTypes = {\n  dataEngine: PropTypes.instanceOf(ScorecardDataEngine).isRequired,\n  orgUnits: PropTypes.array.isRequired,\n  overallAverage: PropTypes.number.isRequired\n};","import i18n from \"@dhis2/d2-i18n\";\nimport { DataTableCell, DataTableRow } from \"@dhis2/ui\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport classes from \"../../../scorecardTable.module.css\";\nimport AverageCell from \"./AverageCell\";\nimport AverageDataContainer from \"./AverageDataContainer\";\nimport { PeriodResolverState, ScorecardOrgUnitState, ScorecardViewState } from \"../../../../../../../state\";\nimport { ScorecardDataEngine } from \"../../../../../../../models\";\nexport default function AverageOrgUnitRow({\n  orgUnits,\n  overallAverage,\n  dataEngine\n}) {\n  var _ref;\n  const periods = useRecoilValue(PeriodResolverState);\n  const {\n    childrenOrgUnits,\n    filteredOrgUnits\n  } = useRecoilValue(ScorecardOrgUnitState(orgUnits));\n  const {\n    averageColumn,\n    itemNumber\n  } = useRecoilValue(ScorecardViewState(\"options\"));\n  return /*#__PURE__*/React.createElement(DataTableRow, {\n    className: classes[\"average-row\"],\n    bordered: true\n  }, /*#__PURE__*/React.createElement(DataTableCell, {\n    fixed: true,\n    left: \"0\",\n    width: \"50px\"\n  }), itemNumber && /*#__PURE__*/React.createElement(DataTableCell, {\n    fixed: true,\n    left: \"50px\",\n    width: \"50px\"\n  }), /*#__PURE__*/React.createElement(DataTableCell, {\n    fixed: true,\n    left: itemNumber ? \"100px\" : \"50px\",\n    className: \"scorecard-org-unit-cell\"\n  }, /*#__PURE__*/React.createElement(\"b\", null, i18n.t(\"Average\"))), (_ref = [...filteredOrgUnits, ...childrenOrgUnits]) === null || _ref === void 0 ? void 0 : _ref.map(({\n    id\n  }) => periods === null || periods === void 0 ? void 0 : periods.map(({\n    id: periodId\n  }) => /*#__PURE__*/React.createElement(AverageDataContainer, {\n    dataEngine: dataEngine,\n    orgUnits: orgUnits,\n    key: `${id}-${periodId}-average`,\n    period: periodId,\n    orgUnit: id\n  }))), averageColumn && /*#__PURE__*/React.createElement(AverageCell, {\n    bold: true,\n    value: overallAverage\n  }));\n}\nAverageOrgUnitRow.propTypes = {\n  dataEngine: PropTypes.instanceOf(ScorecardDataEngine).isRequired,\n  orgUnits: PropTypes.array.isRequired,\n  overallAverage: PropTypes.number.isRequired\n};","/* eslint-disable no-case-declarations */\nexport function getAllowedChartType(chartType) {\n  let newChartType = \"\";\n  switch (chartType) {\n    case \"radar\":\n      newChartType = \"line\";\n      break;\n    case \"dotted\":\n      newChartType = \"line\";\n      break;\n    default:\n      newChartType = chartType;\n      break;\n  }\n  return newChartType;\n}","import { getAllowedChartType } from \"./get-allowed-chart-types.helper\";\nexport function getPlotOptions(chartConfiguration) {\n  const plotOptionChartType = getAllowedChartType(chartConfiguration.type);\n\n  // TODO: Find best way to attach custom events into the chart\n  const plotOptions = {\n    series: {\n      cursor: \"pointer\",\n      point: {\n        events: {\n          click: function () {\n            const clickedChart = (window[\"clickedCharts\"] || {})[this.id];\n            const currentColor = this.color;\n            if (!clickedChart) {\n              if (!window[\"clickedCharts\"]) {\n                window[\"clickedCharts\"] = {};\n              }\n              window[\"clickedCharts\"] = {\n                ...window[\"clickedCharts\"],\n                [this.id]: {\n                  color: this.color\n                }\n              };\n            } else {\n              (window[\"clickedCharts\"] || {})[this.id] = null;\n            }\n            this.update({\n              color: !clickedChart ? \"#f00\" : currentColor !== \"#f00\" ? \"#f00\" : clickedChart.color\n            }, true, false);\n          }\n        }\n      }\n    }\n  };\n  if (plotOptionChartType) {\n    switch (plotOptionChartType) {\n      case \"solidgauge\":\n        plotOptions[plotOptionChartType] = {\n          dataLabels: {\n            y: 5,\n            borderWidth: 0,\n            useHTML: true\n          }\n        };\n        break;\n      case \"gauge\":\n        plotOptions[plotOptionChartType] = {\n          dataLabels: {\n            y: 5,\n            borderWidth: 0,\n            useHTML: true\n          }\n        };\n        break;\n      case \"pie\":\n        plotOptions[plotOptionChartType] = {\n          borderWidth: 0,\n          allowPointSelect: true,\n          cursor: \"pointer\",\n          showInLegend: !chartConfiguration.hideLegend\n        };\n        break;\n      default:\n        plotOptions[plotOptionChartType !== \"\" ? plotOptionChartType : \"series\"] = {\n          showInLegend: !chartConfiguration.hideLegend,\n          colorByPoint: true\n        };\n\n        /**\n         * Set attributes for stacked charts\n         */\n        if (chartConfiguration.type === \"stacked_column\" || chartConfiguration.type === \"stacked_bar\" || chartConfiguration.type === \"area\") {\n          plotOptions[plotOptionChartType].stacking = chartConfiguration.percentStackedValues ? \"percent\" : \"normal\";\n        }\n        if (chartConfiguration.type === \"dotted\") {\n          plotOptions[\"line\"] = {\n            lineWidth: 0,\n            states: {\n              hover: {\n                enabled: false\n              }\n            }\n          };\n        }\n        break;\n    }\n  }\n  return plotOptions;\n}","import { map } from \"lodash\";\nexport function getChartSubtitleObject(chartConfiguration, analyticsObject) {\n  if (chartConfiguration.hideSubtitle) {\n    return null;\n  }\n  return {\n    text: map(chartConfiguration.zAxisType, zAxis => map(analyticsObject && analyticsObject.metaData ? analyticsObject.metaData[zAxis] || [] : [], itemId => analyticsObject && analyticsObject.metaData && analyticsObject.metaData.names ? analyticsObject.metaData.names[itemId] || [] : []).join(\", \")).join(\" - \"),\n    align: \"left\",\n    style: {\n      fontWeight: \"600\",\n      fontSize: \"13px\"\n    }\n  };\n}","export function getChartTitleObject(chartConfiguration) {\n  if (chartConfiguration.hideTitle) {\n    return null;\n  }\n  return {\n    text: chartConfiguration.title,\n    align: \"left\",\n    style: {\n      fontWeight: \"500\",\n      fontSize: \"16px\"\n    }\n  };\n}","import { getAllowedChartType } from \"./get-allowed-chart-types.helper\";\nexport function getTooltipOptions(chartConfiguration) {\n  const tooltipChartType = getAllowedChartType(chartConfiguration.type);\n  let tooltipObject = {};\n  if (tooltipChartType) {\n    switch (tooltipChartType) {\n      case \"solidgauge\":\n        tooltipObject = {\n          enabled: false\n        };\n        break;\n      case \"pie\":\n        tooltipObject = {\n          pointFormat: \"{series.name}<br/> <b>{point.y}</b> ( {point.percentage:.1f} % )\"\n        };\n        break;\n      default:\n        switch (chartConfiguration.type) {\n          case \"stacked_column\":\n            tooltipObject = {\n              headerFormat: \"<b>{point.x}</b><br/>\",\n              pointFormat: \"{series.name}: {point.y}<br/>Total: {point.stackTotal}\"\n            };\n            break;\n          default:\n            tooltipObject = {\n              enabled: true\n            };\n            break;\n        }\n        break;\n    }\n  }\n  return tooltipObject;\n}","import { getAllowedChartType } from \"./get-allowed-chart-types.helper\";\nexport function getChartAttributeOptions(chartConfiguration) {\n  const chartOptions = {\n    renderTo: chartConfiguration.renderId,\n    zoomType: \"xy\",\n    type: getAllowedChartType(chartConfiguration.type)\n  };\n\n  /**\n   * Extend Options depending on chart type\n   */\n  if (chartConfiguration.type === \"pie\") {\n    chartOptions.plotBackgroundColor = null;\n    chartOptions.plotBorderWidth = null;\n    chartOptions.plotShadow = false;\n  } else if (chartConfiguration.type === \"radar\") {\n    chartOptions.polar = true;\n  }\n  return chartOptions;\n}","import { getCumulativeFormatForAnalytics } from \"./get-cumulative-format-for-analytics.helper\";\nexport function getSanitizedanalyticsBasedOnConfiguration(analyticsObject, chartConfiguration) {\n  return chartConfiguration.cumulativeValues ? getCumulativeFormatForAnalytics(analyticsObject, chartConfiguration.xAxisType[0], chartConfiguration.yAxisType) : analyticsObject;\n}","import { assign, clone, find, findIndex, reverse } from \"lodash\";\nexport function getCumulativeFormatForAnalytics(analyticsObject, xAxisType, yAxisType) {\n  const newAnalyticsObject = clone(analyticsObject);\n  if (analyticsObject) {\n    const yAxisDimensionArray = analyticsObject.metadata[yAxisType];\n    const xAxisDimensionArray = [...reverse([...analyticsObject.metadata[xAxisType]])];\n    const yAxisDimensionIndex = findIndex(analyticsObject.headers, find(analyticsObject.headers, [\"name\", yAxisType]));\n    const xAxisDimensionIndex = findIndex(analyticsObject.headers, find(analyticsObject.headers, [\"name\", xAxisType]));\n    const dataValueIndex = findIndex(analyticsObject.headers, find(analyticsObject.headers, [\"name\", \"value\"]));\n    const newRows = [];\n    yAxisDimensionArray.forEach(yAxisDimensionValue => {\n      let initialValue = 0;\n      xAxisDimensionArray.forEach(xAxisDimensionValue => {\n        analyticsObject.rows.forEach(row => {\n          if (row[yAxisDimensionIndex] === yAxisDimensionValue && row[xAxisDimensionIndex] === xAxisDimensionValue) {\n            initialValue += parseInt(row[dataValueIndex], 10);\n            const newRow = clone(row);\n            newRow[dataValueIndex] = initialValue;\n            newRows.push(newRow);\n          }\n        });\n      });\n    });\n    newAnalyticsObject.rows = assign([], newRows);\n  }\n  return newAnalyticsObject;\n}","import { each, filter, find, flatten, intersection, map, some } from \"lodash\";\nimport { getChartExportingOptions } from \"./get-chart-exporting-options.helper\";\nexport function getSanitizedChartObject(chartObject, chartConfiguration) {\n  const dataSelectionGroups = flatten(filter(map(chartConfiguration.dataSelections || [], dataSelection => {\n    return dataSelection.groups;\n  }), group => group));\n  const dataSelectionGroupMembers = flatten(map(dataSelectionGroups, group => {\n    return map(group.members, member => `${member.id}_${group.id}`);\n  }));\n\n  // Remove non numeric series data and their categories\n  const dataIndexesArrayToRemove = map(chartObject.series, seriesObject => {\n    return filter(map(seriesObject.data, (dataItem, dataIndex) => dataItem.y === \"\" || dataSelectionGroupMembers.length > 0 && dataSelectionGroupMembers.indexOf(dataItem.id) === -1 ? dataIndex : -1), dataIndex => dataIndex !== -1);\n  });\n  let newDataIndexes = [];\n  each(dataIndexesArrayToRemove, dataIndexes => {\n    newDataIndexes = newDataIndexes.length === 0 ? dataIndexes : newDataIndexes;\n    newDataIndexes = intersection(newDataIndexes, dataIndexes);\n  });\n  const newSeries = map(chartObject.series, seriesObject => {\n    return {\n      ...seriesObject,\n      data: filter(map(seriesObject.data, dataItem => {\n        const splitedDataItemId = dataItem.id.split(\"_\");\n        const associatedGroup = find(dataSelectionGroups, [\"id\", splitedDataItemId[1]]);\n\n        // TODO: Need to find a way to generically handle color assignment from click event\n        const clickedChart = (window[\"clickedCharts\"] || {})[dataItem.id];\n        if (clickedChart) {\n          return {\n            ...dataItem,\n            color: \"#f00\"\n          };\n        }\n        return associatedGroup && some(associatedGroup.members, member => member.id === splitedDataItemId[0]) && associatedGroup.color ? {\n          ...dataItem,\n          color: associatedGroup.color\n        } : dataItem;\n      }), (dataItem, dataIndex) => newDataIndexes.indexOf(dataIndex) === -1)\n    };\n  });\n  let categoryCount = 0;\n  const newCategories = map(chartObject.xAxis.categories, category => {\n    if (!category.categories) {\n      return category;\n    }\n    const newCategory = {\n      ...category,\n      categories: filter(category.categories, (innerCategory, innerCategoryIndex) => newDataIndexes.indexOf(innerCategoryIndex + categoryCount) === -1)\n    };\n    categoryCount += category.categories ? category.categories.length : 0;\n    return newCategory;\n  });\n  return {\n    ...chartObject,\n    series: newSeries,\n    xAxis: {\n      ...chartObject.xAxis,\n      categories: newCategories\n    },\n    exporting: getChartExportingOptions(newCategories)\n  };\n}","export function getChartExportingOptions(xAxisCategories) {\n  return {\n    scale: 3,\n    chartOptions: {\n      title: {\n        style: {\n          fontSize: \"10px\"\n        }\n      },\n      subtitle: {\n        style: {\n          fontSize: \"10px\"\n        }\n      },\n      xAxis: [{\n        categories: xAxisCategories,\n        labels: {\n          rotation: 0,\n          style: {\n            fontSize: \"8px\",\n            color: \"#000000\",\n            textAlign: \"center\",\n            textOverflow: \"allow\",\n            width: 1,\n            paddingBottom: \"5px\"\n          }\n        }\n      }]\n    },\n    buttons: {\n      contextButton: {\n        enabled: true\n      }\n    }\n  };\n}","import { assign, map } from \"lodash\";\nexport function getChartAxisItems(analyticsObject, axisTypeArray, isCategory) {\n  let items = [];\n  const metadataNames = analyticsObject.metaData.names;\n  axisTypeArray === null || axisTypeArray === void 0 ? void 0 : axisTypeArray.forEach((axisType, axisIndex) => {\n    var _analyticsObject$meta;\n    const itemKeys = (_analyticsObject$meta = analyticsObject.metaData[axisType]) !== null && _analyticsObject$meta !== void 0 ? _analyticsObject$meta : [];\n    if (itemKeys) {\n      if (axisIndex > 0) {\n        const availableItems = assign([], items);\n        items = [];\n        itemKeys.forEach(itemKey => {\n          availableItems.forEach(item => {\n            items.push({\n              id: item.id + \"_\" + itemKey,\n              name: item.name + \"_\" + metadataNames[itemKey].trim()\n            });\n          });\n        });\n      } else {\n        items = map(itemKeys, itemKey => {\n          return {\n            id: itemKey,\n            name: metadataNames[itemKey].trim()\n          };\n        });\n      }\n    }\n  });\n  return items;\n}","import { assign } from \"lodash\";\nexport function getChartPaneOptions(chartType) {\n  let paneOptions = {};\n  switch (chartType) {\n    case \"radar\":\n      paneOptions = assign({}, {\n        size: \"80%\"\n      });\n      break;\n    default:\n      paneOptions = assign({}, {\n        center: [\"50%\", \"85%\"],\n        size: \"140%\",\n        startAngle: -90,\n        endAngle: 90,\n        background: {\n          backgroundColor: \"#EEE\",\n          innerRadius: \"60%\",\n          outerRadius: \"100%\",\n          shape: \"arc\"\n        }\n      });\n      break;\n  }\n  return paneOptions;\n}","export function getChartSeriesDataLabelsOptions(chartConfiguration) {\n  let dataLabels = null;\n  switch (chartConfiguration.type) {\n    case \"pie\":\n      dataLabels = {\n        enabled: chartConfiguration.showData,\n        format: \"{point.name}<br/> <b>{point.y}</b> ( {point.percentage:.1f} % )\"\n      };\n      break;\n    default:\n      dataLabels = {\n        enabled: chartConfiguration.showData\n      };\n      break;\n  }\n  return dataLabels;\n}","/* eslint-disable max-params */\nimport { find, findIndex, map } from \"lodash\";\nimport { getChartSeriesDataLabelsOptions } from \"./get-chart-series-data-label-options.helper\";\nimport { getChartSeriesValue } from \"./get-chart-series-value.helper\";\nexport function getChartSeriesData(analyticsObject, chartConfiguration, yAxisItemId, xAxisItems) {\n  const data = [];\n\n  /**\n   * Get index to locate data for y axis\n   */\n  const yAxisItemIndex = findIndex(analyticsObject.headers, find(analyticsObject.headers, [\"name\", chartConfiguration.yAxisType]));\n\n  /**\n   * Get index for value attribute to get the data\n   */\n  const dataIndex = findIndex(analyticsObject.headers, find(analyticsObject.headers, [\"name\", \"value\"]));\n\n  /**\n   * Get index to locate data for x axis\n   */\n  const xAxisItemIndex = map(chartConfiguration.xAxisType, xAxisType => {\n    return findIndex(analyticsObject.headers, find(analyticsObject.headers, [\"name\", xAxisType]));\n  }).join(\"_\");\n  if (xAxisItems) {\n    xAxisItems.forEach(xAxisItem => {\n      /**\n       * Get the required data depending on xAxis and yAxis\n       */\n      //getChartSeriesValue\n      const seriesValue = getChartSeriesValue(analyticsObject.rows, yAxisItemIndex, yAxisItemId, xAxisItemIndex, xAxisItem.id, dataIndex);\n      data.push({\n        id: xAxisItem.id,\n        name: xAxisItem.name,\n        dataLabels: getChartSeriesDataLabelsOptions(chartConfiguration),\n        y: seriesValue\n      });\n    });\n  }\n  return data;\n}","/* eslint-disable max-params */\nimport { forEach, map, some } from \"lodash\";\nexport function getChartSeriesValue(analyticsRows, yAxisItemIndex, yAxisItemId, xAxisItemIndex, xAxisItemId, dataIndex) {\n  let finalValue = 0;\n  const seriesValues = map(analyticsRows, row => {\n    let seriesValue = 0;\n    let xAxisRowId = \"\";\n    forEach(xAxisItemIndex.split(\"_\"), axisIndex => {\n      xAxisRowId += xAxisRowId !== \"\" ? \"_\" : \"\";\n      xAxisRowId += row[axisIndex];\n    });\n    if (row[yAxisItemIndex] === yAxisItemId && xAxisRowId === xAxisItemId) {\n      const value = parseFloat(row[dataIndex]);\n      if (isNaN(value)) {\n        return row[dataIndex];\n      }\n      seriesValue += value;\n    }\n    return seriesValue;\n  }).filter(value => value !== 0);\n  if (seriesValues) {\n    // Check if series values have non numeric content\n    if (some(seriesValues, seriesValue => isNaN(seriesValue))) {\n      return \"\";\n    }\n    // TODO find best way to identify ratios\n    const isRatio = some(seriesValues, seriesValue => seriesValue.toString().split(\".\")[1]);\n    const valueSum = seriesValues.length > 0 ? seriesValues.reduce((sum, count) => parseFloat(sum) + parseFloat(count)) : 0;\n    if (isRatio) {\n      finalValue = valueSum / seriesValues.length;\n    } else {\n      finalValue = valueSum;\n    }\n  }\n  return finalValue !== 0 ? finalValue : null;\n}","/* eslint-disable max-params */\nimport { getAllowedChartType } from \"./get-allowed-chart-types.helper\";\nimport { getChartSeriesData } from \"./get-chart-series-data.helper\";\nexport function getChartSeries(analyticsObject, xAxisItems, yAxisItems, chartConfiguration) {\n  const series = yAxisItems.map((yAxisItem, yAxisIndex) => {\n    return {\n      name: yAxisItem.name,\n      id: yAxisItem.id,\n      index: yAxisIndex,\n      turboThreshold: 0,\n      pointPlacement: chartConfiguration.type === \"radar\" ? \"on\" : undefined,\n      data: getChartSeriesData(analyticsObject, chartConfiguration, yAxisItem.id, xAxisItems),\n      type: getAllowedChartType(chartConfiguration.type)\n    };\n  });\n  return series;\n}","import { assign, map } from \"lodash\";\nexport function getChartYAxisOptions(chartConfiguration) {\n  const yAxes = chartConfiguration.axes;\n  let newYAxes = [];\n  if (yAxes.length == 0) {\n    newYAxes = assign([], [{\n      min: chartConfiguration.rangeAxisMinValue,\n      max: chartConfiguration.rangeAxisMaxValue,\n      title: {\n        text: \"\",\n        style: {\n          color: \"#000000\",\n          fontWeight: \"normal\",\n          fontSize: \"14px\"\n        }\n      }\n    }]);\n  } else {\n    newYAxes = map(yAxes, yAxis => {\n      return {\n        min: chartConfiguration.rangeAxisMinValue,\n        max: chartConfiguration.rangeAxisMaxValue,\n        title: {\n          text: yAxis.name,\n          style: {\n            color: \"#000000\",\n            fontWeight: \"normal\",\n            fontSize: \"14px\"\n          }\n        },\n        opposite: yAxis.orientation !== \"left\"\n      };\n    });\n  }\n  return map(newYAxes, yAxis => {\n    /**\n     * Get more options depending on chart type\n     */\n    switch (chartConfiguration.type) {\n      case \"radar\":\n        yAxis[\"gridLineInterpolation\"] = \"polygon\";\n        yAxis[\"lineWidth\"] = 0;\n        break;\n      case \"solidgauge\":\n        yAxis[\"lineWidth\"] = 0;\n        yAxis[\"labels\"] = {\n          y: 16\n        };\n        yAxis[\"max\"] = 100;\n        break;\n      case \"stacked_column\":\n        yAxis[\"stackLabels\"] = {\n          enabled: false,\n          style: {\n            fontWeight: \"bold\"\n          }\n        };\n        break;\n      default:\n        yAxis[\"labels\"] = {\n          style: {\n            color: \"#000000\",\n            fontWeight: \"normal\",\n            fontSize: \"14px\"\n          }\n        };\n        yAxis[\"plotLines\"] = [{\n          color: \"#000000\",\n          dashStyle: \"Solid\",\n          value: chartConfiguration.targetLineValue,\n          width: 2,\n          zIndex: 1000,\n          label: {\n            text: chartConfiguration.targetLineLabel\n          }\n        }, {\n          color: \"#000000\",\n          dashStyle: \"Solid\",\n          value: chartConfiguration.baseLineValue,\n          zIndex: 1000,\n          width: 2,\n          label: {\n            text: chartConfiguration.baseLineLabel\n          }\n        }];\n        break;\n    }\n    return yAxis;\n  });\n}","import { find, findIndex } from \"lodash\";\nexport function getCombinedChartSeriesData(seriesData) {\n  let combinedSeriesData = [];\n  seriesData.forEach(seriesDataArray => {\n    seriesDataArray.forEach(seriesDataObject => {\n      const availableSeriesData = find(combinedSeriesData, [\"id\", seriesDataObject.id]);\n      if (!availableSeriesData) {\n        combinedSeriesData = [...combinedSeriesData, seriesDataObject];\n      } else {\n        const seriesDataIndex = findIndex(combinedSeriesData, availableSeriesData);\n        const newSeriesObject = {\n          ...seriesDataObject\n        };\n        newSeriesObject.y += availableSeriesData.y;\n        combinedSeriesData = [...combinedSeriesData.slice(0, seriesDataIndex), newSeriesObject, ...combinedSeriesData.slice(seriesDataIndex + 1)];\n      }\n    });\n  });\n  return combinedSeriesData;\n}","import { find, map, reverse, sortBy } from \"lodash\";\nimport { getCombinedChartSeriesData } from \"./get-combined-chart-series-data.helper\";\nexport function getSortedChartSeries(series, sortOrder) {\n  let newSeries = [...series];\n  let seriesCategories = [];\n\n  /**\n   * Combine all available series for sorting\n   */\n  const combinedSeriesData = [...getCombinedChartSeriesData(map(series, seriesObject => seriesObject.data))];\n  if (sortOrder === 1) {\n    seriesCategories = map(reverse(sortBy(combinedSeriesData, [\"y\"])), seriesData => seriesData.id);\n    newSeries = map(newSeries, seriesObject => {\n      const newSeriesObject = {\n        ...seriesObject\n      };\n      if (seriesCategories.length > 0) {\n        newSeriesObject.data = [...map(seriesCategories, seriesCategory => find(seriesObject.data, [\"id\", seriesCategory]))];\n      }\n      return newSeriesObject;\n    });\n  } else if (sortOrder === -1) {\n    seriesCategories = map(sortBy(combinedSeriesData, [\"y\"]), seriesData => seriesData.id);\n    newSeries = map(series, seriesObject => {\n      const newSeriesObject = {\n        ...seriesObject\n      };\n      if (seriesCategories.length > 0) {\n        newSeriesObject.data = [...map(seriesCategories, seriesCategory => find(seriesObject.data, [\"id\", seriesCategory]))];\n      }\n      return newSeriesObject;\n    });\n  }\n  return newSeries;\n}","import { assign, clone } from \"lodash\";\nimport { getChartAxisItems } from \"./get-chart-axis-items.helper\";\nimport { getChartPaneOptions } from \"./get-chart-pane-options.helper\";\nimport { getChartSeries } from \"./get-chart-series.helper\";\nimport { getChartYAxisOptions } from \"./get-chart-y-axis-options.helper\";\nimport { getSortedChartSeries } from \"./get-sorted-chart-series.helper\";\nexport function getSolidGaugeChartObject(initialChartObject, analyticsObject, chartConfiguration) {\n  // todo make gauge chart more understanble in analyisis\n  const newChartObject = clone(initialChartObject);\n  const yAxisSeriesItems = getChartAxisItems(analyticsObject, chartConfiguration.yAxisType);\n\n  /**\n   * Get pane options\n   */\n  newChartObject.pane = getChartPaneOptions(chartConfiguration.type);\n\n  /**\n   * Get y axis options\n   */\n  newChartObject.yAxis = assign([], getChartYAxisOptions(chartConfiguration));\n\n  /**\n   * Sort the corresponding series\n   */\n  const sortedSeries = getSortedChartSeries(getChartSeries(analyticsObject, getChartAxisItems(analyticsObject, chartConfiguration.xAxisType, true), yAxisSeriesItems, chartConfiguration), chartConfiguration.cumulativeValues ? -1 : chartConfiguration.sortOrder);\n  return {\n    ...newChartObject,\n    series: sortedSeries\n  };\n}","import { assign, clone } from \"lodash\";\nimport { getChartAxisItems } from \"./get-chart-axis-items.helper\";\nimport { getChartPaneOptions } from \"./get-chart-pane-options.helper\";\nimport { getChartSeries } from \"./get-chart-series.helper\";\nimport { getChartYAxisOptions } from \"./get-chart-y-axis-options.helper\";\nimport { getChartXAxisOptions } from \"./get-charts-x-axis-options.helper\";\nimport { getSanitizedChartXAxisCategories } from \"./get-sanitized-chart-x-axis-categories.helper\";\nimport { getSortedChartSeries } from \"./get-sorted-chart-series.helper\";\nimport { getXAxisItemsFromChartConfiguration } from \"./get-x-axis-items-from-chart-configuration.helper\";\nexport function getSpiderWebChartObject(initialChartObject, analyticsObject, chartConfiguration) {\n  //getChartAxisItems\n  const newChartObject = clone(initialChartObject);\n  const yAxisSeriesItems = getChartAxisItems(analyticsObject, chartConfiguration.yAxisType);\n\n  /**\n   * Get pane attribute\n   */\n  newChartObject.pane = assign({}, getChartPaneOptions(chartConfiguration.type));\n\n  /**\n   * Get y axis options\n   */\n  newChartObject.yAxis = assign([], getChartYAxisOptions(chartConfiguration));\n\n  /**\n   * Sort the corresponding series\n   * getChartSeries\n   */\n  const sortedSeries = getSortedChartSeries(getChartSeries(analyticsObject, getChartAxisItems(analyticsObject, chartConfiguration.xAxisType, true), yAxisSeriesItems, chartConfiguration), chartConfiguration.cumulativeValues ? -1 : chartConfiguration.sortOrder);\n\n  /**\n   *  Get series\n   *\n   */\n\n  newChartObject.series = assign([], sortedSeries);\n  const xAxisItems = getXAxisItemsFromChartConfiguration(chartConfiguration);\n\n  /**\n   *\n   *   Get refined x axis options\n   */\n  newChartObject.xAxis = getChartXAxisOptions(getSanitizedChartXAxisCategories(newChartObject.series, xAxisItems), chartConfiguration);\n  return newChartObject;\n}","import { find } from \"lodash\";\nexport function getXAxisItemsFromChartConfiguration(chartConfiguration) {\n  return (chartConfiguration ? chartConfiguration.xAxisType : []).map(xAxisDimension => {\n    const dataSelection = find(chartConfiguration ? chartConfiguration.dataSelections : [], [\"dimension\", xAxisDimension === \"groups\" ? \"dx\" : xAxisDimension]);\n    return dataSelection ? xAxisDimension === \"groups\" ? dataSelection.groups : dataSelection.items : [];\n  });\n}","import { assign } from \"lodash\";\nexport function getChartXAxisOptions(xAxisCategories, chartConfiguration) {\n  let xAxisOptions = {};\n  switch (chartConfiguration.type) {\n    case \"radar\":\n      xAxisOptions = assign({}, {\n        categories: xAxisCategories,\n        tickmarkPlacement: \"on\",\n        lineWidth: 0\n      });\n      break;\n    default:\n      xAxisOptions = assign({}, {\n        categories: [...(xAxisCategories === null || xAxisCategories === void 0 ? void 0 : xAxisCategories.map(xAxisCategory => xAxisCategory.name))],\n        labels: {\n          rotation: 0,\n          useHTML: true,\n          allowOverlap: true,\n          style: {\n            color: \"#000000\",\n            fontWeight: \"normal\",\n            fontSize: \"12px\",\n            wordBreak: \"break-all\",\n            textOverflow: \"allow\"\n          }\n        }\n      });\n      break;\n  }\n  return xAxisOptions;\n}","import { assign, filter, find, findIndex, forEach, groupBy, map, reverse, times, uniqBy } from \"lodash\";\nexport function getSanitizedChartXAxisCategories(series, xAxisItems) {\n  const reversedXAxisItems = reverse(xAxisItems || []);\n  let newCategories = [];\n  if (series) {\n    const seriesDataObjects = map(series, seriesObject => seriesObject.data);\n    if (seriesDataObjects) {\n      const seriesCategoryNamesArray = map(seriesDataObjects, seriesData => {\n        return map(seriesData, data => {\n          const idArray = data.name.split(\"_\");\n          const newCategoryArray = [];\n          if (idArray) {\n            const reversedIdArray = reverse(idArray);\n            times(idArray.length, num => {\n              if (num === 0) {\n                const parentCategoryItem = find(reversedXAxisItems[num] || [], [\"id\", reversedIdArray[num]]);\n                newCategoryArray.push({\n                  id: reversedIdArray[num],\n                  name: parentCategoryItem ? parentCategoryItem.label || parentCategoryItem.name : reversedIdArray[num]\n                });\n              } else {\n                const parentCategory = find(newCategoryArray, [\"id\", reversedIdArray[num - 1]]);\n                if (parentCategory) {\n                  const parentCategoryIndex = findIndex(newCategoryArray, parentCategory);\n                  let newChildrenCategories = parentCategory.categories ? parentCategory.categories : [];\n                  const childrenCategoryItem = find(reversedXAxisItems[num] || [], [\"id\", reversedIdArray[num]]);\n                  newChildrenCategories = [...newChildrenCategories, childrenCategoryItem ? childrenCategoryItem.label || childrenCategoryItem.name : reversedIdArray[num]];\n                  parentCategory.categories = assign([], newChildrenCategories);\n                  newCategoryArray[parentCategoryIndex] = parentCategory;\n                }\n              }\n            });\n          }\n          return newCategoryArray[0];\n        });\n      });\n      if (seriesCategoryNamesArray) {\n        const groupedCategoryNames = groupBy(seriesCategoryNamesArray[0], \"name\");\n        const categoryNameGroupKeys = map(seriesCategoryNamesArray[0], category => category.name);\n        const sanitizedCategoryNames = [];\n        forEach(categoryNameGroupKeys, key => {\n          const categories = filter(map(groupedCategoryNames[key], categoryObject => {\n            return categoryObject.categories ? categoryObject.categories[0] : null;\n          }), category => category !== null);\n          if (categories.length === 0) {\n            sanitizedCategoryNames.push({\n              name: key\n            });\n          } else {\n            sanitizedCategoryNames.push({\n              name: key,\n              categories: categories\n            });\n          }\n        });\n        newCategories = assign([], sanitizedCategoryNames);\n      }\n    }\n  }\n  return uniqBy(newCategories, \"name\");\n}","/* eslint-disable no-case-declarations */\nimport { clone } from \"lodash\";\nimport { getInitialChartObject } from \"./get-initial-chart-object-helper\";\nimport { getSanitizedanalyticsBasedOnConfiguration } from \"./get-sanitized-analytics-based-on-chart-configuration.helper\";\nimport { getSanitizedChartObject } from \"./get-sanitized-chart-object.helper\";\nimport { getSolidGaugeChartObject } from \"./get-solid-gauge-chart-object.helper\";\nimport { getSpiderWebChartObject } from \"./get-spider-web-chart-object.helper\";\nexport function getCharObject(incommingAnalyticObject, chartConfiguration) {\n  const analyticsObject = getSanitizedanalyticsBasedOnConfiguration(incommingAnalyticObject, chartConfiguration);\n  let chartObject = getInitialChartObject(analyticsObject, chartConfiguration);\n\n  /**\n   * Extend chart options depending on type\n   */\n\n  switch (chartConfiguration.type) {\n    case \"radar\":\n      chartObject = getSpiderWebChartObject(chartObject, analyticsObject, chartConfiguration);\n      break;\n    case \"solidgauge\":\n      chartObject = getSolidGaugeChartObject(chartObject, analyticsObject, chartConfiguration);\n      break;\n    case \"gauge\":\n      const newChartConfiguration = clone(chartConfiguration);\n      newChartConfiguration.type = \"solidgauge\";\n      chartObject = getSolidGaugeChartObject(chartObject, analyticsObject, newChartConfiguration);\n      break;\n    default:\n      return getSanitizedChartObject(getSpiderWebChartObject(chartObject, analyticsObject, chartConfiguration), chartConfiguration);\n  }\n  return getSanitizedChartObject(chartObject, chartConfiguration);\n}","import { getChartColors } from \"./get-chart-colors.helper\";\nimport { getChartCreditsOption } from \"./get-chart-credit-options.helper\";\nimport { getPlotOptions } from \"./get-chart-plot-options.helper\";\nimport { getChartSubtitleObject } from \"./get-chart-subtitle.helper\";\nimport { getChartTitleObject } from \"./get-chart-title-object.helper\";\nimport { getTooltipOptions } from \"./get-chart-tooltip-options.helper\";\nimport { getChartAttributeOptions } from \"./getChartAttributeOptions\";\nexport function getInitialChartObject(analyticsObject, chartConfiguration) {\n  return {\n    chart: getChartAttributeOptions(chartConfiguration),\n    title: getChartTitleObject(chartConfiguration),\n    subtitle: getChartSubtitleObject(chartConfiguration, analyticsObject),\n    credits: getChartCreditsOption(),\n    colors: getChartColors(),\n    plotOptions: getPlotOptions(chartConfiguration),\n    tooltip: getTooltipOptions(chartConfiguration)\n  };\n}","export function getChartCreditsOption() {\n  return {\n    enabled: false\n  };\n}","export function getChartColors() {\n  return [\"#A9BE3B\", \"#558CC0\", \"#D34957\", \"#FF9F3A\", \"#968F8F\", \"#B7409F\", \"#FFDA64\", \"#4FBDAE\", \"#B78040\", \"#676767\", \"#6A33CF\", \"#4A7833\", \"#434348\", \"#7CB5EC\", \"#F7A35C\", \"#F15C80\"];\n}","/* eslint-disable no-prototype-builtins */\n/* eslint-disable max-params */\n\nexport function getChartConfiguration(visualizationSettings, renderId, visualizationLayout, interventionName, customChartType, dataSelections) {\n  const chartType = customChartType;\n  return {\n    renderId: renderId,\n    type: chartType,\n    title: getChartTitle(visualizationSettings, interventionName),\n    subtitle: visualizationSettings.hasOwnProperty(\"subtitle\") ? visualizationSettings.subtitle : \"\",\n    hideTitle: visualizationSettings.hasOwnProperty(\"hideTitle\") ? visualizationSettings.hideTitle : true,\n    hideSubtitle: visualizationSettings.hasOwnProperty(\"hideSubtitle\") ? visualizationSettings.hideSubtitle : false,\n    showData: visualizationSettings.hasOwnProperty(\"showData\") ? visualizationSettings.showData : true,\n    hideEmptyRows: visualizationSettings.hasOwnProperty(\"hideEmptyRows\") ? visualizationSettings.hideEmptyRows : true,\n    hideLegend: visualizationSettings.hasOwnProperty(\"hideLegend\") ? visualizationSettings.hideLegend : true,\n    cumulativeValues: visualizationSettings.hasOwnProperty(\"cumulativeValues\") ? visualizationSettings.cumulativeValues : false,\n    targetLineValue: visualizationSettings.targetLineValue ? visualizationSettings.targetLineValue : undefined,\n    targetLineLabel: visualizationSettings.targetLineLabel ? visualizationSettings.targetLineLabel : \"\",\n    baseLineValue: visualizationSettings.baseLineValue ? visualizationSettings.baseLineValue : undefined,\n    baseLineLabel: visualizationSettings.baseLineLabel ? visualizationSettings.baseLineLabel : \"\",\n    legendAlign: \"bottom\",\n    categoryRotation: 0,\n    reverseLegend: false,\n    showLabels: true,\n    axes: visualizationSettings.axes ? visualizationSettings.axes : [],\n    rangeAxisMaxValue: 90,\n    rangeAxisMinValue: visualizationSettings.rangeAxisMinValue ? visualizationSettings.rangeAxisMinValue : undefined,\n    sortOrder: visualizationSettings.hasOwnProperty(\"sortOrder\") ? visualizationSettings.sortOrder : 0,\n    percentStackedValues: visualizationSettings.hasOwnProperty(\"percentStackedValues\") ? visualizationSettings.percentStackedValues : true,\n    multiAxisTypes: visualizationSettings.hasOwnProperty(\"selectedChartTypes\") ? visualizationSettings.selectedChartTypes : [],\n    xAxisType: visualizationLayout.row,\n    yAxisType: visualizationLayout.column,\n    zAxisType: visualizationLayout.filter,\n    dataSelections\n  };\n}\nfunction getChartTitle(favoriteObject, interventionName) {\n  return `${favoriteObject.title || favoriteObject.displayName || favoriteObject.name}${interventionName ? ` : ${interventionName}` : \"\"}`;\n}","/* eslint-disable import/no-unresolved */\nimport { atom, selectorFamily } from \"recoil\";\nimport { getChartConfiguration } from \"../helper/get-chart-configuration.helper\";\nimport { CHART_TYPES } from \"../../../../../../../../../constants\";\nexport const chartTypesAtom = atom({\n  key: \"chartTypes-atom\",\n  default: CHART_TYPES\n});\nexport const chartUpdateAtom = atom({\n  key: \"chart-update-atom\",\n  default: {\n    id: \"\",\n    type: \"\"\n  }\n});\nexport const currentChartTypeAtom = atom({\n  key: \"current-chart-type\",\n  default: \"column\"\n});\nexport const chartConfigurationSelector = selectorFamily({\n  key: \"chart-comfiguration-selector\",\n  get: ({\n    layout,\n    currentChartType\n  }) => () => {\n    const configuration = getChartConfiguration({}, \"render-id-unique\", layout, \"\", currentChartType, []);\n    return configuration;\n  }\n});","import Highcharts from \"highcharts\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect } from \"react\";\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { DataState } from \"../../../../state/data\";\nimport \"./chart-item-component.css\";\nimport { LayoutState } from \"../../../../state/layout\";\nimport { getCharObject } from \"../../helper/get-chart-object.helper\";\nimport { chartConfigurationSelector, chartTypesAtom, chartUpdateAtom, currentChartTypeAtom } from \"../../state-helper/chartAnalyticsChart\";\nexport default function ChartItemComponent({\n  chartHeight\n}) {\n  const chartTypes = useRecoilValue(chartTypesAtom);\n  const setChartUpdate = useSetRecoilState(chartUpdateAtom);\n  const [currentChartType, setCurrentChartType] = useRecoilState(currentChartTypeAtom);\n  const data = useRecoilValue(DataState);\n  const layout = useRecoilValue(LayoutState);\n  const chartConfiguration = useRecoilValue(chartConfigurationSelector({\n    layout,\n    currentChartType\n  }));\n  let chart = \"\";\n  useEffect(() => {\n    drawChart(data[\"_data\"], chartConfiguration);\n  }, [data, currentChartType, layout]);\n  function drawChart(analyticsObject, chartConfiguration) {\n    if (chartConfiguration && analyticsObject) {\n      const chartObject = getCharObject(analyticsObject, chartConfiguration);\n      if (chartObject) {\n        setTimeout(() => {\n          chart = Highcharts.chart(\"renderId\", chartObject);\n        }, 20);\n      }\n    }\n  }\n  function updateChartType(chartType, event) {\n    event.stopPropagation();\n    setCurrentChartType(chartType);\n    drawChart(data[\"_data\"], {\n      ...chartConfiguration,\n      type: chartType\n    });\n    setChartUpdate({\n      id: \"render-id-unique\",\n      type: chartType.toUpperCase\n    });\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-item-container\",\n    style: {\n      width: \"100%\"\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"renderId\",\n    className: \"chart-block\",\n    style: {\n      height: \"calc(\" + chartHeight + \"px-20px\",\n      width: \"100%\"\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"chart-type-list animated fadeInRight\"\n  }, chartTypes === null || chartTypes === void 0 ? void 0 : chartTypes.map((chartType, chartTypePosition) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: \"chart-type\" + chartTypePosition\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => updateChartType(chartType.type, e),\n      title: chartType.description,\n      className: currentChartType == chartType.type ? \"active-chart-type\" : \"\"\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: chartType.icon,\n      className: \"chart-option-icon\",\n      alt: \"\"\n    })));\n  })));\n}\nChartItemComponent.propTypes = {\n  chartHeight: PropTypes.string.isRequired\n};","import React, { Suspense } from \"react\";\nimport ChartItemComponent from \"../chart-item/chart-item-component\";\n//React.lazy(() => import('../chart-item/chart-item-component'));\nimport \"./chart-list-component.css\";\nexport default function ChartListComponent() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-list\"\n  }, /*#__PURE__*/React.createElement(Suspense, {\n    fallback: /*#__PURE__*/React.createElement(\"div\", null, \"Loading .....\")\n  }, /*#__PURE__*/React.createElement(ChartItemComponent, {\n    chartHeight: 2000\n  })));\n}","import i18n from \"@dhis2/d2-i18n\";\nimport { Button, Chip, Modal, ModalActions, ModalContent } from \"@dhis2/ui\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport ChartIcon from \"@material-ui/icons/Equalizer\";\nimport TableChartIcon from \"@material-ui/icons/TableChart\";\nimport { cloneDeep, find, get } from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport React, { Suspense, useEffect, useState } from \"react\";\nimport { useRecoilCallback, useRecoilValue, useRecoilValueLoadable, useResetRecoilState, useSetRecoilState } from \"recoil\";\nimport ChartAnalysis from \"./Components/ChartAnalysis\";\nimport { DataSourceState, DataState } from \"./state/data\";\nimport { LayoutState } from \"./state/layout\";\nimport { orgUnitSelectorOptionOnCell, OrgUnitState } from \"./state/orgUnit\";\nimport { cellPeriodOptionAtom, PeriodState } from \"./state/period\";\nimport { LowestOrgUnitLevel, OrgUnitLevels } from \"../../../../../../state\";\nimport { OrgUnitSelection } from \"../../../../../../models\";\nimport { getDataSourcesDisplayName } from \"../../../../../../utils\";\nimport ModalLoader from \"../../../../../Loaders/ModalLoader\";\nimport FullPageError from \"../../../../../Errors/FullPageError\";\nconst DictionaryAnalysis = /*#__PURE__*/React.lazy(() => import(\"./Components/DictionaryAnalysis\"));\nconst DimensionsSelector = /*#__PURE__*/React.lazy(() => import(\"./Components/DimensionsSelector\"));\nconst TableAnalysis = /*#__PURE__*/React.lazy(() => import(\"./Components/TableAnalysis\"));\nconst viewTypes = [{\n  displayName: i18n.t(\"Table\"),\n  name: \"table\",\n  icon: /*#__PURE__*/React.createElement(TableChartIcon, null),\n  component: TableAnalysis\n}, {\n  displayName: i18n.t(\"Chart\"),\n  name: \"chart\",\n  icon: /*#__PURE__*/React.createElement(ChartIcon, null),\n  component: ChartAnalysis\n}, {\n  displayName: i18n.t(\"Dictionary\"),\n  name: \"dictionary\",\n  icon: /*#__PURE__*/React.createElement(DescriptionIcon, null),\n  component: DictionaryAnalysis\n}];\nexport default function TableCellAnalysis({\n  onClose,\n  dataHolder,\n  orgUnit,\n  period\n}) {\n  const dataState = useRecoilValueLoadable(DataState);\n  const orgUnitLevels = useRecoilValue(OrgUnitLevels);\n  const [viewType, setViewType] = useState(viewTypes[0]);\n  const dataSources = dataHolder === null || dataHolder === void 0 ? void 0 : dataHolder.dataSources;\n  const SelectedView = viewType.component;\n  const resetPeriodOptionsCell = useResetRecoilState(cellPeriodOptionAtom);\n  const resetOrgUnitOptionCell = useSetRecoilState(orgUnitSelectorOptionOnCell);\n  const setStates = useRecoilCallback(({\n    set,\n    snapshot\n  }) => () => {\n    const orgUnitOptionValue = snapshot.getLoadable(orgUnitSelectorOptionOnCell).contents;\n    const lowestOrgUnitLevel = snapshot.getLoadable(LowestOrgUnitLevel).contents;\n    function orgUnitUpdateSelector() {\n      const orgUnitSelection = new OrgUnitSelection({\n        orgUnits: [orgUnit]\n      });\n      if (orgUnitOptionValue) {\n        const newOrgUnitSelection = cloneDeep(orgUnitSelection);\n        const currentOrgUnitLevel = get(orgUnitSelection, ['orgUnits', 0, 'level']);\n        if (currentOrgUnitLevel < lowestOrgUnitLevel.level) {\n          const orgUnitCurrentUserBelowLevels = find(orgUnitLevels, function (level) {\n            return level.level === currentOrgUnitLevel + 1;\n          });\n          newOrgUnitSelection['levels'] = [orgUnitCurrentUserBelowLevels.id];\n        } else {\n          return orgUnitSelection;\n        }\n        return newOrgUnitSelection;\n      } else {\n        return orgUnitSelection;\n      }\n    }\n    if (orgUnitOptionValue) {\n      set(LayoutState, {\n        column: [\"dx\"],\n        row: [\"ou\"],\n        filter: [\"pe\"]\n      });\n    }\n    set(DataSourceState, dataSources);\n    set(OrgUnitState, orgUnitUpdateSelector());\n    set(PeriodState, {\n      periods: [period]\n    });\n  }, [dataSources, orgUnit, orgUnitLevels, period]);\n  const resetStates = useRecoilCallback(({\n    reset\n  }) => () => {\n    reset(OrgUnitState);\n    reset(PeriodState);\n    reset(LayoutState);\n    reset(DataSourceState);\n  }, []);\n  useEffect(() => {\n    setStates();\n    return () => {\n      resetStates();\n      resetPeriodOptionsCell();\n      resetOrgUnitOptionCell(false);\n    };\n  }, [dataSources, orgUnit, period]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    className: \"large-modal\",\n    position: \"middle\",\n    onClose: onClose,\n    large: true\n  }, /*#__PURE__*/React.createElement(ModalContent, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      overflow: \"hidden\",\n      minHeight: 400\n    },\n    className: \"h-100 w-100 column\"\n  }, /*#__PURE__*/React.createElement(DimensionsSelector, null), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"pt-8\"\n  }, getDataSourcesDisplayName(dataSources)), /*#__PURE__*/React.createElement(Suspense, {\n    fallback: /*#__PURE__*/React.createElement(ModalLoader, null)\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      overflow: \"auto\",\n      margin: \"16px 0\",\n      height: \"100%\"\n    }\n  }, dataState.state === \"hasError\" && /*#__PURE__*/React.createElement(FullPageError, {\n    error: dataState.contents\n  }), dataState.state === \"loading\" && /*#__PURE__*/React.createElement(ModalLoader, null), dataState.state === \"hasValue\" && /*#__PURE__*/React.createElement(SelectedView, null))))), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      bottom: 16,\n      left: 16,\n      width: `calc(100% - 32px)`\n    },\n    className: \"row space-between align-items-end\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, viewTypes === null || viewTypes === void 0 ? void 0 : viewTypes.map(type => /*#__PURE__*/React.createElement(Chip, {\n    selected: (type === null || type === void 0 ? void 0 : type.name) === (viewType === null || viewType === void 0 ? void 0 : viewType.name),\n    onClick: () => setViewType(type),\n    key: type === null || type === void 0 ? void 0 : type.name,\n    icon: type === null || type === void 0 ? void 0 : type.icon\n  }, type === null || type === void 0 ? void 0 : type.displayName))), /*#__PURE__*/React.createElement(Button, {\n    onClick: onClose\n  }, i18n.t('Cancel')))));\n}\nTableCellAnalysis.propTypes = {\n  dataHolder: PropTypes.object.isRequired,\n  orgUnit: PropTypes.object.isRequired,\n  period: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired\n};","import React from \"react\";\nimport ChartListComponent from \"./Components/chart-list/chart-list-component\";\nexport default function ChartAnalysis() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column align-items-center center h-100\"\n  }, /*#__PURE__*/React.createElement(ChartListComponent, {\n    width: \"100%\"\n  }));\n}","import { colors } from \"@dhis2/ui\";\nimport PropTypes from \"prop-types\";\nimport React, { useMemo } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { LinkedCellSvg, SingleCellSvg } from \"../../../../../../index\";\nimport { ScorecardViewState } from \"../../../../../../../state\";\nimport { getIncreasingStatus } from \"../../../../../../../utils\";\nexport function SingleDataCell({\n  cellRef,\n  data,\n  color,\n  indicator\n}) {\n  var _useRecoilValue;\n  const {\n    arrows\n  } = (_useRecoilValue = useRecoilValue(ScorecardViewState(\"options\"))) !== null && _useRecoilValue !== void 0 ? _useRecoilValue : {};\n  const {\n    current,\n    previous\n  } = data !== null && data !== void 0 ? data : {};\n  const increasing = useMemo(() => {\n    const {\n      effectiveGap,\n      displayArrows\n    } = indicator !== null && indicator !== void 0 ? indicator : {};\n    if (arrows && displayArrows) {\n      return getIncreasingStatus(current, previous, effectiveGap);\n    }\n    return null;\n  }, [current, previous, arrows, indicator]);\n  return current ? /*#__PURE__*/React.createElement(SingleCellSvg, {\n    cellRef: cellRef,\n    status: increasing,\n    value: `${current !== null && current !== void 0 ? current : \"\"}`,\n    color: color\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 47,\n      width: \"100%\",\n      background: color\n    }\n  });\n}\nSingleDataCell.propTypes = {\n  data: PropTypes.object.isRequired,\n  indicator: PropTypes.any.isRequired,\n  color: PropTypes.string\n};\nexport function LinkedDataCell({\n  cellRef,\n  topData,\n  bottomData,\n  topColor,\n  bottomColor,\n  topIndicator,\n  bottomIndicator\n}) {\n  var _useRecoilValue2;\n  const {\n    current: topCurrent,\n    previous: topPrevious\n  } = topData !== null && topData !== void 0 ? topData : {};\n  const {\n    current: bottomCurrent,\n    previous: bottomPrevious\n  } = bottomData !== null && bottomData !== void 0 ? bottomData : {};\n  const {\n    arrows\n  } = (_useRecoilValue2 = useRecoilValue(ScorecardViewState(\"options\"))) !== null && _useRecoilValue2 !== void 0 ? _useRecoilValue2 : {};\n  const topIncreasing = useMemo(() => {\n    const {\n      effectiveGap,\n      displayArrows\n    } = topIndicator !== null && topIndicator !== void 0 ? topIndicator : {};\n    if (arrows && displayArrows) {\n      return getIncreasingStatus(topCurrent, topPrevious, effectiveGap);\n    }\n    return null;\n  }, [topCurrent, topPrevious, arrows, topIndicator]);\n  const bottomIncreasing = useMemo(() => {\n    const {\n      effectiveGap,\n      displayArrows\n    } = bottomIndicator !== null && bottomIndicator !== void 0 ? bottomIndicator : {};\n    if (arrows && displayArrows) {\n      return getIncreasingStatus(bottomCurrent, bottomPrevious, effectiveGap);\n    }\n    return null;\n  }, [bottomCurrent, bottomPrevious, arrows, bottomIndicator]);\n  return topCurrent || bottomCurrent ? /*#__PURE__*/React.createElement(LinkedCellSvg, {\n    cellRef: cellRef,\n    topValue: topCurrent,\n    topColor: topColor,\n    bottomValue: bottomCurrent,\n    bottomColor: bottomColor,\n    topStatus: topIncreasing,\n    bottomStatus: bottomIncreasing\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"100%\",\n      width: \"100%\",\n      background: colors.grey100\n    }\n  });\n}\nLinkedDataCell.propTypes = {\n  bottomData: PropTypes.object.isRequired,\n  bottomIndicator: PropTypes.any.isRequired,\n  topData: PropTypes.object.isRequired,\n  topIndicator: PropTypes.any.isRequired,\n  bottomColor: PropTypes.string,\n  topColor: PropTypes.string\n};","// extracted by mini-css-extract-plugin\nexport default {\"furtherAnalysisMenu\":\"FurtherAnalysisMenu_furtherAnalysisMenu__NHa6A\"};","import i18n from \"@dhis2/d2-i18n\";\nimport { IconDimensionOrgUnit16, IconVisualizationColumnStacked24, IconVisualizationLine24, Menu, MenuItem, Popover } from \"@dhis2/ui\";\nimport { Period } from \"@iapps/period-utilities\";\nimport PropTypes from 'prop-types';\nimport React, { useState } from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { orgUnitSelectorOptionOnCell } from \"../../../TableCellAnalysis/state/orgUnit\";\nimport { cellPeriodOptionSelector } from \"../../../TableCellAnalysis/state/period\";\nimport styles from \"./FurtherAnalysisMenu.module.css\";\nexport default function FurtherAnalysisMenu({\n  stateActionRef,\n  setStateActionRef,\n  setAnalysisOpen\n}) {\n  const [showSubMenu, setShowSubMenu] = useState(false);\n  const setPeriodOptionValueStates = useSetRecoilState(cellPeriodOptionSelector);\n  const setOrgUnitOptionValueStates = useSetRecoilState(orgUnitSelectorOptionOnCell);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Popover, {\n    onClickOutside: () => setStateActionRef(undefined),\n    placement: \"bottom-start\",\n    reference: stateActionRef\n  }, /*#__PURE__*/React.createElement(Menu, null, /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: () => {\n      setStateActionRef(undefined);\n      setAnalysisOpen(true);\n    },\n    label: i18n.t(\"Further Analysis\"),\n    icon: /*#__PURE__*/React.createElement(IconVisualizationColumnStacked24, null)\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: () => {\n      setOrgUnitOptionValueStates(true);\n      setStateActionRef(undefined);\n      setAnalysisOpen(true);\n    },\n    label: i18n.t(\"Lower Organisation Unit Levels\"),\n    icon: /*#__PURE__*/React.createElement(IconDimensionOrgUnit16, null)\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    showSubMenu: showSubMenu,\n    toggleSubMenu: () => {\n      setShowSubMenu(prevState => !prevState);\n    },\n    label: i18n.t(\"Trend Analysis \"),\n    icon: /*#__PURE__*/React.createElement(IconVisualizationLine24, null),\n    className: styles['furtherAnalysisMenu']\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: () => {\n      setStateActionRef(undefined);\n      setPeriodOptionValueStates([new Period().setPreferences({\n        allowFuturePeriods: true\n      }).getById(\"LAST_3_MONTHS\")]);\n      setAnalysisOpen(true);\n    },\n    label: i18n.t(\"Last 3 Months\"),\n    icon: /*#__PURE__*/React.createElement(IconVisualizationColumnStacked24, null),\n    className: styles['furtherAnalysisMenu']\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: () => {\n      setStateActionRef(undefined);\n      setPeriodOptionValueStates([new Period().setPreferences({\n        allowFuturePeriods: true\n      }).getById(\"LAST_6_MONTHS\")]);\n      setAnalysisOpen(true);\n    },\n    label: i18n.t(\"Last 6 Months\"),\n    icon: /*#__PURE__*/React.createElement(IconVisualizationColumnStacked24, null),\n    className: styles['furtherAnalysisMenu']\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: () => {\n      setStateActionRef(undefined);\n      setPeriodOptionValueStates([new Period().setPreferences({\n        allowFuturePeriods: true\n      }).getById(\"LAST_12_MONTHS\")]);\n      setAnalysisOpen(true);\n    },\n    label: i18n.t(\"Last 12 Months\"),\n    icon: /*#__PURE__*/React.createElement(IconVisualizationColumnStacked24, null),\n    className: styles['furtherAnalysisMenu']\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: () => {\n      setStateActionRef(undefined);\n      setPeriodOptionValueStates([new Period().setPreferences({\n        allowFuturePeriods: true\n      }).getById(\"LAST_4_QUARTERS\")]);\n      setAnalysisOpen(true);\n    },\n    label: i18n.t(\"Last 4 Quarters\"),\n    icon: /*#__PURE__*/React.createElement(IconVisualizationColumnStacked24, null),\n    className: styles['furtherAnalysisMenu']\n  }), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: () => {\n      setStateActionRef(undefined);\n      setPeriodOptionValueStates([new Period().setPreferences({\n        allowFuturePeriods: true\n      }).getById(\"LAST_5_YEARS\")]);\n      setAnalysisOpen(true);\n    },\n    label: i18n.t(\"Last 5 Years\"),\n    icon: /*#__PURE__*/React.createElement(IconVisualizationColumnStacked24, null),\n    className: styles['furtherAnalysisMenu']\n  })))));\n}\nFurtherAnalysisMenu.propTypes = {\n  setAnalysisOpen: PropTypes.func,\n  setStateActionRef: PropTypes.func,\n  stateActionRef: PropTypes.object\n};","import PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\nimport { useRecoilValue, useResetRecoilState } from \"recoil\";\nimport TableCellAnalysis from \"../TableCellAnalysis\";\nimport { orgUnitOptionOnCell } from \"../TableCellAnalysis/state/orgUnit\";\nimport { cellPeriodOptionAtom } from \"../TableCellAnalysis/state/period\";\nimport { LinkedDataCell, SingleDataCell } from \"./Components/DataCells\";\nimport FurtherAnalysisMenu from \"./Components/FurtherAnalysisMenu\";\nimport LoadingCell from \"./Components/LoadingCell\";\nimport { OrgUnitLevels, ScorecardViewState } from \"../../../../../../state\";\nimport { getLegend } from \"../../../../../../utils\";\nimport { ScorecardDataEngine } from \"../../../../../../models\";\nfunction DataContainer({\n  dataSources,\n  orgUnit,\n  period,\n  dataEngine\n}) {\n  var _getLegend, _getLegend2;\n  const orgUnitLevels = useRecoilValue(OrgUnitLevels);\n  const legendDefinitions = useRecoilValue(ScorecardViewState(\"legendDefinitions\"));\n  const {\n    id: orgUnitId,\n    level: dataOrgUnitLevel\n  } = orgUnit !== null && orgUnit !== void 0 ? orgUnit : {};\n  const {\n    id: periodId\n  } = period !== null && period !== void 0 ? period : {};\n  const [analysisOpen, setAnalysisOpen] = useState(false);\n  const [topData, setTopData] = useState();\n  const [bottomData, setBottomData] = useState();\n  const [stateActionRef, setStateActionRef] = useState(null);\n  const resetPeriodsOptionSelection = useResetRecoilState(cellPeriodOptionAtom);\n  const resetOrgUnitOptionSelection = useResetRecoilState(orgUnitOptionOnCell);\n  const [tableCellRef, setTableRef] = useState();\n  const [top, bottom] = dataSources !== null && dataSources !== void 0 ? dataSources : [];\n  const {\n    color: topColor\n  } = (_getLegend = getLegend(topData === null || topData === void 0 ? void 0 : topData.current, top === null || top === void 0 ? void 0 : top.legends, {\n    max: top === null || top === void 0 ? void 0 : top.weight,\n    dataOrgUnitLevel,\n    orgUnitLevels,\n    legendDefinitions,\n    period: periodId,\n    orgUnit: orgUnitId,\n    specificTargets: top === null || top === void 0 ? void 0 : top.specificTargets\n  })) !== null && _getLegend !== void 0 ? _getLegend : {};\n  const {\n    color: bottomColor\n  } = (_getLegend2 = getLegend(bottomData === null || bottomData === void 0 ? void 0 : bottomData.current, bottom === null || bottom === void 0 ? void 0 : bottom.legends, {\n    max: bottom === null || bottom === void 0 ? void 0 : bottom.weight,\n    dataOrgUnitLevel,\n    orgUnitLevels,\n    legendDefinitions,\n    period: periodId,\n    orgUnit: orgUnitId,\n    specificTargets: bottom === null || bottom === void 0 ? void 0 : bottom.specificTargets\n  })) !== null && _getLegend2 !== void 0 ? _getLegend2 : {};\n  const loading = false;\n  const topKey = `${top.id}_${orgUnitId}_${periodId}`;\n  const bottomKey = `${bottom === null || bottom === void 0 ? void 0 : bottom.id}_${orgUnitId}_${periodId}`;\n  useEffect(() => {\n    const topSub = dataEngine.get(topKey).subscribe(data => {\n      setTopData(data);\n    });\n    const bottomSub = dataEngine.get(bottomKey).subscribe(setBottomData);\n    return () => {\n      topSub.unsubscribe();\n      bottomSub.unsubscribe();\n      resetPeriodsOptionSelection();\n      resetOrgUnitOptionSelection();\n    };\n  }, [orgUnitId, periodId, top, bottom]);\n  return /*#__PURE__*/React.createElement(\"td\", {\n    ref: setTableRef,\n    className: \"data-cell\",\n    align: \"center\",\n    \"data-test\": \"data-cell\",\n    style: {\n      minWidth: 100\n    },\n    onClick: event => {\n      event.stopPropagation();\n      setAnalysisOpen(true);\n    },\n    onContextMenu: e => {\n      e.preventDefault();\n      setStateActionRef(e.target);\n    }\n  }, loading ? /*#__PURE__*/React.createElement(LoadingCell, null) : (dataSources === null || dataSources === void 0 ? void 0 : dataSources.length) > 1 ? /*#__PURE__*/React.createElement(LinkedDataCell, {\n    cellRef: tableCellRef,\n    topIndicator: top,\n    bottomIndicator: bottom,\n    bottomData: bottomData,\n    topData: topData,\n    bottomColor: bottomColor,\n    topColor: topColor\n  }) : /*#__PURE__*/React.createElement(SingleDataCell, {\n    cellRef: tableCellRef,\n    indicator: top,\n    data: topData,\n    color: topColor\n  }), analysisOpen && /*#__PURE__*/React.createElement(TableCellAnalysis, {\n    orgUnit: orgUnit,\n    period: period,\n    dataHolder: {\n      dataSources\n    },\n    onClose: (_, event) => {\n      event.stopPropagation();\n      setAnalysisOpen(false);\n    }\n  }), stateActionRef && /*#__PURE__*/React.createElement(FurtherAnalysisMenu, {\n    orgUnit: orgUnit,\n    period: period,\n    dataSources: dataSources,\n    analysisOpen: analysisOpen,\n    setAnalysisOpen: setAnalysisOpen,\n    stateActionRef: stateActionRef,\n    setStateActionRef: setStateActionRef\n  }));\n}\nexport default DataContainer;\nDataContainer.propTypes = {\n  dataEngine: PropTypes.instanceOf(ScorecardDataEngine).isRequired,\n  dataSources: PropTypes.array.isRequired,\n  orgUnit: PropTypes.object.isRequired,\n  period: PropTypes.object.isRequired\n};","import { CircularLoader, DataTableCell, DataTableRow, LinearLoader } from \"@dhis2/ui\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { useMediaQuery } from \"../../../../../hooks\";\nimport { ScorecardDataLoadingState, ScorecardTableConfigState } from \"../../../../../state\";\nimport { ScorecardDataEngine } from \"../../../../../models\";\nexport default function TableLoader() {\n  const {\n    width: screenWidth\n  } = useMediaQuery();\n  return /*#__PURE__*/React.createElement(DataTableRow, null, /*#__PURE__*/React.createElement(DataTableCell, {\n    width: `${screenWidth}px`,\n    align: \"center\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row center align-items-center\",\n    style: {\n      height: 400,\n      width: \"100%\"\n    }\n  }, /*#__PURE__*/React.createElement(CircularLoader, {\n    small: true\n  }))));\n}\nexport function TableLinearLoader({\n  dataEngine,\n  orgUnits\n}) {\n  const {\n    width: screenWidth\n  } = useMediaQuery();\n  const {\n    colSpan\n  } = useRecoilValue(ScorecardTableConfigState(orgUnits));\n  const loading = useRecoilValue(ScorecardDataLoadingState(orgUnits));\n  const [progress, setProgress] = useState(0);\n  useEffect(() => {\n    const subscription = dataEngine.getProgress().subscribe(setProgress);\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [orgUnits, dataEngine]);\n  return loading ? /*#__PURE__*/React.createElement(DataTableRow, null, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: colSpan\n  }, /*#__PURE__*/React.createElement(LinearLoader, {\n    width: `${screenWidth}px`,\n    amount: progress,\n    margin: 0\n  }))) : null;\n}\nTableLinearLoader.propTypes = {\n  dataEngine: PropTypes.instanceOf(ScorecardDataEngine).isRequired,\n  orgUnits: PropTypes.array.isRequired\n};","import { colors } from \"@dhis2/ui\";\nimport { debounce } from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport React, { useRef } from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport { useSetRecoilState } from \"recoil\";\nimport { ScorecardTableOrientationState } from \"../../../../../../../state\";\nimport { Orientation } from \"../../../../../../../constants\";\nexport default function DroppableCell({\n  accept,\n  children\n}) {\n  const setOrientation = useSetRecoilState(ScorecardTableOrientationState);\n  const onDrop = useRef(debounce(setOrientation));\n  const [{\n    canDrop\n  }, dropRef] = useDrop({\n    accept,\n    drop: () => {\n      onDrop.current(prevState => {\n        return prevState === Orientation.ORG_UNIT_VS_DATA ? Orientation.DATA_VS_ORG_UNIT : Orientation.ORG_UNIT_VS_DATA;\n      });\n      return undefined;\n    },\n    collect: monitor => ({\n      isOver: !!monitor.isOver(),\n      canDrop: !!monitor.canDrop()\n    })\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: dropRef,\n    className: \"column center align-items-center\",\n    style: {\n      border: canDrop && `2px dashed ${colors.grey700}`,\n      background: canDrop && `${colors.grey100}`,\n      height: canDrop ? 47 : \"100%\",\n      width: \"100%\"\n    }\n  }, children);\n}\nDroppableCell.propTypes = {\n  accept: PropTypes.arrayOf(PropTypes.string).isRequired,\n  children: PropTypes.node.isRequired\n};","function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport { colors } from \"@dhis2/ui\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport { DraggableItems } from \"../../../../../../../constants\";\nexport default function DraggableCell({\n  label,\n  type,\n  style,\n  ...props\n}) {\n  const [{\n    isDragging\n  }, dragRef] = useDrag(() => ({\n    type,\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, props, {\n    className: \"column center\",\n    style: {\n      background: isDragging && (colors === null || colors === void 0 ? void 0 : colors.grey400),\n      cursor: \"move\",\n      opacity: isDragging ? 0.5 : 1,\n      height: \"100%\",\n      width: \"100%\",\n      padding: \"0 12px\",\n      ...style\n    },\n    ref: dragRef\n  }), label);\n}\nDraggableCell.propTypes = {\n  label: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(Object.values(DraggableItems)).isRequired,\n  style: PropTypes.object\n};","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport DraggableCell from \"./DraggableCell\";\nimport { ScorecardViewState } from \"../../../../../../../state\";\nimport { DraggableItems } from \"../../../../../../../constants\";\nexport default function OrgUnitContainer({\n  orgUnit\n}) {\n  const {\n    showHierarchy\n  } = useRecoilValue(ScorecardViewState(\"options\"));\n  return /*#__PURE__*/React.createElement(DraggableCell, {\n    label: showHierarchy ? orgUnit.hierarchy : orgUnit.displayName,\n    type: DraggableItems.ORG_UNIT_ROW,\n    style: {\n      textAlign: \"start\"\n    }\n  });\n}\nOrgUnitContainer.propTypes = {\n  orgUnit: PropTypes.object.isRequired\n};","import i18n from \"@dhis2/d2-i18n\";\nimport { DataTableCell, DataTableRow, Tooltip } from \"@dhis2/ui\";\nimport PropTypes from \"prop-types\";\nimport React, { Suspense, useCallback, useEffect, useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport ScorecardTable from \"../../../index\";\nimport classes from '../../../scorecardTable.module.css';\nimport DataContainer from \"../../TableDataContainer\";\nimport TableLoader from \"../../TableLoader\";\nimport AverageCell from \"./AverageCell\";\nimport DroppableCell from \"./DroppableCell\";\nimport OrgUnitContainer from \"./OrgUnitContainer\";\nimport { PeriodResolverState, ScorecardDataLoadingState, ScorecardViewState } from \"../../../../../../../state\";\nimport { AverageDisplayType, DraggableItems } from \"../../../../../../../constants\";\nimport { ScorecardDataEngine } from \"../../../../../../../models\";\nexport default function ChildOrgUnitRow({\n  orgUnit,\n  expandedOrgUnit,\n  onExpand,\n  overallAverage,\n  dataEngine,\n  orgUnits,\n  index\n}) {\n  var _useRecoilValue, _useRecoilValue2;\n  const {\n    emptyRows,\n    averageColumn,\n    averageDisplayType,\n    itemNumber\n  } = useRecoilValue(ScorecardViewState(\"options\"));\n  const [isEmpty, setIsEmpty] = useState(false);\n  const [average, setAverage] = useState();\n  const {\n    id\n  } = orgUnit !== null && orgUnit !== void 0 ? orgUnit : {};\n  const {\n    dataGroups\n  } = (_useRecoilValue = useRecoilValue(ScorecardViewState(\"dataSelection\"))) !== null && _useRecoilValue !== void 0 ? _useRecoilValue : {};\n  const loading = useRecoilValue(ScorecardDataLoadingState(orgUnits));\n  const periods = (_useRecoilValue2 = useRecoilValue(PeriodResolverState)) !== null && _useRecoilValue2 !== void 0 ? _useRecoilValue2 : [];\n  function subscribe() {\n    if (loading !== undefined && !loading) {\n      const rowAverage = dataEngine.getOrgUnitAverage(id).subscribe(setAverage);\n      const rowStatusSub = dataEngine.isRowEmpty(id).subscribe(setIsEmpty);\n      return () => {\n        rowAverage.unsubscribe();\n        rowStatusSub.unsubscribe();\n      };\n    }\n  }\n  const onExpandClick = useCallback(() => {\n    if (id === expandedOrgUnit) {\n      onExpand(undefined);\n    } else {\n      onExpand(id);\n    }\n  }, [expandedOrgUnit, id, onExpand]);\n  useEffect(subscribe, [orgUnit, loading, id, dataEngine]);\n  const Component = (emptyRows || !isEmpty) && /*#__PURE__*/React.createElement(DataTableRow, {\n    dataTest: \"orgUnit-children-table-column-cell\",\n    className: classes[\"child-table-row\"],\n    expanded: id === expandedOrgUnit,\n    onExpandToggle: onExpandClick,\n    expandableContent: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-16\"\n    }, /*#__PURE__*/React.createElement(Suspense, {\n      fallback: /*#__PURE__*/React.createElement(TableLoader, null)\n    }, /*#__PURE__*/React.createElement(ScorecardTable, {\n      nested: true,\n      orgUnits: [id]\n    }))),\n    key: id,\n    bordered: true\n  }, itemNumber && /*#__PURE__*/React.createElement(DataTableCell, {\n    onClick: onExpandClick,\n    width: \"50px\",\n    fixed: true,\n    left: \"50px\"\n  }, index + 1), /*#__PURE__*/React.createElement(DataTableCell, {\n    dataTest: \"orgUnit-parent-table-column-cell\",\n    fixed: true,\n    left: itemNumber ? \"100px\" : \"50px\",\n    width: \"30%\",\n    onClick: onExpandClick\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    content: i18n.t(\"Drag to column headers to change layout\")\n  }, /*#__PURE__*/React.createElement(DroppableCell, {\n    accept: [DraggableItems.DATA_COLUMN]\n  }, /*#__PURE__*/React.createElement(OrgUnitContainer, {\n    orgUnit: orgUnit\n  })))), dataGroups === null || dataGroups === void 0 ? void 0 : dataGroups.map(({\n    id: groupId,\n    dataHolders\n  }) => dataHolders === null || dataHolders === void 0 ? void 0 : dataHolders.map(({\n    id: holderId,\n    dataSources\n  }) => periods === null || periods === void 0 ? void 0 : periods.map(period => /*#__PURE__*/React.createElement(DataContainer, {\n    key: `${groupId}-${holderId}-${period.id}`,\n    dataEngine: dataEngine,\n    orgUnit: orgUnit,\n    dataSources: dataSources,\n    period: period\n  })))), averageColumn && /*#__PURE__*/React.createElement(AverageCell, {\n    bold: true,\n    value: average\n  }));\n  if (averageDisplayType === AverageDisplayType.ALL) {\n    return Component;\n  }\n  if (averageDisplayType === AverageDisplayType.BELOW_AVERAGE && overallAverage > average) {\n    return Component;\n  }\n  if (averageDisplayType === AverageDisplayType.ABOVE_AVERAGE && overallAverage <= average) {\n    return Component;\n  }\n  return null;\n}\nChildOrgUnitRow.propTypes = {\n  dataEngine: PropTypes.instanceOf(ScorecardDataEngine).isRequired,\n  index: PropTypes.number.isRequired,\n  orgUnit: PropTypes.object.isRequired,\n  orgUnits: PropTypes.array.isRequired,\n  overallAverage: PropTypes.number.isRequired,\n  onExpand: PropTypes.func.isRequired,\n  expandedOrgUnit: PropTypes.string\n};","import { DataTableCell, DataTableRow } from \"@dhis2/ui\";\nimport { head } from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport classes from \"../../../scorecardTable.module.css\";\nimport DataContainer from \"../../TableDataContainer\";\nimport AverageCell from \"./AverageCell\";\nimport DraggableCell from \"./DraggableCell\";\nimport DroppableCell from \"./DroppableCell\";\nimport { PeriodResolverState, ScorecardOrgUnitState, ScorecardViewState } from \"../../../../../../../state\";\nimport { AverageDisplayType, DraggableItems } from \"../../../../../../../constants\";\nimport { getDataSourcesDisplayName } from \"../../../../../../../utils\";\nimport { ScorecardDataEngine } from \"../../../../../../../models\";\nexport default function DataSourceRow({\n  orgUnits,\n  dataSources,\n  overallAverage,\n  dataEngine,\n  index\n}) {\n  var _useRecoilValue, _ref;\n  const {\n    emptyRows,\n    averageColumn,\n    averageDisplayType,\n    itemNumber\n  } = useRecoilValue(ScorecardViewState(\"options\"));\n  const [isEmpty, setIsEmpty] = useState(false);\n  const [average, setAverage] = useState();\n  const {\n    filteredOrgUnits,\n    childrenOrgUnits\n  } = useRecoilValue(ScorecardOrgUnitState(orgUnits));\n  const periods = (_useRecoilValue = useRecoilValue(PeriodResolverState)) !== null && _useRecoilValue !== void 0 ? _useRecoilValue : [];\n  useEffect(() => {\n    const rowStatusSub = dataEngine.isDataSourcesRowEmpty(dataSources === null || dataSources === void 0 ? void 0 : dataSources.map(({\n      id\n    }) => id)).subscribe(setIsEmpty);\n    const rowAverageSub = dataEngine.getDataSourceAverage(dataSources === null || dataSources === void 0 ? void 0 : dataSources.map(({\n      id\n    }) => id)).subscribe(setAverage);\n    return () => {\n      rowStatusSub.unsubscribe();\n      rowAverageSub.unsubscribe();\n    };\n  }, [dataSources]);\n  const Component = /*#__PURE__*/React.createElement(DataTableRow, {\n    bordered: true,\n    className: classes[\"average-row\"]\n  }, /*#__PURE__*/React.createElement(DataTableCell, {\n    className: \"jsx-1369417008\",\n    fixed: true,\n    left: \"0\",\n    width: \"50px\"\n  }), itemNumber && /*#__PURE__*/React.createElement(DataTableCell, {\n    fixed: true,\n    left: \"50px\",\n    width: \"50px\"\n  }, index + 1), /*#__PURE__*/React.createElement(DataTableCell, {\n    fixed: true,\n    left: itemNumber ? \"100px\" : \"50px\",\n    className: \"scorecard-org-unit-cell\"\n  }, /*#__PURE__*/React.createElement(DroppableCell, {\n    accept: [DraggableItems.ORG_UNIT_COLUMN]\n  }, /*#__PURE__*/React.createElement(DraggableCell, {\n    label: getDataSourcesDisplayName(dataSources),\n    type: DraggableItems.DATA_ROW\n  }))), (_ref = [...filteredOrgUnits, ...childrenOrgUnits]) === null || _ref === void 0 ? void 0 : _ref.map(orgUnit => periods === null || periods === void 0 ? void 0 : periods.map(period => {\n    var _head;\n    return /*#__PURE__*/React.createElement(\"td\", {\n      className: \"data-cell\",\n      align: \"center\",\n      key: `${orgUnit === null || orgUnit === void 0 ? void 0 : orgUnit.id}-${(_head = head(dataSources)) === null || _head === void 0 ? void 0 : _head.id}-${period === null || period === void 0 ? void 0 : period.id}`\n    }, /*#__PURE__*/React.createElement(DataContainer, {\n      dataEngine: dataEngine,\n      orgUnit: orgUnit,\n      dataSources: dataSources,\n      period: period\n    }));\n  })), averageColumn && /*#__PURE__*/React.createElement(AverageCell, {\n    dataSources: dataSources,\n    bold: true,\n    value: average\n  }));\n  if (averageDisplayType === AverageDisplayType.ALL) {\n    return (emptyRows || !isEmpty) && Component;\n  }\n  if (averageDisplayType === AverageDisplayType.BELOW_AVERAGE && overallAverage > average) {\n    return (emptyRows || !isEmpty) && Component;\n  }\n  if (averageDisplayType === AverageDisplayType.ABOVE_AVERAGE && overallAverage <= average) {\n    return (emptyRows || !isEmpty) && Component;\n  }\n  return null;\n}\nDataSourceRow.propTypes = {\n  dataEngine: PropTypes.instanceOf(ScorecardDataEngine).isRequired,\n  dataSources: PropTypes.arrayOf(PropTypes.object).isRequired,\n  index: PropTypes.number.isRequired,\n  orgUnits: PropTypes.arrayOf(PropTypes.object).isRequired,\n  overallAverage: PropTypes.number.isRequired\n};","import i18n from \"@dhis2/d2-i18n\";\nimport { DataTableCell, DataTableRow, Tooltip } from \"@dhis2/ui\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport classes from \"../../../scorecardTable.module.css\";\nimport DataContainer from \"../../TableDataContainer\";\nimport AverageCell from \"./AverageCell\";\nimport DroppableCell from \"./DroppableCell\";\nimport OrgUnitContainer from \"./OrgUnitContainer\";\nimport { PeriodResolverState, ScorecardDataLoadingState, ScorecardViewState } from \"../../../../../../../state\";\nimport { AverageDisplayType, DraggableItems } from \"../../../../../../../constants\";\nimport { ScorecardDataEngine } from \"../../../../../../../models\";\nexport default function ParentOrgUnitRow({\n  orgUnit,\n  overallAverage,\n  dataEngine,\n  orgUnits,\n  index\n}) {\n  var _useRecoilValue, _useRecoilValue2;\n  const {\n    emptyRows,\n    averageColumn,\n    averageDisplayType,\n    itemNumber\n  } = useRecoilValue(ScorecardViewState(\"options\"));\n  const [isEmpty, setIsEmpty] = useState(false);\n  const [average, setAverage] = useState();\n  const {\n    id\n  } = orgUnit !== null && orgUnit !== void 0 ? orgUnit : {};\n  const {\n    dataGroups\n  } = (_useRecoilValue = useRecoilValue(ScorecardViewState(\"dataSelection\"))) !== null && _useRecoilValue !== void 0 ? _useRecoilValue : {};\n  const loading = useRecoilValue(ScorecardDataLoadingState(orgUnits));\n  const periods = (_useRecoilValue2 = useRecoilValue(PeriodResolverState)) !== null && _useRecoilValue2 !== void 0 ? _useRecoilValue2 : [];\n  function subscribeToAverage() {\n    if (loading !== undefined && !loading) {\n      const rowAverage = dataEngine.getOrgUnitAverage(id).subscribe(setAverage);\n      const rowStatusSub = dataEngine.isRowEmpty(id).subscribe(setIsEmpty);\n      return () => {\n        rowAverage.unsubscribe();\n        rowStatusSub.unsubscribe();\n      };\n    }\n  }\n  useEffect(subscribeToAverage, [orgUnit, loading, id]);\n  const Component = (emptyRows || !isEmpty) && /*#__PURE__*/React.createElement(DataTableRow, {\n    className: classes[\"parent-table-row\"],\n    key: id,\n    bordered: true\n  }, /*#__PURE__*/React.createElement(DataTableCell, {\n    fixed: true,\n    left: \"0\",\n    width: \"50px\"\n  }), itemNumber && /*#__PURE__*/React.createElement(DataTableCell, {\n    width: \"50px\",\n    fixed: true,\n    left: \"50px\"\n  }, index + 1), /*#__PURE__*/React.createElement(DataTableCell, {\n    dataTest: \"orgUnit-parent-table-column-cell\",\n    fixed: true,\n    left: itemNumber ? \"100px\" : \"50px\",\n    width: \"30%\",\n    className: \"scorecard-org-unit-cell parent-org-unit-cell\"\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    content: i18n.t(\"Drag to the column headers to change layout\")\n  }, /*#__PURE__*/React.createElement(DroppableCell, {\n    accept: [DraggableItems.DATA_COLUMN]\n  }, /*#__PURE__*/React.createElement(OrgUnitContainer, {\n    orgUnit: orgUnit\n  })))), dataGroups === null || dataGroups === void 0 ? void 0 : dataGroups.map(({\n    id: groupId,\n    dataHolders\n  }) => dataHolders === null || dataHolders === void 0 ? void 0 : dataHolders.map(({\n    id: holderId,\n    dataSources\n  }) => periods === null || periods === void 0 ? void 0 : periods.map(period => /*#__PURE__*/React.createElement(DataContainer, {\n    key: `${groupId}-${holderId}-${period.id}`,\n    dataEngine: dataEngine,\n    orgUnit: orgUnit,\n    dataSources: dataSources,\n    period: period\n  })))), averageColumn && /*#__PURE__*/React.createElement(AverageCell, {\n    bold: true,\n    value: average\n  }));\n  if (averageDisplayType === AverageDisplayType.ALL) {\n    return Component;\n  }\n  if (averageDisplayType === AverageDisplayType.BELOW_AVERAGE && overallAverage > average) {\n    return Component;\n  }\n  if (averageDisplayType === AverageDisplayType.ABOVE_AVERAGE && overallAverage <= average) {\n    return Component;\n  }\n  return null;\n}\nParentOrgUnitRow.propTypes = {\n  dataEngine: PropTypes.instanceOf(ScorecardDataEngine).isRequired,\n  index: PropTypes.number.isRequired,\n  orgUnit: PropTypes.object.isRequired,\n  orgUnits: PropTypes.array.isRequired,\n  overallAverage: PropTypes.number.isRequired\n};","import useTableDataSources from \"./useTableDataSources\";\nimport useTableLoadingState from \"./useTableLoadingState\";\nimport useTableOrgUnits from \"./useTableOrgUnits\";\nexport default function useTableConfig(dataEngine, orgUnits, nested) {\n  const {\n    loading: orgUnitLoading\n  } = useTableOrgUnits(dataEngine, orgUnits, nested);\n  const {\n    loading: dataSourcesLoading\n  } = useTableDataSources(dataEngine, orgUnits);\n  useTableLoadingState(dataEngine, orgUnits);\n  return {\n    loading: orgUnitLoading || dataSourcesLoading\n  };\n}","import { useDataEngine } from \"@dhis2/app-runtime\";\nimport { isEmpty } from \"lodash\";\nimport { useEffect, useState } from \"react\";\nimport { useRecoilCallback, useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { PeriodResolverState, ScorecardNameSort, ScorecardOrgUnitState, ScorecardTableOrientationState, ScorecardTableSortState, ScorecardViewState } from \"../../../../../state\";\nimport { searchOrganisationUnit } from \"../../../../../hooks\";\nimport { Orientation, TableSort } from \"../../../../../constants\";\nimport { sortOrgUnitsBasedOnData, sortOrgUnitsBasedOnNames } from \"../../../../../utils\";\nexport default function useTableOrgUnits(dataEngine, orgUnits, nested) {\n  const [loading, setLoading] = useState(false);\n  const engine = useDataEngine();\n  const setOrgUnits = useSetRecoilState(ScorecardOrgUnitState(orgUnits));\n  const searchKeyword = useRecoilValue(ScorecardViewState(\"orgUnitSearchKeyword\"));\n  const {\n    orgUnit: sort\n  } = useRecoilValue(ScorecardNameSort(orgUnits));\n  const dataSort = useRecoilValue(ScorecardTableSortState(orgUnits));\n  const periods = useRecoilValue(PeriodResolverState);\n  const orientation = useRecoilValue(ScorecardTableOrientationState);\n  const [orgUnitSort, setOrgUnitSort] = useState();\n  const setDefaults = useRecoilCallback(({\n    reset\n  }) => () => {\n    reset(ScorecardOrgUnitState(orgUnits));\n  });\n  useEffect(() => {\n    async function search() {\n      const searchedOrgUnits = await searchOrganisationUnit(searchKeyword, engine);\n      setOrgUnits(prevOrgUnits => ({\n        ...prevOrgUnits,\n        filteredOrgUnits: searchedOrgUnits,\n        childrenOrgUnits: []\n      }));\n    }\n    if (!isEmpty(searchKeyword) && !nested) {\n      setLoading(true);\n      search().catch(e => console.error(e)).finally(() => setLoading(false));\n    } else {\n      setDefaults();\n    }\n  }, [searchKeyword]);\n  useEffect(() => {\n    function setDataSort() {\n      if (orientation === Orientation.ORG_UNIT_VS_DATA) {\n        if (dataSort.type === \"period\") {\n          var _dataSort$name;\n          const [dx, pe] = (_dataSort$name = dataSort.name) === null || _dataSort$name === void 0 ? void 0 : _dataSort$name.split(\"-\");\n          dataEngine.sortOrgUnitsByDataAndPeriod({\n            dataSource: dx,\n            period: pe,\n            sortType: dataSort === null || dataSort === void 0 ? void 0 : dataSort.direction\n          }).subscribe(setOrgUnitSort);\n        }\n        if (dataSort.type === \"data\") {\n          const dx = dataSort === null || dataSort === void 0 ? void 0 : dataSort.name;\n          dataEngine.sortOrgUnitsByData({\n            dataSource: dx,\n            periods: periods === null || periods === void 0 ? void 0 : periods.map(({\n              id\n            }) => id),\n            sortType: dataSort === null || dataSort === void 0 ? void 0 : dataSort.direction\n          }).subscribe(setOrgUnitSort);\n        }\n      }\n    }\n    if (dataSort) {\n      setDataSort();\n    }\n  }, [sort, dataSort, orientation, dataEngine, periods]);\n  useEffect(() => {\n    function sortOrgUnits() {\n      if (!isEmpty(orgUnitSort)) {\n        setOrgUnits(({\n          childrenOrgUnits,\n          filteredOrgUnits\n        }) => {\n          const {\n            parentOrgUnits,\n            childOrgUnits\n          } = sortOrgUnitsBasedOnData({\n            orgUnitSort,\n            childrenOrgUnits,\n            filteredOrgUnits\n          });\n          return {\n            filteredOrgUnits: parentOrgUnits,\n            childrenOrgUnits: childOrgUnits\n          };\n        });\n      } else {\n        setOrgUnits(({\n          childrenOrgUnits,\n          filteredOrgUnits\n        }) => {\n          const {\n            parentOrgUnits,\n            childOrgUnits\n          } = sortOrgUnitsBasedOnNames({\n            sort,\n            childrenOrgUnits,\n            filteredOrgUnits\n          });\n          return {\n            filteredOrgUnits: parentOrgUnits,\n            childrenOrgUnits: childOrgUnits\n          };\n        });\n      }\n    }\n    if (isEmpty(orgUnitSort) && sort === TableSort.DEFAULT) {\n      setDefaults();\n      return;\n    }\n    if (!isEmpty(orgUnitSort) || sort) {\n      sortOrgUnits();\n    }\n  }, [orgUnitSort, sort]);\n  return {\n    loading\n  };\n}","import { filter, flatten, isEmpty } from \"lodash\";\nimport { useEffect } from \"react\";\nimport { useRecoilValue, useResetRecoilState, useSetRecoilState } from \"recoil\";\nimport { PeriodResolverState, ScorecardDataSourceState, ScorecardNameSort, ScorecardTableOrientationState, ScorecardTableSortState, ScorecardViewState } from \"../../../../../state\";\nimport { Orientation } from \"../../../../../constants\";\nimport { sortDataSourcesBasedOnData, sortDataSourcesBasedOnNames } from \"../../../../../utils\";\nexport default function useTableDataSources(dataEngine, orgUnits) {\n  const setDataSources = useSetRecoilState(ScorecardDataSourceState);\n  const dataSearchKeyword = useRecoilValue(ScorecardViewState(\"dataSearchKeyword\"));\n  const {\n    data: sort\n  } = useRecoilValue(ScorecardNameSort(orgUnits));\n  const resetDataSources = useResetRecoilState(ScorecardDataSourceState);\n  const dataSort = useRecoilValue(ScorecardTableSortState(orgUnits));\n  const periods = useRecoilValue(PeriodResolverState);\n  const orientation = useRecoilValue(ScorecardTableOrientationState);\n  useEffect(() => {\n    function search() {\n      setDataSources(prevDataSources => {\n        return filter(prevDataSources, value => {\n          var _value$dataSources;\n          const searchIndex = flatten((_value$dataSources = value.dataSources) === null || _value$dataSources === void 0 ? void 0 : _value$dataSources.map(({\n            id,\n            displayName\n          }) => `${id}-${displayName}`)).join(\"_\");\n          return searchIndex.toLowerCase().match(RegExp(dataSearchKeyword.toLowerCase()));\n        });\n      });\n    }\n    if (dataSearchKeyword) {\n      search();\n    } else {\n      resetDataSources();\n    }\n  }, [dataSearchKeyword]);\n  useEffect(() => {\n    function sortDataSources() {\n      let dataSourceSort = [];\n      if (!isEmpty(dataSort)) {\n        if (orientation === Orientation.DATA_VS_ORG_UNIT) {\n          if (dataSort.type === \"orgUnit\") {\n            dataEngine.sortDataSourceByOrgUnit({\n              periods: periods === null || periods === void 0 ? void 0 : periods.map(({\n                id\n              }) => id),\n              orgUnit: dataSort === null || dataSort === void 0 ? void 0 : dataSort.name,\n              sortType: dataSort === null || dataSort === void 0 ? void 0 : dataSort.direction\n            }).subscribe(dSort => dataSourceSort = dSort);\n          }\n          if (dataSort.type === \"period\") {\n            const [ou, pe] = dataSort.name.split(\"-\");\n            dataEngine.sortDataSourceByOrgUnitAndPeriod({\n              period: pe,\n              orgUnit: ou,\n              sortType: dataSort === null || dataSort === void 0 ? void 0 : dataSort.direction\n            }).subscribe(dSort => dataSourceSort = dSort);\n          }\n        }\n      }\n      if (!isEmpty(dataSourceSort)) {\n        setDataSources(prevDataSources => {\n          return sortDataSourcesBasedOnData({\n            dataSort: dataSourceSort,\n            dataSources: prevDataSources\n          });\n        });\n      } else {\n        setDataSources(prevDataSources => {\n          return sortDataSourcesBasedOnNames({\n            sort: sortDataSources,\n            dataSources: prevDataSources\n          });\n        });\n      }\n    }\n    if (sort) {\n      sortDataSources();\n    }\n  }, [dataEngine, dataSort, orientation, periods, sort]);\n  return {\n    loading: false\n  };\n}","import { useEffect } from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { ScorecardDataLoadingState } from \"../../../../../state\";\nexport default function useTableLoadingState(dataEngine, orgUnits) {\n  const setLoadingState = useSetRecoilState(ScorecardDataLoadingState(orgUnits));\n  useEffect(() => {\n    const subscription = dataEngine.loading$.subscribe(setLoadingState);\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [orgUnits, dataEngine]);\n}","import { DataTableBody } from \"@dhis2/ui\";\nimport PropTypes from \"prop-types\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useRecoilValue, useResetRecoilState } from \"recoil\";\nimport AverageDataSourceRow from \"./Components/AverageDataSourceRow\";\nimport AverageOrgUnitRow from \"./Components/AverageOrgUnitRow\";\nimport ChildOrgUnitRow from \"./Components/ChildOrgUnitRow\";\nimport DataSourceRow from \"./Components/DataSourceRow\";\nimport ParentOrgUnitRow from \"./Components/ParentOrgUnitRow\";\nimport { useDataEngine } from \"@dhis2/app-runtime\";\nimport useTableConfig from \"../../hooks/useTableConfig\";\nimport { LowestOrgUnitLevel, PeriodResolverState, RefreshScorecardState, ScorecardDataLoadingState, ScorecardDataSourceState, ScorecardOrgUnitState, ScorecardTableOrientationState, ScorecardViewState, SystemSettingsState } from \"../../../../../../state\";\nimport { Orientation } from \"../../../../../../constants\";\nimport { ScorecardDataEngine } from \"../../../../../../models\";\nfunction childrenAlreadyDisplayed(orgUnit, childrenOrgUnit) {\n  return childrenOrgUnit.some(childOrgUnit => childOrgUnit.level === orgUnit.level + 1);\n}\nexport default function ScorecardTableBody({\n  orgUnits,\n  dataEngine,\n  nested\n}) {\n  var _useRecoilValue, _useRecoilValue2;\n  const {\n    loading: configLoader\n  } = useTableConfig(dataEngine, orgUnits, nested);\n  const [expandedOrgUnit, setExpandedOrgUnit] = useState();\n  const dhis2Engine = useDataEngine();\n  const {\n    calendar\n  } = useRecoilValue(SystemSettingsState);\n  const tableOrientation = useRecoilValue(ScorecardTableOrientationState);\n  const lowestOrgUnitLevel = useRecoilValue(LowestOrgUnitLevel);\n  const {\n    dataGroups\n  } = (_useRecoilValue = useRecoilValue(ScorecardViewState(\"dataSelection\"))) !== null && _useRecoilValue !== void 0 ? _useRecoilValue : {};\n  const {\n    averageRow\n  } = (_useRecoilValue2 = useRecoilValue(ScorecardViewState(\"options\"))) !== null && _useRecoilValue2 !== void 0 ? _useRecoilValue2 : {};\n  const filteredDataHolders = useRecoilValue(ScorecardDataSourceState);\n  const loading = useRecoilValue(ScorecardDataLoadingState(orgUnits));\n  const periods = useRecoilValue(PeriodResolverState);\n  const {\n    periodType\n  } = useRecoilValue(ScorecardViewState(\"periodSelection\"));\n  const {\n    childrenOrgUnits,\n    filteredOrgUnits\n  } = useRecoilValue(ScorecardOrgUnitState(orgUnits));\n  const refreshScorecard = useRecoilValue(RefreshScorecardState);\n  const resetRefreshScorecard = useResetRecoilState(RefreshScorecardState);\n  const [overallAverage, setOverallAverage] = useState();\n  useEffect(() => {\n    if (loading !== undefined && !loading) {\n      var _ref;\n      dataEngine.getOverallAverage((_ref = [...childrenOrgUnits, ...filteredOrgUnits]) === null || _ref === void 0 ? void 0 : _ref.map(({\n        id\n      }) => id)).subscribe(setOverallAverage);\n    }\n  }, [childrenOrgUnits, filteredOrgUnits, loading]);\n  useEffect(() => {\n    dataEngine.setDataQueryEngine(dhis2Engine).setDataGroups(dataGroups).setPeriods(periods).setOrgUnits([...(filteredOrgUnits !== null && filteredOrgUnits !== void 0 ? filteredOrgUnits : []), ...(childrenOrgUnits !== null && childrenOrgUnits !== void 0 ? childrenOrgUnits : [])]).setPeriodType(periodType).setCalendar(calendar).load();\n    return () => {\n      resetRefreshScorecard();\n    };\n  }, [dataGroups, filteredOrgUnits, childrenOrgUnits, periodType, periods, dataEngine, calendar]);\n  useEffect(() => {\n    if (refreshScorecard !== 0) {\n      dataEngine.refresh();\n    }\n  }, [dataEngine, refreshScorecard]);\n  return configLoader ? /*#__PURE__*/React.createElement(\"div\", null) : /*#__PURE__*/React.createElement(DataTableBody, null, /*#__PURE__*/React.createElement(Fragment, null, tableOrientation === Orientation.ORG_UNIT_VS_DATA ? /*#__PURE__*/React.createElement(Fragment, null, filteredOrgUnits === null || filteredOrgUnits === void 0 ? void 0 : filteredOrgUnits.map((orgUnit, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-break\"\n  }), orgUnit.level === lowestOrgUnitLevel.level || childrenAlreadyDisplayed(orgUnit, childrenOrgUnits) ? /*#__PURE__*/React.createElement(ParentOrgUnitRow, {\n    index: index,\n    dataEngine: dataEngine,\n    key: `${orgUnit === null || orgUnit === void 0 ? void 0 : orgUnit.id}-row`,\n    orgUnit: orgUnit,\n    overallAverage: overallAverage,\n    orgUnits: orgUnits\n  }) : /*#__PURE__*/React.createElement(ChildOrgUnitRow, {\n    index: index,\n    dataEngine: dataEngine,\n    key: `${orgUnit === null || orgUnit === void 0 ? void 0 : orgUnit.id}-row`,\n    onExpand: setExpandedOrgUnit,\n    orgUnit: orgUnit,\n    expandedOrgUnit: expandedOrgUnit,\n    overallAverage: overallAverage,\n    orgUnits: orgUnits\n  }))), childrenOrgUnits === null || childrenOrgUnits === void 0 ? void 0 : childrenOrgUnits.map((orgUnit, index) => {\n    if (orgUnit.level === lowestOrgUnitLevel.level) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"page-break\"\n      }), /*#__PURE__*/React.createElement(ParentOrgUnitRow, {\n        index: index + 1,\n        dataEngine: dataEngine,\n        key: `${orgUnit === null || orgUnit === void 0 ? void 0 : orgUnit.id}-row`,\n        orgUnit: orgUnit,\n        overallAverage: overallAverage,\n        orgUnits: orgUnits\n      }));\n    }\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-break\"\n    }), /*#__PURE__*/React.createElement(ChildOrgUnitRow, {\n      index: index + 1,\n      dataEngine: dataEngine,\n      key: `${orgUnit === null || orgUnit === void 0 ? void 0 : orgUnit.id}-row`,\n      onExpand: setExpandedOrgUnit,\n      orgUnit: orgUnit,\n      expandedOrgUnit: expandedOrgUnit,\n      overallAverage: overallAverage,\n      orgUnits: orgUnits\n    }));\n  })) : filteredDataHolders === null || filteredDataHolders === void 0 ? void 0 : filteredDataHolders.map(({\n    id,\n    dataSources\n  }, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-break\"\n  }), /*#__PURE__*/React.createElement(DataSourceRow, {\n    index: index,\n    dataEngine: dataEngine,\n    orgUnits: orgUnits,\n    dataSources: dataSources,\n    key: `${id}-row`,\n    overallAverage: overallAverage\n  }))), averageRow && (tableOrientation === Orientation.ORG_UNIT_VS_DATA ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-break\"\n  }), /*#__PURE__*/React.createElement(AverageDataSourceRow, {\n    dataEngine: dataEngine,\n    orgUnits: orgUnits,\n    overallAverage: overallAverage\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-break\"\n  }), /*#__PURE__*/React.createElement(AverageOrgUnitRow, {\n    dataEngine: dataEngine,\n    orgUnits: orgUnits,\n    overallAverage: overallAverage\n  })))));\n}\nScorecardTableBody.propTypes = {\n  dataEngine: PropTypes.instanceOf(ScorecardDataEngine).isRequired,\n  orgUnits: PropTypes.arrayOf(PropTypes.object).isRequired\n};","import i18n from \"@dhis2/d2-i18n\";\nimport { DataTableCell, DataTableColumnHeader, InputField } from \"@dhis2/ui\";\nimport { debounce } from \"lodash\";\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport classes from \"../../../scorecardTable.module.css\";\nimport { ScorecardNameSort, ScorecardViewState } from \"../../../../../../../state\";\nexport default function OrgUnitHeaderCells({\n  orgUnits,\n  nested\n}) {\n  var _useRecoilValue;\n  const [orgUnitKeyword, setOrgUnitKeyword] = useRecoilState(ScorecardViewState(\"orgUnitSearchKeyword\"));\n  const [searchValue, setSearchValue] = useState(orgUnitKeyword);\n  const {\n    itemNumber\n  } = (_useRecoilValue = useRecoilValue(ScorecardViewState(\"options\"))) !== null && _useRecoilValue !== void 0 ? _useRecoilValue : {};\n  const [sort, setSort] = useRecoilState(ScorecardNameSort(orgUnits));\n  const onSortIconClick = ({\n    direction\n  }) => {\n    setSort(prevValue => ({\n      ...prevValue,\n      orgUnit: direction\n    }));\n  };\n  const onOrgUnitSearch = useRef(debounce(setOrgUnitKeyword, 1000, {\n    trailing: true,\n    leading: false\n  }));\n  useEffect(() => {\n    onOrgUnitSearch.current(searchValue);\n  }, [searchValue]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataTableCell, {\n    rowSpan: \"3\",\n    fixed: true,\n    left: \"0\",\n    width: \"50px\"\n  }), itemNumber && /*#__PURE__*/React.createElement(DataTableCell, {\n    rowSpan: \"3\",\n    fixed: true,\n    left: \"50px\",\n    width: \"50px\"\n  }), /*#__PURE__*/React.createElement(DataTableColumnHeader, {\n    align: \"center\",\n    name: \"orgUnit\",\n    onSortIconClick: onSortIconClick,\n    sortDirection: sort === null || sort === void 0 ? void 0 : sort.orgUnit,\n    fixed: true,\n    top: \"0\",\n    left: itemNumber ? \"100px\" : \"50px\",\n    bordered: true,\n    width: \"200px\",\n    className: classes['org-unit-header-cell'],\n    rowSpan: \"3\"\n  }, !nested && /*#__PURE__*/React.createElement(InputField, {\n    dataTest: \"org-unit-search\",\n    className: \"print-hide w-100 org-unit-search\",\n    value: searchValue,\n    onChange: ({\n      value\n    }) => setSearchValue(value),\n    placeholder: i18n.t(\"Search Organisation Unit\")\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"print-show hide\"\n  }, i18n.t(\"Organisation Unit(s)\"))));\n}\nOrgUnitHeaderCells.propTypes = {\n  nested: PropTypes.bool,\n  orgUnits: PropTypes.array\n};","import i18n from \"@dhis2/d2-i18n\";\nimport { DataTableCell, DataTableRow } from \"@dhis2/ui\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport classes from \"../../../scorecardTable.module.css\";\nimport OrgUnitHeaderCells from \"./OrgUnitHeaderCells\";\nimport { PeriodResolverState, ScorecardViewState } from \"../../../../../../../state\";\nimport { ScorecardTableConstants } from \"../../../../../../../constants\";\nexport default function GroupsHeaderRow({\n  nested,\n  orgUnits\n}) {\n  var _useRecoilValue, _useRecoilValue2, _useRecoilValue3;\n  const {\n    dataGroups\n  } = (_useRecoilValue = useRecoilValue(ScorecardViewState(\"dataSelection\"))) !== null && _useRecoilValue !== void 0 ? _useRecoilValue : {};\n  const {\n    averageColumn\n  } = (_useRecoilValue2 = useRecoilValue(ScorecardViewState(\"options\"))) !== null && _useRecoilValue2 !== void 0 ? _useRecoilValue2 : {};\n  const periods = (_useRecoilValue3 = useRecoilValue(PeriodResolverState)) !== null && _useRecoilValue3 !== void 0 ? _useRecoilValue3 : [];\n  const isSingleGroup = dataGroups.length === 1;\n  return !isSingleGroup && /*#__PURE__*/React.createElement(DataTableRow, {\n    className: classes[\"table-header-row\"]\n  }, /*#__PURE__*/React.createElement(OrgUnitHeaderCells, {\n    orgUnits: orgUnits,\n    nested: nested\n  }), dataGroups === null || dataGroups === void 0 ? void 0 : dataGroups.map(({\n    title,\n    id,\n    dataHolders\n  }, index) => {\n    var _dataHolders$length, _periods$length, _dataHolders$length2, _periods$length2;\n    return /*#__PURE__*/React.createElement(DataTableCell, {\n      fixed: true,\n      className: \"scorecard-table-header header\",\n      align: \"center\",\n      bordered: true,\n      width: `${((_dataHolders$length = dataHolders === null || dataHolders === void 0 ? void 0 : dataHolders.length) !== null && _dataHolders$length !== void 0 ? _dataHolders$length : 1) * ((_periods$length = periods === null || periods === void 0 ? void 0 : periods.length) !== null && _periods$length !== void 0 ? _periods$length : 1) * ScorecardTableConstants.CELL_WIDTH}px`,\n      top: \"0\",\n      colSpan: `${((_dataHolders$length2 = dataHolders === null || dataHolders === void 0 ? void 0 : dataHolders.length) !== null && _dataHolders$length2 !== void 0 ? _dataHolders$length2 : 1) * ((_periods$length2 = periods === null || periods === void 0 ? void 0 : periods.length) !== null && _periods$length2 !== void 0 ? _periods$length2 : 1)}`,\n      key: id\n    }, title);\n  }), averageColumn && /*#__PURE__*/React.createElement(DataTableCell, {\n    width: `${ScorecardTableConstants.CELL_WIDTH}px`,\n    fixed: true,\n    align: \"center\",\n    bordered: true,\n    className: \"scorecard-table-header header\",\n    rowSpan: \"3\"\n  }, i18n.t(\"Average\")));\n}\nGroupsHeaderRow.propTypes = {\n  nested: PropTypes.bool.isRequired,\n  orgUnits: PropTypes.array.isRequired\n};","import i18n from \"@dhis2/d2-i18n\";\nimport { DataTableCell, DataTableColumnHeader, DataTableRow, Tooltip } from \"@dhis2/ui\";\nimport { head } from \"lodash\";\nimport PropTypes from 'prop-types';\nimport React from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport classes from '../../../scorecardTable.module.css';\nimport DraggableCell from \"../../TableBody/Components/DraggableCell\";\nimport DroppableCell from \"../../TableBody/Components/DroppableCell\";\nimport OrgUnitHeaderCells from \"./OrgUnitHeaderCells\";\nimport { PeriodResolverState, ScorecardTableSortState, ScorecardViewState } from \"../../../../../../../state\";\nimport { DraggableItems, ScorecardTableConstants } from \"../../../../../../../constants\";\nimport { getDataSourcesDisplayName } from \"../../../../../../../utils\";\nexport default function HoldersHeaderRow({\n  orgUnits,\n  nested\n}) {\n  var _useRecoilValue, _useRecoilValue2, _useRecoilValue3;\n  const {\n    dataGroups\n  } = (_useRecoilValue = useRecoilValue(ScorecardViewState(\"dataSelection\"))) !== null && _useRecoilValue !== void 0 ? _useRecoilValue : {};\n  const [{\n    name,\n    direction\n  }, setDataSort] = useRecoilState(ScorecardTableSortState(orgUnits));\n  const {\n    averageColumn\n  } = (_useRecoilValue2 = useRecoilValue(ScorecardViewState(\"options\"))) !== null && _useRecoilValue2 !== void 0 ? _useRecoilValue2 : {};\n  const periods = (_useRecoilValue3 = useRecoilValue(PeriodResolverState)) !== null && _useRecoilValue3 !== void 0 ? _useRecoilValue3 : [];\n  const onSortClick = direction => {\n    setDataSort({\n      ...direction,\n      type: \"data\"\n    });\n  };\n  const isSingleGroup = dataGroups.length === 1;\n  return /*#__PURE__*/React.createElement(DataTableRow, {\n    className: classes[\"table-header-row\"]\n  }, isSingleGroup && /*#__PURE__*/React.createElement(OrgUnitHeaderCells, {\n    nested: nested,\n    orgUnits: orgUnits\n  }), dataGroups === null || dataGroups === void 0 ? void 0 : dataGroups.map(({\n    dataHolders\n  }) => dataHolders === null || dataHolders === void 0 ? void 0 : dataHolders.map(({\n    id,\n    dataSources\n  }, index) => {\n    var _head, _head2;\n    return /*#__PURE__*/React.createElement(DataTableColumnHeader, {\n      onSortIconClick: onSortClick,\n      sortDirection: name === `${(_head = head(dataSources)) === null || _head === void 0 ? void 0 : _head.id}` ? direction : \"default\",\n      className: classes['holder-header-cell'],\n      dataTest: \"indicator-table-header-cell\",\n      width: `${(periods === null || periods === void 0 ? void 0 : periods.length) * ScorecardTableConstants.CELL_WIDTH}px`,\n      top: \"0\",\n      fixed: true,\n      colSpan: `${periods === null || periods === void 0 ? void 0 : periods.length}`,\n      bordered: true,\n      align: \"center\",\n      key: `${id}-column-header`,\n      name: `${(_head2 = head(dataSources)) === null || _head2 === void 0 ? void 0 : _head2.id}`\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"100%\",\n        width: \"100%\"\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      className: \"m-auto\",\n      content: i18n.t(\"Drag to row headers to change layout\")\n    }, /*#__PURE__*/React.createElement(DroppableCell, {\n      accept: [DraggableItems.ORG_UNIT_ROW]\n    }, /*#__PURE__*/React.createElement(DraggableCell, {\n      label: getDataSourcesDisplayName(dataSources),\n      type: DraggableItems.DATA_COLUMN\n    })))));\n  })), averageColumn && isSingleGroup ? /*#__PURE__*/React.createElement(DataTableCell, {\n    width: `${ScorecardTableConstants.CELL_WIDTH}px`,\n    fixed: true,\n    align: \"center\",\n    bordered: true,\n    className: \"scorecard-table-header header\",\n    rowSpan: \"3\"\n  }, i18n.t(\"Average\")) : null);\n}\nHoldersHeaderRow.propTypes = {\n  nested: PropTypes.bool,\n  orgUnits: PropTypes.array\n};","import i18n from \"@dhis2/d2-i18n\";\nimport { DataTableCell, DataTableColumnHeader, DataTableRow, InputField, Tooltip } from \"@dhis2/ui\";\nimport { debounce } from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport classes from '../../../scorecardTable.module.css';\nimport DraggableCell from \"../../TableBody/Components/DraggableCell\";\nimport DroppableCell from \"../../TableBody/Components/DroppableCell\";\nimport { PeriodResolverState, ScorecardNameSort, ScorecardOrgUnitState, ScorecardTableConfigState, ScorecardTableSortState, ScorecardViewState } from \"../../../../../../../state\";\nimport { DraggableItems, ScorecardTableConstants } from \"../../../../../../../constants\";\nexport default function OrgUnitHeaderRow({\n  orgUnits,\n  nested\n}) {\n  var _useRecoilValue, _ref;\n  const {\n    averageColumn,\n    itemNumber\n  } = useRecoilValue(ScorecardViewState(\"options\"));\n  const {\n    filteredOrgUnits,\n    childrenOrgUnits\n  } = useRecoilValue(ScorecardOrgUnitState(orgUnits));\n  const periods = (_useRecoilValue = useRecoilValue(PeriodResolverState)) !== null && _useRecoilValue !== void 0 ? _useRecoilValue : [];\n  const [dataKeyword, setDataKeyword] = useRecoilState(ScorecardViewState(\"dataSearchKeyword\"));\n  const [searchValue, setSearchValue] = useState(dataKeyword);\n  const [sort, setSort] = useRecoilState(ScorecardNameSort(orgUnits));\n  const [{\n    name,\n    direction\n  }, setDataSort] = useRecoilState(ScorecardTableSortState(orgUnits));\n  const onDataSearch = useRef(debounce(setDataKeyword, 1000, {\n    trailing: true,\n    leading: false\n  }));\n  const {\n    nameColumnWidth\n  } = useRecoilValue(ScorecardTableConfigState(orgUnits));\n  useEffect(() => {\n    onDataSearch.current(searchValue);\n  }, [searchValue]);\n  const onSortIconClick = ({\n    direction\n  }) => {\n    setSort(prevValue => ({\n      ...prevValue,\n      data: direction\n    }));\n  };\n  const onDataSortClick = direction => {\n    setDataSort({\n      ...direction,\n      type: \"orgUnit\"\n    });\n  };\n  return /*#__PURE__*/React.createElement(DataTableRow, {\n    className: classes[\"table-header-row\"]\n  }, /*#__PURE__*/React.createElement(DataTableCell, {\n    rowSpan: \"2\",\n    fixed: true,\n    left: \"0\",\n    width: \"50px\"\n  }), itemNumber && /*#__PURE__*/React.createElement(DataTableCell, {\n    rowSpan: \"2\",\n    fixed: true,\n    left: \"50px\",\n    width: \"50px\"\n  }), /*#__PURE__*/React.createElement(DataTableColumnHeader, {\n    onSortIconClick: onSortIconClick,\n    sortDirection: sort === null || sort === void 0 ? void 0 : sort.data,\n    align: \"center\",\n    fixed: true,\n    top: \"0\",\n    left: itemNumber ? \"100px\" : \"50px\",\n    width: nameColumnWidth,\n    bordered: true,\n    className: classes['org-unit-header-cell'],\n    rowSpan: \"2\"\n  }, !nested && /*#__PURE__*/React.createElement(InputField, {\n    className: \"print-hide w-100 data-search\",\n    value: searchValue,\n    onChange: ({\n      value\n    }) => setSearchValue(value),\n    placeholder: i18n.t(\"Search Data\")\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"print-show hide\"\n  }, i18n.t(\"Data\"))), (_ref = [...filteredOrgUnits, ...childrenOrgUnits]) === null || _ref === void 0 ? void 0 : _ref.map(({\n    displayName,\n    id\n  }) => {\n    var _periods$length;\n    return /*#__PURE__*/React.createElement(DataTableColumnHeader, {\n      name: `${id}`,\n      sortDirection: name === id ? direction : \"default\",\n      onSortIconClick: onDataSortClick,\n      fixed: true,\n      className: classes['data-header-cell'],\n      align: \"center\",\n      bordered: true,\n      width: `${(periods === null || periods === void 0 ? void 0 : periods.length) * ScorecardTableConstants.CELL_WIDTH}px`,\n      colSpan: `${(_periods$length = periods === null || periods === void 0 ? void 0 : periods.length) !== null && _periods$length !== void 0 ? _periods$length : 1}`,\n      key: id\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"100%\",\n        width: \"100%\"\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      className: \"m-auto\",\n      content: i18n.t(\"Drag to row headers to change layout \")\n    }, /*#__PURE__*/React.createElement(DroppableCell, {\n      accept: [DraggableItems.DATA_ROW]\n    }, /*#__PURE__*/React.createElement(DraggableCell, {\n      label: displayName,\n      type: DraggableItems.ORG_UNIT_COLUMN\n    })))));\n  }), averageColumn && /*#__PURE__*/React.createElement(DataTableCell, {\n    width: `${ScorecardTableConstants.CELL_WIDTH}px`,\n    fixed: true,\n    align: \"center\",\n    bordered: true,\n    className: classes['data-header-cell'],\n    rowSpan: \"2\"\n  }, i18n.t(\"Average\")));\n}\nOrgUnitHeaderRow.propTypes = {\n  nested: PropTypes.bool.isRequired,\n  orgUnits: PropTypes.arrayOf(PropTypes.object).isRequired\n};","import { DataTableColumnHeader, DataTableRow } from \"@dhis2/ui\";\nimport { head } from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport classes from '../../../scorecardTable.module.css';\nimport { PeriodResolverState, ScorecardOrgUnitState, ScorecardTableOrientationState, ScorecardTableSortState, ScorecardViewState } from \"../../../../../../../state\";\nimport { Orientation } from \"../../../../../../../constants\";\nexport default function PeriodHeaderRow({\n  orgUnits\n}) {\n  var _useRecoilValue, _useRecoilValue2, _useRecoilValue3, _ref;\n  const {\n    dataGroups\n  } = (_useRecoilValue = useRecoilValue(ScorecardViewState(\"dataSelection\"))) !== null && _useRecoilValue !== void 0 ? _useRecoilValue : {};\n  const {\n    filteredOrgUnits,\n    childrenOrgUnits\n  } = (_useRecoilValue2 = useRecoilValue(ScorecardOrgUnitState(orgUnits))) !== null && _useRecoilValue2 !== void 0 ? _useRecoilValue2 : {};\n  const orientation = useRecoilValue(ScorecardTableOrientationState);\n  const periods = (_useRecoilValue3 = useRecoilValue(PeriodResolverState)) !== null && _useRecoilValue3 !== void 0 ? _useRecoilValue3 : [];\n  const [{\n    name: sortName,\n    direction\n  }, setDataSort] = useRecoilState(ScorecardTableSortState(orgUnits));\n  const onSortClick = direction => {\n    setDataSort({\n      ...direction,\n      type: \"period\"\n    });\n  };\n  return periods.length > 1 ? /*#__PURE__*/React.createElement(DataTableRow, null, orientation === Orientation.ORG_UNIT_VS_DATA ? dataGroups === null || dataGroups === void 0 ? void 0 : dataGroups.map(({\n    dataHolders\n  }) => dataHolders === null || dataHolders === void 0 ? void 0 : dataHolders.map(({\n    id,\n    dataSources\n  }) => periods === null || periods === void 0 ? void 0 : periods.map(({\n    name,\n    id: periodId\n  }) => {\n    var _head, _head2;\n    return /*#__PURE__*/React.createElement(DataTableColumnHeader, {\n      dataTest: \"test-period-table-scorecard\",\n      fixed: true,\n      top: \"0\",\n      onSortIconClick: onSortClick,\n      sortDirection: sortName === `${(_head = head(dataSources)) === null || _head === void 0 ? void 0 : _head.id}-${periodId}` ? direction : \"default\",\n      width: \"100px\",\n      bordered: true,\n      align: \"center\",\n      key: `${id}-${periodId}`,\n      className: classes[\"period-header-cell\"],\n      name: `${(_head2 = head(dataSources)) === null || _head2 === void 0 ? void 0 : _head2.id}-${periodId}`\n    }, name);\n  }))) : (_ref = [...filteredOrgUnits, ...childrenOrgUnits]) === null || _ref === void 0 ? void 0 : _ref.map(({\n    id\n  }) => periods === null || periods === void 0 ? void 0 : periods.map(({\n    name,\n    id: periodId\n  }) => /*#__PURE__*/React.createElement(DataTableColumnHeader, {\n    dataTest: \"test-period-table-scorecard\",\n    fixed: true,\n    top: \"0\",\n    onSortIconClick: onSortClick,\n    sortDirection: sortName === `${id}-${periodId}` ? direction : \"default\",\n    width: \"100px\",\n    bordered: true,\n    align: \"center\",\n    key: `${id}-${periodId}`,\n    className: \"scorecard-table-cell header\",\n    name: `${id}-${periodId}`\n  }, name)))) : null;\n}\nPeriodHeaderRow.propTypes = {\n  orgUnits: PropTypes.arrayOf(PropTypes.object).isRequired\n};","import { DataTableHead } from \"@dhis2/ui\";\nimport PropTypes from \"prop-types\";\nimport React, { useMemo } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport GroupsHeaderRow from \"./Components/GroupsHeaderRow\";\nimport HoldersHeaderRow from \"./Components/HoldersHeaderRow\";\nimport OrgUnitHeaderRow from \"./Components/OrgUnitHeaderRow\";\nimport PeriodHeaderRow from \"./Components/PeriodHeaderRow\";\nimport { ScorecardTableConfigState } from \"../../../../../../state\";\nfunction getHeaderRow(type) {\n  switch (type) {\n    case \"groups\":\n      return GroupsHeaderRow;\n    case \"data\":\n      return HoldersHeaderRow;\n    case \"periods\":\n      return PeriodHeaderRow;\n    case \"orgUnits\":\n      return OrgUnitHeaderRow;\n    default:\n      return null;\n  }\n}\nexport default function TableHeader({\n  orgUnits,\n  nested\n}) {\n  const {\n    columns\n  } = useRecoilValue(ScorecardTableConfigState(orgUnits));\n  const headerRows = useMemo(() => columns === null || columns === void 0 ? void 0 : columns.map(getHeaderRow), [columns]);\n  return /*#__PURE__*/React.createElement(DataTableHead, null, headerRows === null || headerRows === void 0 ? void 0 : headerRows.map((Row, i) => /*#__PURE__*/React.createElement(Row, {\n    orgUnits: orgUnits,\n    nested: nested,\n    key: `${columns[i]}-header-row`\n  })));\n}\nTableHeader.propTypes = {\n  nested: PropTypes.bool.isRequired,\n  orgUnits: PropTypes.arrayOf(PropTypes.object).isRequired\n};","import React from 'react';\nimport { useRecoilValue } from \"recoil\";\nimport { ScorecardTableConfigState } from \"../../../../../../state\";\nexport default function TableWidth({\n  orgUnits\n}) {\n  const {\n    nameColumnWidth\n  } = useRecoilValue(ScorecardTableConfigState(orgUnits));\n  return /*#__PURE__*/React.createElement(\"colgroup\", null, /*#__PURE__*/React.createElement(\"col\", {\n    width: \"50px\"\n  }), /*#__PURE__*/React.createElement(\"col\", {\n    width: \"50px\"\n  }), /*#__PURE__*/React.createElement(\"col\", {\n    width: `${nameColumnWidth}`\n  }));\n}\n;","import { DataTable } from \"@dhis2/ui\";\nimport PropTypes from \"prop-types\";\nimport React, { Suspense, useEffect, useMemo } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { useRecoilCallback, useRecoilValue } from \"recoil\";\nimport ScorecardTableBody from \"./Components/TableBody\";\nimport TableHeader from \"./Components/TableHeader\";\nimport TableLoader, { TableLinearLoader } from \"./Components/TableLoader\";\nimport classes from \"./scorecardTable.module.css\";\nimport TableWidth from \"./Components/TableWidth\";\nimport { ScorecardDataEngine } from \"../../../../models\";\nimport { ScorecardDataLoadingState, ScorecardTableConfigState, ScreenDimensionState } from \"../../../../state\";\nexport default function ScorecardTable({\n  orgUnits,\n  nested,\n  initialDataEngine\n}) {\n  const dataEngine = useMemo(() => initialDataEngine !== null && initialDataEngine !== void 0 ? initialDataEngine : new ScorecardDataEngine(), [initialDataEngine]);\n  const {\n    width: screenWidth\n  } = useRecoilValue(ScreenDimensionState);\n  const {\n    tableWidth\n  } = useRecoilValue(ScorecardTableConfigState(orgUnits));\n  const reset = useRecoilCallback(({\n    reset\n  }) => () => {\n    reset(ScorecardDataLoadingState(orgUnits));\n    dataEngine.reset(true);\n  });\n  useEffect(() => {\n    return () => {\n      reset();\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-100 pb-32 flex-1 print-area scorecard-table overflow-hidden\"\n  }, /*#__PURE__*/React.createElement(DndProvider, {\n    backend: HTML5Backend\n  }, /*#__PURE__*/React.createElement(DataTable, {\n    className: classes[\"table-print\"],\n    layout: \"fixed\",\n    scrollWidth: tableWidth !== null && tableWidth !== void 0 ? tableWidth : screenWidth\n  }, /*#__PURE__*/React.createElement(TableWidth, {\n    orgUnits: orgUnits\n  }), /*#__PURE__*/React.createElement(TableHeader, {\n    width: screenWidth,\n    orgUnits: orgUnits,\n    nested: nested\n  }), /*#__PURE__*/React.createElement(TableLinearLoader, {\n    orgUnits: orgUnits,\n    dataEngine: dataEngine\n  }), /*#__PURE__*/React.createElement(Suspense, {\n    fallback: /*#__PURE__*/React.createElement(TableLoader, {\n      orgUnits: orgUnits\n    })\n  }, /*#__PURE__*/React.createElement(ScorecardTableBody, {\n    dataEngine: dataEngine,\n    orgUnits: orgUnits\n  })))));\n}\nScorecardTable.propTypes = {\n  nested: PropTypes.bool.isRequired,\n  orgUnits: PropTypes.arrayOf(PropTypes.object).isRequired,\n  initialDataEngine: PropTypes.instanceOf(ScorecardDataEngine)\n};","import { atom } from \"recoil\";\nimport { DEFAULT_LAYOUT } from \"../../../../../../../constants\";\nconst LayoutState = atom({\n  key: \"cell-analysis-layout\",\n  default: DEFAULT_LAYOUT\n});\nexport { LayoutState };","import { AnalyticsResult, Fn } from \"@iapps/function-analytics\";\nimport { isEmpty } from \"lodash\";\nimport { atom, selector } from \"recoil\";\nimport { InitialOrgUnits } from \"./orgUnit\";\nimport { ResolvedPeriodState } from \"./period\";\nimport { EngineState } from \"../../../../../../../state\";\nimport { getCustomFunctionAnalytics } from \"../../../../../../../utils\";\nconst DataState = selector({\n  key: \"cell-analysis-data\",\n  get: async ({\n    get\n  }) => {\n    const {\n      orgUnits\n    } = get(InitialOrgUnits);\n    const periods = get(ResolvedPeriodState);\n    const dataSources = get(DataSourceState);\n    const engine = get(EngineState);\n    if (!isEmpty(orgUnits) && !isEmpty(periods) && !isEmpty(dataSources)) {\n      const dataSource = dataSources[0];\n      if (dataSource.type === \"customFunction\") {\n        return new AnalyticsResult(await getCustomFunctionAnalytics(engine, {\n          functions: [dataSource.id],\n          orgUnits: orgUnits.map(({\n            id\n          }) => id),\n          periods: periods === null || periods === void 0 ? void 0 : periods.map(({\n            id\n          }) => id)\n        }));\n      } else {\n        var _periods$map, _dataSources$map;\n        return await new Fn.Analytics().setDimension(\"ou\", `${orgUnits.map(({\n          id\n        }) => id).join(\";\")}`).setPeriod(periods === null || periods === void 0 ? void 0 : (_periods$map = periods.map(({\n          id\n        }) => id)) === null || _periods$map === void 0 ? void 0 : _periods$map.join(\";\")).setData(dataSources === null || dataSources === void 0 ? void 0 : (_dataSources$map = dataSources.map(({\n          id\n        }) => id)) === null || _dataSources$map === void 0 ? void 0 : _dataSources$map.join(\";\")).get();\n      }\n    }\n  }\n});\nconst DataSourceState = atom({\n  key: \"cell-analysis-data-source\",\n  default: []\n});\nexport { DataState, DataSourceState };","import { Period } from \"@iapps/period-utilities\";\nimport { compact, differenceBy, filter, isArray, isEmpty, uniqBy } from \"lodash\";\nimport { atom, selector } from \"recoil\";\nimport { ScorecardViewState } from \"../../../../../../../state\";\nconst PeriodState = atom({\n  key: \"cell-analysis-period-state\",\n  default: selector({\n    key: \"cell-analysis-period-selector\",\n    get: ({\n      get\n    }) => {\n      return get(ScorecardViewState(\"periodSelection\"));\n    }\n  })\n});\nconst cellPeriodOptionAtom = atom({\n  key: \"cell-period-option-state\",\n  default: []\n});\nconst cellPeriodOptionSelector = selector({\n  key: \"cell-period-option-selector\",\n  get: ({\n    get\n  }) => {\n    return get(cellPeriodOptionAtom);\n  },\n  set: ({\n    set\n  }, value) => {\n    set(cellPeriodOptionAtom, value);\n  },\n  reset: ({\n    reset\n  }) => {\n    reset(cellPeriodOptionAtom);\n  }\n});\nconst ResolvedPeriodState = selector({\n  key: \"cell-analysis-period-resolver\",\n  get: ({\n    get\n  }) => {\n    var _get;\n    const {\n      periods\n    } = (_get = get(PeriodState)) !== null && _get !== void 0 ? _get : {};\n    if (!isEmpty(periods)) {\n      const relativePeriods = filter(get(cellPeriodOptionAtom).length > 0 ? get(cellPeriodOptionAtom) : periods, ({\n        id\n      }) => {\n        var _period$type;\n        const period = new Period().setPreferences({\n          allowFuturePeriods: true\n        }).getById(id);\n        return period === null || period === void 0 ? void 0 : (_period$type = period.type) === null || _period$type === void 0 ? void 0 : _period$type.match(RegExp(\"Relative\"));\n      });\n      let allPeriods = [...differenceBy(periods, relativePeriods, \"id\")];\n      get(cellPeriodOptionAtom).length > 0 ? allPeriods = [...differenceBy(relativePeriods, \"id\")] : allPeriods = [...differenceBy(periods, relativePeriods, \"id\")];\n      for (const period of relativePeriods) {\n        const periodInstance = new Period().setPreferences({\n          allowFuturePeriods: true\n        }).getById(period === null || period === void 0 ? void 0 : period.id);\n        const actualPeriods = isArray(periodInstance === null || periodInstance === void 0 ? void 0 : periodInstance.iso) ? periodInstance === null || periodInstance === void 0 ? void 0 : periodInstance.iso : [periodInstance === null || periodInstance === void 0 ? void 0 : periodInstance.iso];\n        allPeriods = allPeriods.concat(actualPeriods);\n      }\n      return uniqBy(compact(allPeriods), \"id\");\n    }\n    return [];\n  }\n});\nexport { PeriodState, ResolvedPeriodState, cellPeriodOptionSelector, cellPeriodOptionAtom };","import { find, isEmpty, uniqBy } from \"lodash\";\nimport { atom, selector } from \"recoil\";\nimport { OrgUnitLevels, PeriodResolverState, ScorecardDataSourceState, ScorecardViewState, UserState } from \"../../../../../../../state\";\nconst OrgUnitState = atom({\n  key: \"cell-analysis-orgUnit-state\",\n  default: selector({\n    key: \"cell-analysis-orgUnit-selector\",\n    get: ({\n      get\n    }) => {\n      return get(ScorecardViewState(\"orgUnitSelection\"));\n    }\n  })\n});\nconst userSubUnitsQuery = {\n  ou: {\n    resource: \"analytics\",\n    params: ({\n      pe,\n      dx,\n      ou\n    }) => ({\n      dimension: [`ou:${ou}`, `pe:${pe}`, `dx:${dx}`],\n      skipData: true\n    })\n  }\n};\nconst orgUnitOptionOnCell = atom({\n  key: \"orgUnitOptionCell\",\n  default: false\n});\nconst orgUnitSelectorOptionOnCell = selector({\n  key: \"orgUnitOptionCellSelector\",\n  get: ({\n    get\n  }) => {\n    return get(orgUnitOptionOnCell);\n  },\n  set: ({\n    set\n  }, value) => {\n    set(orgUnitOptionOnCell, value);\n  }\n});\nexport const InitialOrgUnits = selector({\n  key: \"cell-analysis-initial-org-units-resolver\",\n  get: async ({\n    get\n  }) => {\n    var _get, _get2;\n    const {\n      orgUnits,\n      levels,\n      groups,\n      userOrgUnit,\n      userSubUnit,\n      userSubX2Unit\n    } = get(OrgUnitState);\n    const periods = (_get = get(PeriodResolverState)) !== null && _get !== void 0 ? _get : [];\n    const dataHolders = (_get2 = get(ScorecardDataSourceState)) !== null && _get2 !== void 0 ? _get2 : [];\n    const {\n      organisationUnits\n    } = get(UserState);\n    const orgUnitLevels = get(OrgUnitLevels);\n    let resolvedOrgUnits = orgUnits;\n    if (!isEmpty(dataHolders) && !isEmpty(periods)) {\n      if (userSubX2Unit) {\n        resolvedOrgUnits = [...resolvedOrgUnits, {\n          id: \"USER_ORGUNIT_GRANDCHILDREN\"\n        }];\n      }\n      if (userSubUnit) {\n        resolvedOrgUnits = [...resolvedOrgUnits, {\n          id: \"USER_ORGUNIT_CHILDREN\"\n        }];\n      }\n      if (userOrgUnit) {\n        resolvedOrgUnits = [...resolvedOrgUnits, ...organisationUnits];\n      }\n      if (!isEmpty(levels)) {\n        var _levels$map;\n        resolvedOrgUnits = [...resolvedOrgUnits, ...((_levels$map = levels === null || levels === void 0 ? void 0 : levels.map(level => {\n          var _find;\n          return {\n            id: `LEVEL-${(_find = find(orgUnitLevels, {\n              id: level\n            })) === null || _find === void 0 ? void 0 : _find.level}`\n          };\n        })) !== null && _levels$map !== void 0 ? _levels$map : [])];\n      }\n      if (!isEmpty(groups)) {\n        var _groups$map;\n        resolvedOrgUnits = [...resolvedOrgUnits, ...((_groups$map = groups === null || groups === void 0 ? void 0 : groups.map(group => ({\n          id: `OU_GROUP-${group}`\n        }))) !== null && _groups$map !== void 0 ? _groups$map : [])];\n      }\n    }\n    return {\n      orgUnits: uniqBy(resolvedOrgUnits, \"id\")\n    };\n  }\n});\nexport { OrgUnitState, orgUnitOptionOnCell, orgUnitSelectorOptionOnCell };"],"names":["SingleAverageCell","cellRef","dataSources","values","bold","period","orgUnit","_getLegend","dataSource","defaultLegendDefinitions","useRecoilValue","ScorecardLegendDefinitionSelector","orgUnitLevels","OrgUnitLevels","legendDefinitions","ScorecardViewState","color","cellColor","getLegend","head","legends","max","weight","defaultLegends","dataOrgUnitLevel","specificTargets","undefined","React","SingleCellSvg","value","round","LinkedAverageCell","_getLegend2","_getLegend3","topDataSource","bottomDataSource","topCellColor","bottomCellColor","last","LinkedCellSvg","topColor","bottomColor","topValue","bottomValue","ComplexAverageCell","Object","tableCellRef","setTableCellRef","useState","ref","className","align","length","AverageCell","singleCellRef","setSingleCellRef","propTypes","PropTypes","isRequired","AverageDataContainer","orgUnits","dataEngine","average","setAverage","loading","ScorecardDataLoadingState","childrenOrgUnits","filteredOrgUnits","ScorecardOrgUnitState","useEffect","subscription","_ref","isEmpty","getOrgUnitColumnAverage","subscribe","getDataSourceColumnAverage","map","id","unsubscribe","AverageDataSourceRow","overallAverage","periods","PeriodResolverState","dataHolders","ScorecardDataSourceState","averageColumn","itemNumber","DataTableRow","classes","bordered","DataTableCell","fixed","left","width","i18n","t","holderId","key","AverageOrgUnitRow","periodId","ScorecardDataEngine","getAllowedChartType","chartType","newChartType","getPlotOptions","chartConfiguration","plotOptionChartType","type","plotOptions","series","cursor","point","events","click","clickedChart","window","this","currentColor","update","dataLabels","y","borderWidth","useHTML","allowPointSelect","showInLegend","hideLegend","colorByPoint","stacking","percentStackedValues","lineWidth","states","hover","enabled","getChartSubtitleObject","analyticsObject","hideSubtitle","text","zAxisType","zAxis","metaData","itemId","names","join","style","fontWeight","fontSize","getChartTitleObject","hideTitle","title","getTooltipOptions","tooltipChartType","tooltipObject","pointFormat","headerFormat","getChartAttributeOptions","chartOptions","renderTo","renderId","zoomType","plotBackgroundColor","plotBorderWidth","plotShadow","polar","getSanitizedanalyticsBasedOnConfiguration","cumulativeValues","xAxisType","yAxisType","newAnalyticsObject","clone","yAxisDimensionArray","metadata","xAxisDimensionArray","reverse","yAxisDimensionIndex","findIndex","headers","find","xAxisDimensionIndex","dataValueIndex","newRows","forEach","yAxisDimensionValue","initialValue","xAxisDimensionValue","rows","row","parseInt","newRow","push","assign","getCumulativeFormatForAnalytics","getSanitizedChartObject","chartObject","dataSelectionGroups","flatten","filter","dataSelections","dataSelection","groups","group","dataSelectionGroupMembers","members","member","dataIndexesArrayToRemove","seriesObject","data","dataItem","dataIndex","indexOf","newDataIndexes","each","dataIndexes","intersection","newSeries","splitedDataItemId","split","associatedGroup","some","categoryCount","newCategories","xAxis","categories","category","newCategory","innerCategory","innerCategoryIndex","exporting","xAxisCategories","scale","subtitle","labels","rotation","textAlign","textOverflow","paddingBottom","buttons","contextButton","getChartAxisItems","axisTypeArray","isCategory","items","metadataNames","axisType","axisIndex","_analyticsObject$meta","itemKeys","availableItems","itemKey","item","name","trim","getChartPaneOptions","paneOptions","size","center","startAngle","endAngle","background","backgroundColor","innerRadius","outerRadius","shape","getChartSeriesDataLabelsOptions","showData","format","getChartSeriesData","yAxisItemId","xAxisItems","yAxisItemIndex","xAxisItemIndex","xAxisItem","seriesValue","analyticsRows","xAxisItemId","finalValue","seriesValues","xAxisRowId","parseFloat","isNaN","isRatio","toString","valueSum","reduce","sum","count","getChartSeriesValue","getChartSeries","yAxisItems","yAxisItem","yAxisIndex","index","turboThreshold","pointPlacement","getChartYAxisOptions","yAxes","axes","newYAxes","min","rangeAxisMinValue","rangeAxisMaxValue","yAxis","opposite","orientation","dashStyle","targetLineValue","zIndex","label","targetLineLabel","baseLineValue","baseLineLabel","getCombinedChartSeriesData","seriesData","combinedSeriesData","seriesDataArray","seriesDataObject","availableSeriesData","seriesDataIndex","newSeriesObject","slice","getSortedChartSeries","sortOrder","seriesCategories","sortBy","seriesCategory","getSolidGaugeChartObject","initialChartObject","newChartObject","yAxisSeriesItems","pane","sortedSeries","getSpiderWebChartObject","xAxisDimension","getXAxisItemsFromChartConfiguration","xAxisOptions","tickmarkPlacement","xAxisCategory","allowOverlap","wordBreak","getChartXAxisOptions","reversedXAxisItems","seriesDataObjects","seriesCategoryNamesArray","idArray","newCategoryArray","reversedIdArray","times","num","parentCategoryItem","parentCategory","parentCategoryIndex","newChildrenCategories","childrenCategoryItem","groupedCategoryNames","groupBy","categoryNameGroupKeys","sanitizedCategoryNames","categoryObject","uniqBy","getSanitizedChartXAxisCategories","getCharObject","incommingAnalyticObject","chart","credits","colors","tooltip","getInitialChartObject","newChartConfiguration","getChartTitle","favoriteObject","interventionName","displayName","chartTypesAtom","atom","default","CHART_TYPES","chartUpdateAtom","currentChartTypeAtom","chartConfigurationSelector","selectorFamily","get","layout","currentChartType","visualizationSettings","visualizationLayout","hasOwnProperty","hideEmptyRows","legendAlign","categoryRotation","reverseLegend","showLabels","multiAxisTypes","selectedChartTypes","column","ChartItemComponent","chartHeight","chartTypes","setChartUpdate","useSetRecoilState","setCurrentChartType","useRecoilState","DataState","LayoutState","drawChart","setTimeout","Highcharts","height","chartTypePosition","onClick","e","event","stopPropagation","toUpperCase","updateChartType","description","src","icon","alt","ChartListComponent","Suspense","fallback","DictionaryAnalysis","DimensionsSelector","TableAnalysis","viewTypes","TableChartIcon","component","ChartIcon","DescriptionIcon","TableCellAnalysis","onClose","dataHolder","dataState","useRecoilValueLoadable","viewType","setViewType","SelectedView","resetPeriodOptionsCell","useResetRecoilState","cellPeriodOptionAtom","resetOrgUnitOptionCell","orgUnitSelectorOptionOnCell","setStates","useRecoilCallback","set","snapshot","orgUnitOptionValue","getLoadable","contents","lowestOrgUnitLevel","LowestOrgUnitLevel","DataSourceState","OrgUnitState","orgUnitSelection","OrgUnitSelection","newOrgUnitSelection","cloneDeep","currentOrgUnitLevel","level","orgUnitCurrentUserBelowLevels","orgUnitUpdateSelector","PeriodState","resetStates","reset","Modal","position","large","ModalContent","overflow","minHeight","getDataSourcesDisplayName","ModalLoader","margin","state","FullPageError","error","ModalActions","bottom","Chip","selected","Button","SingleDataCell","indicator","_useRecoilValue","arrows","current","previous","increasing","useMemo","effectiveGap","displayArrows","getIncreasingStatus","status","LinkedDataCell","topData","bottomData","topIndicator","bottomIndicator","_useRecoilValue2","topCurrent","topPrevious","bottomCurrent","bottomPrevious","topIncreasing","bottomIncreasing","topStatus","bottomStatus","grey100","FurtherAnalysisMenu","stateActionRef","setStateActionRef","setAnalysisOpen","showSubMenu","setShowSubMenu","setPeriodOptionValueStates","cellPeriodOptionSelector","setOrgUnitOptionValueStates","Popover","onClickOutside","placement","reference","Menu","MenuItem","IconVisualizationColumnStacked24","IconDimensionOrgUnit16","toggleSubMenu","prevState","IconVisualizationLine24","styles","Period","setPreferences","allowFuturePeriods","getById","DataContainer","orgUnitId","analysisOpen","setTopData","setBottomData","resetPeriodsOptionSelection","resetOrgUnitOptionSelection","orgUnitOptionOnCell","setTableRef","top","topKey","bottomKey","topSub","bottomSub","minWidth","onContextMenu","preventDefault","target","_","TableLoader","screenWidth","useMediaQuery","CircularLoader","small","TableLinearLoader","colSpan","ScorecardTableConfigState","progress","setProgress","getProgress","LinearLoader","amount","DroppableCell","accept","children","setOrientation","ScorecardTableOrientationState","onDrop","useRef","debounce","canDrop","dropRef","useDrop","drop","Orientation","ORG_UNIT_VS_DATA","DATA_VS_ORG_UNIT","collect","monitor","isOver","border","grey700","_extends","bind","n","arguments","r","call","apply","DraggableCell","props","isDragging","dragRef","useDrag","grey400","opacity","padding","OrgUnitContainer","showHierarchy","hierarchy","DraggableItems","ORG_UNIT_ROW","ChildOrgUnitRow","expandedOrgUnit","onExpand","emptyRows","averageDisplayType","setIsEmpty","dataGroups","onExpandClick","useCallback","rowAverage","getOrgUnitAverage","rowStatusSub","isRowEmpty","Component","dataTest","expanded","onExpandToggle","expandableContent","ScorecardTable","nested","Tooltip","content","DATA_COLUMN","groupId","AverageDisplayType","ALL","BELOW_AVERAGE","ABOVE_AVERAGE","DataSourceRow","isDataSourcesRowEmpty","rowAverageSub","getDataSourceAverage","ORG_UNIT_COLUMN","DATA_ROW","_head","ParentOrgUnitRow","useTableConfig","orgUnitLoading","setLoading","engine","useDataEngine","setOrgUnits","searchKeyword","sort","ScorecardNameSort","dataSort","ScorecardTableSortState","orgUnitSort","setOrgUnitSort","setDefaults","async","searchedOrgUnits","searchOrganisationUnit","prevOrgUnits","search","catch","console","finally","_dataSort$name","dx","pe","sortOrgUnitsByDataAndPeriod","sortType","direction","sortOrgUnitsByData","setDataSort","TableSort","DEFAULT","parentOrgUnits","childOrgUnits","sortOrgUnitsBasedOnNames","sortOrgUnitsBasedOnData","useTableOrgUnits","dataSourcesLoading","setDataSources","dataSearchKeyword","resetDataSources","prevDataSources","_value$dataSources","toLowerCase","match","RegExp","sortDataSources","dataSourceSort","sortDataSourceByOrgUnit","dSort","ou","sortDataSourceByOrgUnitAndPeriod","sortDataSourcesBasedOnNames","sortDataSourcesBasedOnData","useTableDataSources","setLoadingState","loading$","useTableLoadingState","ScorecardTableBody","configLoader","setExpandedOrgUnit","dhis2Engine","calendar","SystemSettingsState","tableOrientation","averageRow","filteredDataHolders","periodType","refreshScorecard","RefreshScorecardState","resetRefreshScorecard","setOverallAverage","getOverallAverage","setDataQueryEngine","setDataGroups","setPeriods","setPeriodType","setCalendar","load","refresh","DataTableBody","Fragment","childrenOrgUnit","childOrgUnit","childrenAlreadyDisplayed","OrgUnitHeaderCells","orgUnitKeyword","setOrgUnitKeyword","searchValue","setSearchValue","setSort","onOrgUnitSearch","trailing","leading","rowSpan","DataTableColumnHeader","onSortIconClick","prevValue","sortDirection","InputField","onChange","placeholder","GroupsHeaderRow","_useRecoilValue3","_dataHolders$length","_periods$length","_dataHolders$length2","_periods$length2","ScorecardTableConstants","CELL_WIDTH","HoldersHeaderRow","onSortClick","isSingleGroup","_head2","OrgUnitHeaderRow","dataKeyword","setDataKeyword","onDataSearch","nameColumnWidth","onDataSortClick","PeriodHeaderRow","sortName","getHeaderRow","TableHeader","columns","headerRows","DataTableHead","Row","i","TableWidth","initialDataEngine","ScreenDimensionState","tableWidth","DndProvider","backend","HTML5Backend","DataTable","scrollWidth","DEFAULT_LAYOUT","selector","InitialOrgUnits","ResolvedPeriodState","EngineState","AnalyticsResult","getCustomFunctionAnalytics","functions","Fn","Analytics","setDimension","setPeriod","_periods$map","setData","_dataSources$map","_get","relativePeriods","_period$type","allPeriods","differenceBy","periodInstance","actualPeriods","isArray","iso","concat","compact","_get2","levels","userOrgUnit","userSubUnit","userSubX2Unit","organisationUnits","UserState","resolvedOrgUnits","_levels$map","_groups$map","_find"],"sourceRoot":""}